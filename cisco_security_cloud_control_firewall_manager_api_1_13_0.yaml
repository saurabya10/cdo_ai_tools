openapi: 3.0.1
info:
    title: Cisco Security Cloud Control Firewall Manager API
    version: 1.13.0
    description: Use the documentation to explore the endpoints Security Cloud Control Firewall Manager has to offer
    contact:
        name: Cisco Security Cloud Control TAC
        email: cdo.tac@cisco.com
paths:
    /.well-known/jwks.json:
        get:
            description: 'Retrieves the JSON Web Key Set (JWKS), which is a set of keys containing the public keys used to verify any JSON Web Token (JWT) issued by the Authorization Server and signed using the RS256 signing algorithm. Note: Verification of the token using a JSON Web Key does not guarantee validity due to the possibility of revocation.'
            operationId: getJwks
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JwkSet'
                    description: The JSON Web Key Set.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Fetch JSON Web Key Set
            tags:
                - Meta
    /v1/ai-assistant/conversations:
        get:
            description: 'Get a list of AI Assistant Conversations. Note: the total number of conversations is set to -1 as this information is currently unavailable.'
            operationId: getConversations
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AiAssistantConversationPage'
                    description: List of Conversations
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Conversations
            tags:
                - AI Assistant
        post:
            description: Start a new conversation with the AI Assistant by asking a question.
            operationId: askAiAssistantInNewConversation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AiQuestion'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the question.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Ask AI Assistant (New Conversation)
            tags:
                - AI Assistant
    /v1/ai-assistant/conversations/{conversationUid}:
        get:
            description: Get an AI Assistant conversation by UID in the Security Cloud Control tenant.
            operationId: getConversation
            parameters:
                - description: The unique identifier, represented as a UUID, of the conversation in Security Cloud Control.
                  in: path
                  name: conversationUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AiConversation'
                    description: Conversation object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Conversation
            tags:
                - AI Assistant
        post:
            description: Ask the AI Assistant a question in the context of an existing conversation with the AI Assistant.
            operationId: askAiAssistantInExistingConversation
            parameters:
                - in: path
                  name: conversationUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AiQuestion'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the question.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Ask AI Assistant (Existing Conversation)
            tags:
                - AI Assistant
    /v1/ai-assistant/conversations/{conversationUid}/messages:
        get:
            description: 'Get a list of messages in a single AI Assistant conversation. Note: this endpoint is not paginated, and returns the full list of messages.'
            operationId: getAiAssistantConversationMessages
            parameters:
                - description: The unique identifier, represented as a UUID, of the conversation in Security Cloud Control.
                  in: path
                  name: conversationUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/AiMessage'
                                type: array
                    description: List of Conversation Messages
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Messages
            tags:
                - AI Assistant
    /v1/auditlogs:
        get:
            description: Get a list of Audit Logs.
            operationId: getAuditLogs
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The searchText parameter serves as a flexible search option that allows for text-based filtering across the username fields of the Audit Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions.
                  in: query
                  name: searchText
                  required: false
                  schema:
                    type: string
                - description: The time range for which to retrieve Audit Logs. This parameter cannot be used in conjunction with a query on the eventTime field.
                  in: query
                  name: timeRange
                  required: false
                  schema:
                    enum:
                        - 5m
                        - 15m
                        - 30m
                        - 1h
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuditLogPage'
                    description: List of Audit Logs objects
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Audit Logs
            tags:
                - Audit Logs
    /v1/changeRequests:
        get:
            description: Get a list of Change Requests.
            operationId: getChangeRequests
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ChangeRequestPage'
                    description: List of Change Request objects
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Change Requests
            tags:
                - Change Requests
        post:
            description: Create a Change Request in the Security Cloud Control tenant.
            operationId: createChangeRequest
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ChangeRequestCreateInput'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ChangeRequest'
                    description: Created change Request object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Create Change Request
            tags:
                - Change Requests
    /v1/changeRequests/{changeRequestUid}:
        delete:
            description: Delete a Change Request by UID in the Security Cloud Control tenant.
            operationId: deleteChangeRequest
            parameters:
                - description: The unique identifier, represented as a UUID, of the Change Request in Security Cloud Control.
                  in: path
                  name: changeRequestUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Delete Change Request
            tags:
                - Change Requests
        get:
            description: Get a Change Request by UID in the Security Cloud Control tenant.
            operationId: getChangeRequest
            parameters:
                - description: The unique identifier, represented as a UUID, of the Change Request in Security Cloud Control.
                  in: path
                  name: changeRequestUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ChangeRequest'
                    description: Change Request object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Change Request
            tags:
                - Change Requests
    /v1/changelogs:
        get:
            description: Get a list of Change Logs in the Security Cloud Control tenant.
            operationId: getChangelogs
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The searchText parameter serves as a flexible search option that allows for text-based filtering across all fields of the Change Log object. This parameter can be used independently to search for entries containing the specified text, or in combination with the q query parameter for more targeted results. When used with q, the search conditions of searchText are logically ANDed with the q parameter's criteria, ensuring that the returned entries satisfy both sets of conditions.
                  in: query
                  name: searchText
                  required: false
                  schema:
                    type: string
                - description: The time range for which to retrieve Change Logs. This parameter cannot be used in conjunction with a query on the lastEventDate field.
                  in: query
                  name: timeRange
                  required: false
                  schema:
                    enum:
                        - 5m
                        - 15m
                        - 30m
                        - 1h
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ChangelogPage'
                    description: List of Change Log objects
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Change Logs
            tags:
                - Changelogs
    /v1/changelogs/{changelogUid}:
        get:
            description: Get a specific Change Log object by UID in the Security Cloud Control tenant.
            operationId: getChangelog
            parameters:
                - description: The unique identifier, represented as a UUID, of the changelog in Security Cloud Control.
                  in: path
                  name: changelogUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Changelog'
                    description: Change Log objects
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Change Log
            tags:
                - Changelogs
    /v1/cli/macros:
        get:
            description: Get a list of CLI macros. A CLI macro is a fully-formed CLI command ready to use, or a template of a CLI command you can modify before you run it.
            operationId: getCliMacros
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoCliMacroPage'
                    description: List of Security Cloud Control CLI macros
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get CLI Macros
            tags:
                - Command Line Interface
        post:
            description: Create a CLI macro, which is a fully-formed CLI command ready to use or a template of a CLI command you can modify before you run it.
            operationId: createCliMacro
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CliMacroCreateInput'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoCliMacro'
                    description: Security Cloud Control CLI macro
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Create CLI Macro
            tags:
                - Command Line Interface
    /v1/cli/macros/{macroUid}:
        delete:
            description: Delete a Security Cloud Control CLI Macro by UID.
            operationId: deleteCliMacro
            parameters:
                - description: The unique identifier, represented as a UUID, of the CDO CLI macro in Security Cloud Control.
                  in: path
                  name: macroUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: Security Cloud Control CLI macro
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Delete CLI Macro
            tags:
                - Command Line Interface
        get:
            description: 'Get a Security Cloud Control CLI Macro by UID. Note: This operation only returns the SCC CLI Macro. For executing the SCC CLI Macro, refer to the [Execute CLI Macro](https://developer.cisco.com/docs/cisco-security-cloud-control/execute-cli-macro-command/) command.'
            operationId: getCliMacro
            parameters:
                - description: The unique identifier, represented as a UUID, of the CDO CLI macro in Security Cloud Control.
                  in: path
                  name: macroUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoCliMacro'
                    description: Security Cloud Control CLI macro
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get CLI Macro
            tags:
                - Command Line Interface
        patch:
            description: Modify a Security Cloud Control CLI Macro by UID.
            operationId: modifyCliMacro
            parameters:
                - description: The unique identifier, represented as a UUID, of the CDO CLI macro in Security Cloud Control.
                  in: path
                  name: macroUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CliMacroPatchInput'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoCliMacro'
                    description: Security Cloud Control CLI macro
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Modify CLI Macro
            tags:
                - Command Line Interface
    /v1/cli/results:
        get:
            description: Get a list of results from command lines executed using the [CDO Command Line Interface (CLI)](https://docs.defenseorchestrator.com/c-using-the-cdo-command-line-interface.html). These commands can be executed using either the Security Cloud Control UI or the API.
            operationId: getCliResults
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoCliResultPage'
                    description: List of Security Cloud Control CLI execution results
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get CLI Results
            tags:
                - Command Line Interface
    /v1/cli/results/{cliResultUid}:
        get:
            description: Get the result of a command executed using the Security Cloud Control Command Line Interface (CLI) by UID.
            operationId: getCliResult
            parameters:
                - description: The unique identifier, represented as a UUID, of the CDO CLI result in Security Cloud Control.
                  in: path
                  name: cliResultUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoCliResult'
                    description: Security Cloud Control CLI result
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get CLI Result
            tags:
                - Command Line Interface
    /v1/connectors/sdcs:
        get:
            description: Get a list of on-prem SDCs in the Security Cloud Control tenant.
            operationId: getSdcs
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SdcPage'
                    description: List of SDC objects
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get SDCs
            tags:
                - Connectors
        post:
            description: This is an asynchronous operation to create an SDC to a Security Cloud Control tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation.
            operationId: createSdc
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SdcCreateInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the creation operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Create SDC
            tags:
                - Connectors
    /v1/connectors/sdcs/{sdcUid}:
        delete:
            description: Delete an SDC in the Security Cloud Control tenant
            operationId: deleteSdc
            parameters:
                - description: The unique identifier, represented as a UUID, of the SDC in Security Cloud Control.
                  in: path
                  name: sdcUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Delete SDC
            tags:
                - Connectors
        get:
            description: Get a SDC by UID in the Security Cloud Control tenant.
            operationId: getSdc
            parameters:
                - description: The unique identifier, represented as a UUID, of the SDC in Security Cloud Control.
                  in: path
                  name: sdcUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Sdc'
                    description: SDC object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get SDC
            tags:
                - Connectors
        patch:
            description: Modify a SDC in the Security Cloud Control tenant
            operationId: modifySdc
            parameters:
                - description: The unique identifier, represented as a UUID, of the SDC in Security Cloud Control.
                  in: path
                  name: sdcUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SdcPatchInput'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Sdc'
                    description: SDC object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Modify SDC
            tags:
                - Connectors
    /v1/features:
        get:
            description: Get the feature flags enabled in the Security Cloud Control tenant.
            operationId: getFeatureFlags
            responses:
                "200":
                    content:
                        application/json:
                            example:
                                - feature-1
                                - feature-2
                            schema:
                                items:
                                    type: string
                                type: array
                    description: Set of feature flags that are enabled for the user's tenant.
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Feature Flags
            tags:
                - Tenant Management
    /v1/fmc/gateway/command:
        post:
            description: Send a direct command to the specified device.
            operationId: executeDeviceCommand
            parameters:
                - description: By default, the API waits up to 70 seconds for a device response. Append the 'async' flag to return immediately without waiting for the response.
                  in: query
                  name: async
                  required: false
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeviceGatewayApiRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            examples:
                                responded:
                                    value:
                                        data:
                                            inResponseTo:
                                                command: executeFmcRequests
                                                deviceType: fmc
                                                deviceUid: fb8e46fc-30b0-437f-921d-606c53d4b94c
                                                larUid: b5a71c7b-f309-4102-8fa2-9eec2260a1b7
                                            responseBody: '[{"id":"0050568A-5AB4-0ed3-0000-021474986635","name":"Marketing","agentId":"agent_007","topicName":"aws365","description":"IPs of marketing department","type":"DynamicObject","objectType":"IP","links":{"self":"https://fmc.acme.com/api/fmc_config/v1/domain/e276abe1-e0f2-11e3-8169-6d9ed49b625f/object/dynamicobjects/0050568C-5AB4-0ed3-0000-021474986635"},"metadata":{"domain":{"name":"Global","id":"e276abec-e0f2-11e3-8169-6d9ed49b625f","type":"Domain"}}}]'
                                            responseStatus: SUCCESS
                                            tenantUid: 936fca6c-000b-4375-b903-46e6a95c7153
                                        requestId: 11111111-1111-1111-1111-111111111111
                                        responseOrigin: secure-connector
                                        status: responded
                                timeout:
                                    value:
                                        data: The request timed out due to a hard limit of 70 seconds. You may poll for a belated response using the url provided in the 'data' field
                                        requestId: 11111111-1111-1111-1111-111111111111
                                        responseOrigin: device-gateway-api
                                        status: timeout
                    description: The request was successfully processed, and the device command was executed.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Send a direct request to a registered device in Security Cloud Control
            tags:
                - Commands
    /v1/fmc/gateway/command/{requestId}:
        get:
            description: Get the response from a device for a command previously issued.
            operationId: getDeviceCommandResponse
            parameters:
                - description: The unique identifier of the request, represented as a UUID, returned from a previous POST request to the /command endpoint.
                  in: path
                  name: requestId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            examples:
                                responded:
                                    value:
                                        data:
                                            inResponseTo:
                                                command: executeFmcRequests
                                                deviceType: fmc
                                                deviceUid: fb8e46fc-30b0-437f-921d-606c53d4b94c
                                                larUid: b5a71c7b-f309-4102-8fa2-9eec2260a1b7
                                            responseBody: '[{"id":"0050568A-5AB4-0ed3-0000-021474986635","name":"Marketing","agentId":"agent_007","topicName":"aws365","description":"IPs of marketing department","type":"DynamicObject","objectType":"IP","links":{"self":"https://fmc.acme.com/api/fmc_config/v1/domain/e276abe1-e0f2-11e3-8169-6d9ed49b625f/object/dynamicobjects/0050568C-5AB4-0ed3-0000-021474986635"},"metadata":{"domain":{"name":"Global","id":"e276abec-e0f2-11e3-8169-6d9ed49b625f","type":"Domain"}}}]'
                                            responseStatus: SUCCESS
                                            tenantUid: 936fca6c-000b-4375-b903-46e6a95c7153
                                        requestId: 11111111-1111-1111-1111-111111111111
                                        responseOrigin: secure-connector
                                        status: responded
                    description: The device responded. The response may indicate success or contain an error returned by the device.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Retrieve the response for a previously sent command
            tags:
                - Commands
    /v1/fmc/gateway/listcommands:
        get:
            description: Retrieve a list of supported device command endpoint patterns.
            operationId: getDeviceCommands
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandResponse'
                    description: The list of supported command patterns.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Get supported endpoint patterns
            tags:
                - Commands
    /v1/inventory/devices:
        get:
            description: Get a list of devices in the Security Cloud Control tenant.
            operationId: getDevices
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DevicePage'
                    description: List of Device objects
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Devices
            tags:
                - Inventory
    /v1/inventory/devices/{deviceUid}:
        delete:
            description: Delete a device by UID in the Security Cloud Control tenant. On-prem FMCs and cloud-delivered FMCs cannot be deleted using this endpoint.
            operationId: deleteDevice
            parameters:
                - description: The unique identifier, represented as a UUID, of the device in Security Cloud Control.
                  in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Delete Device
            tags:
                - Inventory
        get:
            description: Get a device by UID in the Security Cloud Control tenant
            operationId: getDevice
            parameters:
                - description: The unique identifier, represented as a UUID, of the device in Security Cloud Control.
                  in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Device'
                    description: Device object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Device
            tags:
                - Inventory
        patch:
            description: Modify a device in the Security Cloud Control tenant
            operationId: modifyDevice
            parameters:
                - description: The unique identifier, represented as a UUID, of the device in Security Cloud Control.
                  in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DevicePatchInput'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Device'
                    description: Device object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Modify Device
            tags:
                - Inventory
    /v1/inventory/devices/asas:
        post:
            description: This is an asynchronous operation to onboard an ASA to a Security Cloud Control tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation.
            operationId: onboardAsaDevice
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AsaCreateOrUpdateInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the onboarding operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Onboard ASA device
            tags:
                - Inventory
    /v1/inventory/devices/asas/{deviceUid}/configs:
        get:
            description: Fetches the ASA configuration for a specified device by its unique identifier, represented as a UUID. This endpoint returns both the current configuration from the device ('configOnDevice') and the configuration stored in Security Cloud Control ('configOnCloud').
            operationId: getAsaConfiguration
            parameters:
                - in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AsaConfig'
                    description: Successfully retrieved ASA configuration details from both device and Security Cloud Control.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get ASA configuration details
            tags:
                - Inventory
    /v1/inventory/devices/asas/{deviceUid}/deploy:
        post:
            description: This is an asynchronous operation to deploy changes made to an ASA device's configuration on Security Cloud Control to the device. This operation returns a link to a transaction object that can be used to monitor the progress of the operation.
            operationId: deployAsaDeviceChanges
            parameters:
                - in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the ASA deploy operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Deploy ASA device changes
            tags:
                - Inventory
    /v1/inventory/devices/asas/{deviceUid}/read:
        post:
            description: This is an asynchronous operation to read the latest configuration on an ASA device in to the Security Cloud Control tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation.
            operationId: readAsaDeviceConfiguration
            parameters:
                - description: The unique identifier, represented as a UUID, of the ASA device in Security Cloud Control.
                  in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the read operation
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Read ASA device configuration
            tags:
                - Inventory
    /v1/inventory/devices/asas/{deviceUid}/reconnect:
        post:
            description: This is an asynchronous operation to re-establish the connection between an ASA and the Security Cloud Control cloud. This operation returns a link to a transaction object that can be used to monitor the progress of the operation.
            operationId: reconnectAsaDevice
            parameters:
                - description: The unique identifier, represented as a UUID, of the ASA device in Security Cloud Control.
                  in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the reconnecting operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Reconnect ASA device
            tags:
                - Inventory
    /v1/inventory/devices/asas/{deviceUid}/upgrades/trigger:
        post:
            description: 'This asynchronous operation upgrades the ASA firmware and ASDM software versions on the device. Note: Newly detected or modified certificates will be automatically approved.'
            operationId: upgradeAsaDevice
            parameters:
                - description: The unique identifier, represented as a UUID, of the device in Security Cloud Control.
                  in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpgradeAsaDeviceInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the operation.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Upgrade ASA device
            tags:
                - Device Upgrades
    /v1/inventory/devices/asas/{deviceUid}/upgrades/versions:
        get:
            description: Get a list of compatible upgrade versions for a given ASA device.
            operationId: getAsaUpgradeVersions
            parameters:
                - description: The unique identifier, represented as a UUID, of the device in Security Cloud Control.
                  in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AsaCompatibleVersionsResponse'
                    description: List of compatible upgrade versions
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get compatible upgrade versions for an ASA
            tags:
                - Device Upgrades
    /v1/inventory/devices/asas/acceptCert:
        post:
            description: This is an asynchronous operation to accept certificates for multiple ASA devices. This operation returns a link to a transaction object that can be used to monitor the progress of the operation for all devices.<br/>**Warning:** This operation will accept the certificates for the ASA devices in the body without providing the user with the ability to view the certificates. It is recommended to use this operation only when you are sure that all certificates are valid.
            operationId: bulkAcceptAsaCertificates
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BulkOperationAsaDeviceRequest'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the accept certificates operation
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Accept certificates for multiple ASA devices
            tags:
                - Inventory
    /v1/inventory/devices/asas/cli/execute:
        post:
            description: This is an asynchronous operation to execute CLI commands on an ASA device in the Security Cloud Control tenant.
            operationId: executeCliCommand
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CliCommandInput'
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the execute CLI operation
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Execute CLI Command
            tags:
                - Command Line Interface
    /v1/inventory/devices/asas/cli/executeMacro:
        post:
            description: This is an asynchronous operation to execute an CLI macro on an ASA device in the Security Cloud Control tenant.
            operationId: executeCliMacro
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CliMacroExecuteInput'
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the execute CLI operation
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Execute CLI Macro Command
            tags:
                - Command Line Interface
    /v1/inventory/devices/asas/health/{deviceUid}/interfaces:
        get:
            description: Returns time-series interface metrics - including link status, overruns, and other key performance indicators - over a specified time range. Supports filtering by interface and metric. Pagination applies only when interface UIDs are not specified.
            operationId: getAsaInterfaceHealthMetrics
            parameters:
                - description: The unique identifier, represented as a UUID, of the ASA device in Security Cloud Control.
                  in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
                - description: Start of the time range (ISO 8601 format).
                  example: 2025-04-05T00:00:00Z
                  in: query
                  name: start
                  required: false
                  schema:
                    type: string
                - description: End of the time range (ISO 8601 format).
                  example: 2025-04-05T04:00:00Z
                  in: query
                  name: end
                  required: false
                  schema:
                    type: string
                - description: Relative time range (mutually exclusive with start/end). Data is collected every 10 minutes, so shorter time ranges may return fewer data points.
                  example: 10m
                  in: query
                  name: timeRange
                  required: false
                  schema:
                    enum:
                        - 10m
                        - 30m
                        - 1h
                    type: string
                - description: Maximum number of device records to return (used only when no deviceUids are provided).
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 50
                    minimum: 0
                    type: string
                - description: Offset for pagination (used only when no deviceUids are provided).
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: Comma-separated list of interface UIDs to query. Max 50. If omitted, results are paginated.
                  example: def6c34a-a5d4-45c1-8d96-820fb00de723,4bc125a0-cf08-4dcc-bfac-45669ba898b0
                  in: query
                  name: interfaceUids
                  required: false
                  schema:
                    maxLength: 50
                    maximum: 50
                    minLength: 0
                    type: string
                - description: Comma-separated list of metrics to return (e.g. linkStatus, overruns). Returns all if omitted.
                  example: linkStatus,overruns
                  in: query
                  name: metrics
                  required: false
                  schema:
                    enum:
                        - overruns
                        - underruns
                        - droppedPackets
                        - l2DecodeDrops
                        - inputErrors
                        - outputErrors
                        - inputPacketSize
                        - outputPacketSize
                        - linkStatus
                    type: string
                - description: Lucene-style query filter. Supports logical operators AND, OR, and NOT.Applicable only to the fields name and linkStatus.
                  example: name:GigabitEthernet* OR linkStatus:1
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MetricsResponse'
                    description: Successfully retrieved time-series metrics for one or more interfaces.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get time-series interface metrics for an ASA device
            tags:
                - Device Health
    /v1/inventory/devices/asas/health/metrics:
        delete:
            description: Allows a tenant to opt out of receiving health metrics for their ASAs.
            operationId: optOutOfAsaHealthMetrics
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the operation.
                "204":
                    description: No Content - the tenant was already in the desired state.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Opt out of ASA Health Metrics
            tags:
                - Device Health
        get:
            description: Returns time-series metrics such as CPU, memory, disk, connections, and environment data over a specified time range. Supports filtering by device and metric. Pagination applies only when device UIDs are not specified.
            operationId: getAsaHealthMetrics
            parameters:
                - description: Start of the time range (ISO 8601 format).
                  example: 2025-04-05T00:00:00Z
                  in: query
                  name: start
                  required: false
                  schema:
                    type: string
                - description: End of the time range (ISO 8601 format).
                  example: 2025-04-05T04:00:00Z
                  in: query
                  name: end
                  required: false
                  schema:
                    type: string
                - description: Relative time range (mutually exclusive with start/end). Data is collected every 10 minutes, so shorter time ranges may return fewer data points.
                  example: 10m
                  in: query
                  name: timeRange
                  required: false
                  schema:
                    enum:
                        - 10m
                        - 30m
                        - 1h
                    type: string
                - description: Maximum number of device records to return (used only when no deviceUids are provided).
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 50
                    minimum: 0
                    type: string
                - description: Offset for pagination (used only when no deviceUids are provided).
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: Comma-separated list of device UIDs to query. Max 50. If omitted, results are paginated.
                  example: 256461f6-bd60-11ef-8beb-6cf1610cf55d,41a1d57b-ffc2-49aa-933b-440cdd76b2fc
                  in: query
                  name: deviceUids
                  required: false
                  schema:
                    maxLength: 50
                    maximum: 50
                    minLength: 0
                    type: string
                - description: Comma-separated list of metrics to return (e.g. cpu, mem). Returns all if omitted.
                  example: cpu,mem
                  in: query
                  name: metrics
                  required: false
                  schema:
                    enum:
                        - cpu
                        - mem
                        - disk
                        - env
                        - connections
                        - natTranslations
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MetricsResponse'
                    description: Successfully retrieved time-series metrics for one or more ASA devices.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get time-series health metrics for one or more ASA devices
            tags:
                - Device Health
        post:
            description: Allow Security Cloud Control Firewall Manager to collect health metrics for ASAs in this tenant. By default, metrics are collected from all Cloud Device Gateway–managed ASAs. To let Security Cloud Control Firewall Manager collect metrics from Secure Device Connector–managed devices, set the <code>optedInToAsaHealthMetrics</code> property on each device using the <a href="https://developer.cisco.com/docs/cisco-security-cloud-control/modify-device/">Modify Device</a> endpoint. <b>Note:</b> A single Secure Device Connector can support metrics collection for up to 50 ASAs.
            operationId: optInToAsaHealthMetrics
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the operation.
                "204":
                    description: No Content - the tenant was already in the desired state.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Opt in to ASA Health Metrics
            tags:
                - Device Health
    /v1/inventory/devices/asas/read:
        post:
            description: This is an asynchronous operation to read the latest configurations for multiple ASA devices into the Security Cloud Control tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation for all devices.
            operationId: bulkReadAsaDeviceConfigurations
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BulkOperationAsaDeviceRequest'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the read operation
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Read configurations for multiple ASA devices
            tags:
                - Inventory
    /v1/inventory/devices/bulk:
        patch:
            description: Modify a list of devices in the Security Cloud Control tenant
            operationId: modifyDevices
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DevicesPatchInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Modify Devices
            tags:
                - Inventory
    /v1/inventory/devices/duoAdminPanels:
        post:
            description: Onboard a Duo Admin Panel to the CDO tenant. The credentials to onboard the Duo Admin Panel to Security Cloud Control must be generated by creating an Admin API application on https://www.duo.com. This operation returns a link to a transaction object that can be used to monitor the progress of the operation.
            operationId: createDuoAdminPanel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DuoAdminPanelCreateOrUpdateInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the onboarding operation
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Onboard Duo Admin Panel
            tags:
                - Inventory
    /v1/inventory/devices/ftds:
        post:
            description: 'This is an asynchronous operation to generate a registration key for a cdFMC managed FTD device in the CDO tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation. Onboarding a cdFMC managed FTD device is a two-step process: the first step, handled by this operation, creates an FTD device with a configure manager string that must be pasted into the FTD device''s Command-Line Interface. The FTD then uses this information to register itself with the Security Cloud Control tenant.'
            operationId: createFtdDevice
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FtdCreateOrUpdateInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the creation operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Onboard FTD device
            tags:
                - Inventory
    /v1/inventory/devices/ftds/{deviceUid}/deploy:
        post:
            description: |
                This is an asynchronous operation to deploy changes made to a cdFMC-managed FTD device's configuration on Security Cloud Control to the device. This operation returns a link to a transaction object that can be used to monitor the progress of the operation.

                Notes:

                - This operation is only supported for cdFMC-managed FTD devices.

                - This operation will only deploy changes to the device if there are pending changes to deploy.

                - Once this operation is finished, it can take up to 10 minutes for the [device](https://developer.cisco.com/docs/cisco-security-cloud-control/device/) [configState](https://developer.cisco.com/docs/cisco-security-cloud-control/configstate/) to be updated from `SYNCED` to `NOT_SYNCED` on Security Cloud Control.
            operationId: deployFtdDeviceChanges
            parameters:
                - in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FtdDeploymentInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the creation operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: (cdFMC-managed FTDs only) Deploy FTD device changes
            tags:
                - Inventory
    /v1/inventory/devices/ftds/{deviceUid}/upgrades/trigger:
        post:
            description: Upgrade FTD device using a specified upgrade package.
            operationId: upgradeFtdDevice
            parameters:
                - description: The unique identifier, represented as a UUID, of the device in Security Cloud Control.
                  in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpgradeFtdDeviceInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the upgrade operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "422":
                    $ref: '#/components/responses/http422UnprocessableEntity'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Upgrade FTD device
            tags:
                - Device Upgrades
    /v1/inventory/devices/ftds/{deviceUid}/upgrades/versions:
        get:
            description: 'Get a list of compatible upgrade versions for a given FTD device. Note: this endpoint will only return versions that are directly downloadable to the FTD from the Cisco support site.'
            operationId: getCompatibleFtdVersions
            parameters:
                - description: The unique identifier, represented as a UUID, of the device in Security Cloud Control.
                  in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FtdVersionsResponse'
                    description: List of compatible upgrade versions
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "422":
                    $ref: '#/components/responses/http422UnprocessableEntity'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get compatible upgrade versions for an FTD
            tags:
                - Device Upgrades
    /v1/inventory/devices/ftds/cdfmcManaged/{deviceUid}/delete:
        post:
            description: This is an asynchronous operation to delete cdFMC managed FTD device in the CDO tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation. The reason this operation is asynchronous is because the device is first removed from the cdFMC, following which it is deleted from the Security Cloud Control tenant.
            operationId: deleteCdFmcManagedFtdDevice
            parameters:
                - description: The unique identifier, represented as a UUID, of the cdFMC managed FTD device in Security Cloud Control.
                  in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the deletion operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Delete cdFMC managed FTD device
            tags:
                - Inventory
    /v1/inventory/devices/ftds/deploy:
        post:
            description: |+
                This is an asynchronous operation to deploy changes made to the configurations of multiple cdFMC-managed FTD devices on Security Cloud Control. This operation returns a link to a transaction object that can be used to monitor the progress of the operation.

                Notes:

                - This operation is only supported for cdFMC-managed FTD devices.

                - This operation will only deploy changes to the device if there are pending changes to deploy.


            operationId: deployChangesToMultipleFtdDevices
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FtdMultiDeviceDeploymentInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the creation operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: (cdFMC-managed FTDs only) Deploy changes to multiple FTD devices
            tags:
                - Inventory
    /v1/inventory/devices/ftds/register:
        post:
            description: Complete registration of an FTD device managed by an FMC to the Security Cloud Control tenant. Call this API endpoint after you have created an FTD and pasted the generated CLI output in the FTD. This operation returns a link to a transaction object that can be used to monitor the progress of the operation.
            operationId: finishOnboardingFtdDevice
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FtdRegistrationInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the creation operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Register FTD device to FMC
            tags:
                - Inventory
    /v1/inventory/devices/ftds/upgrades/packages/build-cache:
        put:
            description: Update cache of compatible upgrade packages for a all FTD devices.
            operationId: updateFtdUpgradePackagesCache
            parameters:
                - in: header
                  name: X-Calling-Service
                  required: false
                  schema:
                    type: string
                - description: Custom metadata to identify the request
                  in: header
                  name: X-Request-Metadata
                  required: false
                  schema:
                    type: string
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the cache building operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Update cache of compatible upgrade packages for all FTDs
            tags:
                - Device Upgrades
    /v1/inventory/devices/ftds/upgrades/trigger:
        post:
            description: Upgrade up to 50 FTD devices using a specified upgrade package. All of the FTDs in the list have to be compatible with the upgrade package.
            operationId: upgradeFtdDevices
            parameters:
                - in: header
                  name: X-Calling-Service
                  required: false
                  schema:
                    type: string
                - description: Custom metadata to identify the request
                  in: header
                  name: X-Request-Metadata
                  required: false
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpgradeFtdDevicesInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the upgrade operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Upgrade multiple FTD devices
            tags:
                - Device Upgrades
    /v1/inventory/devices/ftds/upgrades/versions:
        get:
            description: 'Get a list of compatible upgrade versions for the specified FTD devices. Note 1: this endpoint will only return versions that are directly downloadable to the FTD from the Cisco support site. Note 2: If compatible versions need computation, returns 202 with a transaction containing the entityUrl for tracking progress. Otherwise, returns 200 with the complete result.'
            operationId: getCompatibleFtdVersionsForMultipleFtds
            parameters:
                - description: A list of unique identifiers, represented as UUIDs, of the devices in Security Cloud Control.
                  in: query
                  name: deviceUids
                  required: true
                  schema:
                    items:
                        format: uuid
                        type: string
                    maxItems: 50
                    minItems: 1
                    type: array
                    uniqueItems: true
                - in: header
                  name: X-Calling-Service
                  required: false
                  schema:
                    type: string
                - description: Custom metadata to identify the request
                  in: header
                  name: X-Request-Metadata
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FtdCompatibilityVersion'
                    description: List of compatible upgrade versions
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Returns a Security Cloud Control returns a Transaction object that can be used to track the progress of the operation to get the set of compatibility versions.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "422":
                    $ref: '#/components/responses/http422UnprocessableEntity'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get upgrade versions compatible with multiple FTDs
            tags:
                - Device Upgrades
    /v1/inventory/devices/ftds/ztp:
        post:
            description: 'This is an asynchronous operation to onboard a cdFMC managed FTD using Zero-Touch Provisioning. The operation returns a transaction object that can be used to track the progress of the onboarding operation. Note: Zero-Touch Onboarding can be done with Secure Firewall 1xxx, 2xxx, and 3xxx Series devices. This operation will be marked as complete once CDO is ready to handle a response from the device once it is plugged in and connected to the Internet; it does not wait for the device to communicate back to Security Cloud Control.'
            operationId: onboardFtdDeviceUsingZtp
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ZtpOnboardingInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the creation operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Onboard FTD device using Zero-Touch Provisioning
            tags:
                - Inventory
    /v1/inventory/devices/ios:
        post:
            description: Onboard a IOS device in the Security Cloud Control tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation.
            operationId: onboardIosDevice
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/IosCreateOrUpdateInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the onboarding operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Onboard IOS Device
            tags:
                - Inventory
    /v1/inventory/managers:
        get:
            description: Fetch a list of Device Managers (on-prem FMCs and cloud-delivered FMCs) in the Security Cloud Control tenant.
            operationId: getDeviceManagers
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DevicePage'
                    description: List of Device Manager objects
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Device Managers
            tags:
                - Inventory
    /v1/inventory/managers/{deviceManagerUid}:
        delete:
            description: Delete a Device Manager by UID in the Security Cloud Control tenant.
            operationId: deleteDeviceManager
            parameters:
                - description: The unique identifier, represented as a UUID, of the device manager in Security Cloud Control.
                  in: path
                  name: deviceManagerUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Delete Device Manager
            tags:
                - Inventory
        get:
            description: Get a Device Manager by UID in the Security Cloud Control tenant.
            operationId: getDeviceManager
            parameters:
                - description: The unique identifier, represented as a UUID, of the device manager in Security Cloud Control.
                  in: path
                  name: deviceManagerUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Device'
                    description: Device Manager
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Device Manager
            tags:
                - Inventory
        patch:
            description: Modify a device manager by UID in the Security Cloud Control tenant.
            operationId: modifyDeviceManager
            parameters:
                - description: The unique identifier, represented as a UUID, of the device manager in Security Cloud Control.
                  in: path
                  name: deviceManagerUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeviceManagerPatchInput'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Device'
                    description: Device manager
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Modify Device Manager
            tags:
                - Inventory
    /v1/inventory/managers/{fmcUid}/health/metrics:
        get:
            description: 'Get metrics that indicate the current health of all devices managed by the cdFMC. Note: For specific health metrics to be available for a given device under management of the cdFMC, the health policy for that device should be configured to collect those metrics. For example, CPU metrics will be unavailable for a device if the health policy applied to that device has CPU metric collection turned off. Note: This endpoint can only be queried twice every minute.'
            operationId: getFmcHealth
            parameters:
                - description: The unique identifier, represented as a UUID, of the FMC in Security Cloud Control.
                  in: path
                  name: fmcUid
                  required: true
                  schema:
                    format: uuid
                    type: string
                - description: The time range for which results should be retrieved.
                  in: query
                  name: timeRange
                  required: false
                  schema:
                    enum:
                        - 5m
                        - 15m
                        - 30m
                        - 1h
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/FmcHealthMetrics'
                                type: array
                    description: FMC health metrics
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get health metrics on devices managed by the FMC (cdFMC only)
            tags:
                - Inventory
    /v1/inventory/managers/cdfmc:
        post:
            description: This is an asynchronous operation to provision a cloud-delivered FMC in a tenant. This operation can only be performed as a super-admin user.
            operationId: provisionCdFmc
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "409":
                    $ref: '#/components/responses/http409Conflict'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Provision cdFMC
            tags:
                - Inventory
    /v1/inventory/managers/mcd:
        post:
            description: This is an asynchronous operation to Enable Multicloud Defense for the Security Cloud Control tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation.
            operationId: enableMulticloudDefense
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "409":
                    $ref: '#/components/responses/http409Conflict'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Enable Multicloud Defense
            tags:
                - Inventory
    /v1/inventory/services:
        get:
            description: Get a list of Cloud Services in the Security Cloud Control tenant.
            operationId: getCloudServices
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DevicePage'
                    description: List of Cloud Services
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Cloud Services
            tags:
                - Inventory
    /v1/inventory/services/{cloudServiceUid}:
        delete:
            description: Delete a Cloud Service by UID in the Security Cloud Control tenant.
            operationId: deleteCloudService
            parameters:
                - description: The unique identifier, represented as a UUID, of the cloud service in Security Cloud Control.
                  in: path
                  name: cloudServiceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Delete Cloud Service
            tags:
                - Inventory
        get:
            description: Get a Cloud Service by UID in the Security Cloud Control tenant.
            operationId: getCloudService
            parameters:
                - description: The unique identifier, represented as a UUID, of the cloud service in Security Cloud Control.
                  in: path
                  name: cloudServiceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Device'
                    description: Cloud Service
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Cloud Service
            tags:
                - Inventory
        patch:
            description: Modify a Cloud Service by UID in the Security Cloud Control tenant.
            operationId: modifyCloudService
            parameters:
                - description: The unique identifier, represented as a UUID, of the cloud service in Security Cloud Control.
                  in: path
                  name: cloudServiceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DevicePatchInput'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Device'
                    description: Cloud Service
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Modify Cloud Service
            tags:
                - Inventory
    /v1/inventory/templates:
        get:
            description: Get a list of template devices in the Security Cloud Control tenant.
            operationId: getTemplateDevices
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DevicePage'
                    description: List of Template Devices
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Template Devices
            tags:
                - Inventory
    /v1/inventory/templates/{templateDeviceUid}:
        delete:
            description: Delete a template device by UID in the Security Cloud Control tenant.
            operationId: deleteTemplateDevice
            parameters:
                - description: The unique identifier, represented as a UUID, of the template device in Security Cloud Control.
                  in: path
                  name: templateDeviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Delete Template Device
            tags:
                - Inventory
        get:
            description: Get a template device by UID in the Security Cloud Control tenant.
            operationId: getTemplateDevice
            parameters:
                - description: The unique identifier, represented as a UUID, of the template device in Security Cloud Control.
                  in: path
                  name: templateDeviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Device'
                    description: Template Device object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Template Device
            tags:
                - Inventory
        patch:
            description: Modify a template device in the Security Cloud Control tenant.
            operationId: modifyTemplateDevice
            parameters:
                - description: The unique identifier, represented as a UUID, of the template device in Security Cloud Control.
                  in: path
                  name: templateDeviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DevicePatchInput'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Device'
                    description: Template Device object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Modify Template Device
            tags:
                - Inventory
    /v1/meta:
        get:
            description: Get Meta information about CDO, including the IP addresses of Security Cloud Control services.
            operationId: getMeta
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Meta'
                    description: Meta information about Security Cloud Control.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Get Meta information
            tags:
                - Meta
    /v1/mfaevents:
        get:
            description: Get a list of MFA events.
            operationId: getMfaEvents
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MfaEventPage'
                    description: List of MFA events
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get MFA Events
            tags:
                - Remote Access Monitoring
    /v1/mfaevents/{mfaEventUid}:
        get:
            description: Get a MFA event by UID in the Security Cloud Control tenant.
            operationId: getMfaEvent
            parameters:
                - description: The unique identifier, represented as a UUID, of the MFA event in Security Cloud Control.
                  in: path
                  name: mfaEventUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MfaEvent'
                    description: MFA Event object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get MFA Event
            tags:
                - Remote Access Monitoring
    /v1/msp/inventory/devices:
        get:
            description: Get devices, across all tenants, managed by the MSP portal.
            operationId: getMspManagedDevices
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedDevicePage'
                    description: List of MSP-managed devices
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get MSP-managed devices
            tags:
                - MSP
    /v1/msp/inventory/devices/{deviceUid}:
        get:
            description: Get the device managed by the MSP portal using its UID.
            operationId: getMspManagedDevice
            parameters:
                - description: The unique identifier of MSP-managed device.
                  in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedDevice'
                    description: MSP-managed device
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get MSP-managed device by UID
            tags:
                - MSP
    /v1/msp/inventory/devices/attribute-values:
        get:
            description: Get distinct values for multiple fields in the MSP-managed devices across all tenants managed by the MSP portal.
            operationId: getMspManagedDevicesAttributeValues
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedDeviceDistinctAttributeValues'
                    description: Distinct attribute values for MSP-managed devices
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get distinct attribute values for MSP-managed devices
            tags:
                - MSP
    /v1/msp/inventory/devices/export:
        post:
            description: This is an asynchronous operation to export MSP-managed devices in CSV format. Once complete, the file can be downloaded using a presigned AWS S3 URL specified in the entityUrl field of the transaction that expires in 1 hour.
            operationId: exportMspManagedDevices
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MspExportInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the export. Once complete, the <code>entityUrl</code> field of the transaction will contain a presigned AWS S3 URL, valid for 1 hour, to download the exported file.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Export MSP-managed Devices
            tags:
                - MSP
    /v1/msp/inventory/managers:
        get:
            description: Get device managers, across all tenants, managed by the MSP portal.
            operationId: getMspManagedDeviceManagers
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedDeviceManagersPage'
                    description: List of MSP-managed device managers
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get MSP-managed device managers
            tags:
                - MSP
    /v1/msp/inventory/managers/{deviceManagerUid}:
        get:
            description: Get the device manager managed by the MSP portal using its UID.
            operationId: getMspManagedDeviceManager
            parameters:
                - description: The unique identifier of MSP-managed device manager.
                  in: path
                  name: deviceManagerUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedDeviceManager'
                    description: MSP-managed device manager
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get MSP-managed device manager by UID
            tags:
                - MSP
    /v1/msp/inventory/managers/attribute-values:
        get:
            description: Get distinct values for multiple fields in the MSP-managed device managers across all tenants managed by the MSP portal.
            operationId: getMspManagedDeviceManagersAttributeValues
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedDeviceManagerDistinctAttributeValues'
                    description: Distinct attribute values for MSP-managed device managers
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get distinct attribute values for MSP-managed device managers
            tags:
                - MSP
    /v1/msp/inventory/managers/export:
        post:
            description: This is an asynchronous operation to export MSP-managed device managers in CSV format. Once complete, the file can be downloaded using a presigned AWS S3 URL specified in the entityUrl field of the transaction that expires in 1 hour.
            operationId: exportMspManagedDeviceManagers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MspExportInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the export. Once complete, the <code>entityUrl</code> field of the transaction will contain a presigned AWS S3 URL, valid for 1 hour, to download the exported file.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Export MSP-managed Device Managers
            tags:
                - MSP
    /v1/msp/inventory/services:
        get:
            description: Get cloud services, across all tenants, managed by the MSP portal.
            operationId: getMspManagedCloudServices
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedCloudServicePage'
                    description: List of MSP-managed cloud services
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get MSP-managed cloud services
            tags:
                - MSP
    /v1/msp/inventory/services/{cloudServiceUid}:
        get:
            description: Get the cloud service managed by the MSP portal using its UID.
            operationId: getMspManagedCloudService
            parameters:
                - description: The unique identifier of MSP-managed cloud service.
                  in: path
                  name: cloudServiceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedCloudService'
                    description: MSP-managed cloud service
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get MSP-managed cloud service by UID
            tags:
                - MSP
    /v1/msp/inventory/services/attribute-values:
        get:
            description: Get distinct values for multiple fields in the MSP-managed cloud services across all tenants managed by the MSP portal.
            operationId: getMspManagedCloudServicesAttributeValues
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedCloudServiceDistinctAttributeValues'
                    description: Distinct attribute values for MSP-managed cloud services
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get distinct attribute values for MSP-managed cloud services
            tags:
                - MSP
    /v1/msp/inventory/services/export:
        post:
            description: This is an asynchronous operation to export MSP-managed cloud services in CSV format. Once complete, the file can be downloaded using a presigned AWS S3 URL specified in the entityUrl field of the transaction that expires in 1 hour.
            operationId: exportMspManagedCloudServices
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MspExportInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the export. Once complete, the <code>entityUrl</code> field of the transaction will contain a presigned AWS S3 URL, valid for 1 hour, to download the exported file.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Export MSP-managed Cloud Services
            tags:
                - MSP
    /v1/msp/inventory/templates:
        get:
            description: Get templates, across all tenants, managed by the MSP portal.
            operationId: getMspManagedTemplates
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedTemplatesPage'
                    description: List of MSP-managed templates
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get MSP-managed templates
            tags:
                - MSP
    /v1/msp/inventory/templates/{templateUid}:
        get:
            description: Get the template managed by the MSP portal using its UID.
            operationId: getMspManagedTemplate
            parameters:
                - description: The unique identifier of MSP-managed template.
                  in: path
                  name: templateUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedTemplate'
                    description: MSP-managed template
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get MSP-managed template by UID
            tags:
                - MSP
    /v1/msp/inventory/templates/attribute-values:
        get:
            description: Get distinct values for multiple fields in the MSP-managed templates across all tenants managed by the MSP portal.
            operationId: getMspManagedTemplateAttributeValues
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedTemplateDistinctAttributeValues'
                    description: Distinct attribute values for MSP-managed templates
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get distinct attribute values for MSP-managed templates
            tags:
                - MSP
    /v1/msp/inventory/templates/export:
        post:
            description: This is an asynchronous operation to export MSP-managed templates in CSV format. Once complete, the file can be downloaded using a presigned AWS S3 URL specified in the entityUrl field of the transaction that expires in 1 hour.
            operationId: exportMspManagedTemplates
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MspExportInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the export. Once complete, the <code>entityUrl</code> field of the transaction will contain a presigned AWS S3 URL, valid for 1 hour, to download the exported file.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Export MSP-managed Templates
            tags:
                - MSP
    /v1/msp/tenants:
        get:
            description: Get a list of Security Cloud Control tenants managed by the MSP Portal.
            operationId: getMspManagedTenants
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedTenantPage'
                    description: List of Security Cloud Control tenant objects
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Security Cloud Control tenants managed by MSP Portal
            tags:
                - MSP
        post:
            description: 'Add a tenant to the MSP Portal by providing an API token for the tenant. Use this endpoint to add a tenant that the user performing the operation is not associated with, or a tenant in a different region to that of the MSP Portal. Note: This endpoint can only be executed by a super-admin in an MSP Portal.'
            operationId: addMspTenant
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MspAddTenantInput'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StatusInfo'
                    description: Status
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Add Tenant to MSP Portal (API token)
            tags:
                - MSP
    /v1/msp/tenants/{tenantUid}:
        delete:
            description: 'Removes a tenant currently associated with the MSP Portal. Note: this endpoint can only be executed by a super-admin in the MSP Portal.'
            operationId: removeTenantFromMspPortal
            parameters:
                - description: The unique identifier, represented as a UUID, of the tenant in Security Cloud Control.
                  in: path
                  name: tenantUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Remove tenant from MSP Portal
            tags:
                - MSP
        get:
            description: Get a Security Cloud Control tenant managed by the MSP Portal.
            operationId: getMspManagedTenant
            parameters:
                - description: The unique identifier of the tenant in Security Cloud Control.
                  in: path
                  name: tenantUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MspManagedTenant'
                    description: Security Cloud Control tenant object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Security Cloud Control tenant managed by MSP Portal
            tags:
                - MSP
        post:
            deprecated: true
            description: 'This is an asynchronous operation to add an existing tenant that the user making the API call is associated with to the MSP Portal. This endpoint will add an API-only user to the tenant, generate an API token for the API-only user, and add the tenant to the MSP Portal. Note: this endpoint can only be executed by a super-admin in the MSP Portal who is also associated with the tenant being added.'
            operationId: addTenantToMspPortal
            parameters:
                - description: Unique identifier of the tenant to add to the MSP portal.
                  in: path
                  name: tenantUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "409":
                    $ref: '#/components/responses/http409Conflict'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Add tenant to MSP Portal
            tags:
                - MSP
    /v1/msp/tenants/{tenantUid}/cdfmc:
        post:
            description: This is an asynchronous operation to provision a cdFMC for a tenant associated with the MSP Portal. This operation does not wait for the cdFMC to be provisioned on the target tenant, and will be marked as successful once the provisioning has been successfully triggered. To monitor the transaction on the target tenant, use the UID in the `TRANSACTION_UID_IN_TARGET_TENANT` key in the transaction details.
            operationId: provisionCdFmcForTenantInMspPortal
            parameters:
                - description: Unique identifier of the tenant that cdFMC provisioning will be enabled for.
                  in: path
                  name: tenantUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the operation.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Provision cdFMC for Security Cloud Control tenant in MSP Portal
            tags:
                - MSP
    /v1/msp/tenants/{tenantUid}/mcd:
        post:
            description: This is an asynchronous operation to enable Multicloud Defense for a tenant associated with the MSP Portal.
            operationId: enableMulticloudDefenseForTenantInMspPortal
            parameters:
                - description: Unique identifier of the tenant that Multicloud Defense will be enabled for.
                  in: path
                  name: tenantUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the operation.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Enable Multicloud Defense for Security Cloud Control tenant in MSP Portal
            tags:
                - MSP
    /v1/msp/tenants/{tenantUid}/users:
        get:
            description: Get a list of (non-API-only) users associated with the Security Cloud Control tenant managed by MSP portal.
            operationId: getHumanUsersInMspManagedTenant
            parameters:
                - description: Unique identifier of the tenant to retrieve the users for.
                  in: path
                  name: tenantUid
                  required: true
                  schema:
                    format: uuid
                    type: string
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserPage'
                    description: List of User objects
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get non-API-only Users associated with tenant in MSP portal
            tags:
                - MSP
        post:
            description: This is an asynchronous operation to add a list of users to a tenant associated with the MSP Portal.
            operationId: addUsersToTenantInMspPortal
            parameters:
                - description: Unique identifier of the tenant to which the users will be added.
                  in: path
                  name: tenantUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MspAddUsersToTenantInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the operation.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Add users to Security Cloud Control tenant in MSP Portal
            tags:
                - MSP
    /v1/msp/tenants/{tenantUid}/users/{apiUserUid}/token:
        post:
            description: Generate API Token for API-only user on a tenant managed by the MSP portal. API-only users are used for building automations with Security Cloud Control. If the user ID provided is not that of an API-only user, this operation will fail.
            operationId: generateApiTokenForUserInTenant
            parameters:
                - description: The unique identifier of the tenant in Security Cloud Control.
                  in: path
                  name: tenantUid
                  required: true
                  schema:
                    format: uuid
                    type: string
                - description: The unique identifier of the API-only user in Security Cloud Control.
                  in: path
                  name: apiUserUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiTokenInfo'
                    description: API Token
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Generate token for API-only user on tenant managed by MSP portal
            tags:
                - MSP
    /v1/msp/tenants/{tenantUid}/users/api-only:
        get:
            description: Get a list of API-only users associated with the Security Cloud Control tenant managed by MSP portal.
            operationId: getApiOnlyUsersInMspManagedTenant
            parameters:
                - description: Unique identifier of the tenant to retrieve the users for.
                  in: path
                  name: tenantUid
                  required: true
                  schema:
                    format: uuid
                    type: string
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserPage'
                    description: List of User objects
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get API-only Users associated with tenant in MSP portal
            tags:
                - MSP
    /v1/msp/tenants/{tenantUid}/users/delete:
        post:
            description: This is an asynchronous operation to remove a list of users from a tenant associated with the MSP Portal.
            operationId: deleteUsersFromTenantInMspPortal
            parameters:
                - description: Unique identifier of the tenant from which the users will be deleted
                  in: path
                  name: tenantUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MspDeleteUsersFromTenantInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the operation.
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Remove users from Security Cloud Control tenant in MSP Portal
            tags:
                - MSP
    /v1/msp/tenants/create:
        post:
            description: 'Create a new tenant in Security Cloud Control from an MSP Portal. This endpoint creates a tenant, adds the tenant to the MSP Portal. If the user creating the tenant is not an API-only user, the user is also added to the tenant. Note: This endpoint can only be executed by a super-admin in an MSP Portal. You can create no more than 1 tenant every 30 seconds. Additionally, you are limited to creating a total of 100 tenants: please speak to support to raise this limit.'
            operationId: createTenant
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MspCreateTenantInput'
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the status of the tenant creation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "409":
                    $ref: '#/components/responses/http409Conflict'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Create Security Cloud Control Tenant
            tags:
                - MSP
    /v1/objects:
        get:
            description: 'Get objects in the Security Cloud Control tenant. To use the object APIs, contact customer support or provision Multicloud Defense and turn on object sharing. Note: the object APIs only support operations on network objects and groups.'
            operationId: getObjects
            parameters:
                - description: The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content.
                  example: content:*2.2.* AND name:Lab1
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: If enabled, the search will also include results from override objects.
                  in: query
                  name: includeOverrides
                  required: false
                  schema:
                    default: false
                    type: boolean
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 1
                    type: string
                - deprecated: true
                  description: The fields to sort results by. This parameter is deprecated.
                  example: name:DESC
                  in: query
                  name: sortBy
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListObjectResponse'
                    description: A paginated view of the Security Cloud Control objects.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Get Objects
            tags:
                - Object Management
        post:
            description: 'Create an object in the Security Cloud Control tenant. To use the object APIs, contact customer support or provision Multicloud Defense and turn on object sharing. Note: the object APIs only support operations on network objects and groups.'
            operationId: createObject
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ObjectResponse'
                    description: A descriptive representation of the created Security Cloud Control object.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Create Object
            tags:
                - Object Management
    /v1/objects/{uid}:
        delete:
            description: 'Delete an object in the Security Cloud Control tenant. To use the object APIs, contact customer support or provision Multicloud Defense and turn on object sharing. Note: the object APIs only support operations on network objects and groups.'
            operationId: deleteObject
            parameters:
                - description: The unique identifier of the object being deleted.
                  example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                  in: path
                  name: uid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    content:
                        '*/*':
                            schema:
                                type: object
                    description: No content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Delete Object
            tags:
                - Object Management
        get:
            description: 'Gets an object in the Security Cloud Control tenant. To use the object APIs, contact customer support or provision Multicloud Defense and turn on object sharing. Note: the object APIs only support operations on network objects and groups.'
            operationId: getObject
            parameters:
                - description: The unique identifier of the object being retrieved.
                  example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                  in: path
                  name: uid
                  required: true
                  schema:
                    format: uuid
                    type: string
                - description: The scope of the fields to be retrieved. One of ["@basic", "@detailed"]. Defaults to "@basic".
                  example: '@detailed'
                  in: query
                  name: fields
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ObjectResponse'
                    description: OK
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Get Object
            tags:
                - Object Management
        patch:
            description: 'Modify an object in the Security Cloud Control tenant. To use the object APIs, contact customer support or provision Multicloud Defense and turn on object sharing. Note: the object APIs only support operations on network objects and groups.'
            operationId: modifyObject
            parameters:
                - description: The unique identifier of the object being updated.
                  example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                  in: path
                  name: uid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ObjectResponse'
                    description: A descriptive representation of the updated Security Cloud Control object.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Modify Object
            tags:
                - Object Management
    /v1/objects/{uid}/duplicates:
        get:
            description: 'Get objects in the Security Cloud Control tenant that are duplicates of the given object. To use the object APIs, contact customer support or provision Multicloud Defense and turn on object sharing. Note: the object APIs only support operations on network objects and groups.'
            operationId: getDuplicateObjects
            parameters:
                - description: The unique identifier of the object to retrieve duplicates for.
                  example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                  in: path
                  name: uid
                  required: true
                  schema:
                    format: uuid
                    type: string
                - description: the unique identifier of the target to restrict the duplicate search to.
                  example: 6131daad-e813-4b8f-8f42-be1e241e8cdb
                  in: query
                  name: targetUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/DuplicateGroupDto'
                                type: array
                    description: Duplicates of the object.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Get Duplicate Objects
            tags:
                - Object Management
    /v1/objects/{uid}/targets:
        delete:
            description: 'Delete targets from an object in the Security Cloud Control tenant. To use the object APIs, contact customer support or provision Multicloud Defense and turn on object sharing. Note: the object APIs only support operations on network objects and groups.'
            operationId: deleteTargets
            parameters:
                - description: the unique identifier of the object for which the targets are being removed from.
                  example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                  in: path
                  name: uid
                  required: true
                  schema:
                    format: uuid
                    type: string
                - description: The list of UIDs of the targets being removed.
                  example: '[7131daad-e813-4b8f-8f42-be1e241e8cdb, yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy]'
                  in: query
                  name: targetUuids
                  required: true
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "204":
                    content:
                        '*/*':
                            schema:
                                type: object
                    description: No content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    content:
                        '*/*':
                            schema:
                                type: object
                    description: Not found
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Delete Targets
            tags:
                - Object Management
        get:
            description: 'Get targets from an object in the Security Cloud Control tenant. To use the object APIs, contact customer support or provision Multicloud Defense and turn on object sharing. Note: the object APIs only support operations on network objects and groups.'
            operationId: getTargets
            parameters:
                - description: The unique identifier of the object for which the targets are being retrieved.
                  example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                  in: path
                  name: uid
                  required: true
                  schema:
                    format: uuid
                    type: string
                - description: 'The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are: targetType.'
                  example: targetType:MCD
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 1
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListObjectResponse'
                    description: A paginated view of the Security Cloud Control targets.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Get Targets
            tags:
                - Object Management
        post:
            description: 'Create targets for an object in the Security Cloud Control tenant. To use the object APIs, contact customer support or provision Multicloud Defense and turn on object sharing. Note: the object APIs only support operations on network objects and groups.'
            operationId: createTargets
            parameters:
                - description: the unique identifier of the object for which the targets are being added to.
                  example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                  in: path
                  name: uid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TargetsRequest'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                type: object
                    description: No content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    content:
                        '*/*':
                            schema:
                                type: object
                    description: Not found
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Create Targets
            tags:
                - Object Management
    /v1/objects/{uid}/usage:
        get:
            description: 'Get usages of an object in the Security Cloud Control tenant. To use the object APIs, contact customer support or provision Multicloud Defense and turn on object sharing. Note: the object APIs only support operations on network objects and groups.'
            operationId: getObjectUsages
            parameters:
                - description: The unique identifier of the object to retrieve usages for.
                  example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                  in: path
                  name: uid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/ReferenceInfo'
                                type: array
                    description: A descriptive representation of the created Security Cloud Control object.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Get Object Usages
            tags:
                - Object Management
    /v1/objects/issues-count:
        get:
            description: 'Get issues count in the Security Cloud Control tenant. To use the object APIs, contact customer support or provision Multicloud Defense and turn on object sharing. Note: the object APIs only support operations on network objects and groups.'
            operationId: getIssuesCount
            parameters:
                - description: The query to execute. Use the Lucene Query Syntax to construct your query. Possible fields to search by are name, content.
                  example: content:*2.2.* AND name:Lab1
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IssuesCount'
                    description: OK
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Get Issues Count
            tags:
                - Object Management
    /v1/objects/overrides/{uid}:
        get:
            description: 'Gets an object in the Security Cloud Control tenant with values for specific target uid. To use the object APIs, contact customer support or provision Multicloud Defense and turn on object sharing. Note: the object APIs only support operations on network objects and groups.'
            operationId: getOverrideObject
            parameters:
                - description: The unique identifier of the object being retrieved.
                  example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                  in: path
                  name: uid
                  required: true
                  schema:
                    format: uuid
                    type: string
                - description: The target UID to calculate values for.
                  example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                  in: query
                  name: targetUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ObjectResponse'
                    description: OK
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Get Override Object With Values For Specific Target
            tags:
                - Object Management
    /v1/policies/asa/accessgroups:
        get:
            description: Get a list of ASA Access Groups.
            operationId: listAccessGroups
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccessGroupPage'
                    description: List of Access Groups
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Access Groups
            tags:
                - Access Groups
        post:
            description: Create an Access Group
            operationId: createAccessGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AccessGroupCreateInput'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccessGroup'
                    description: Security Cloud Control Access Group
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Create Access Group
            tags:
                - Access Groups
    /v1/policies/asa/accessgroups/{accessGroupUid}:
        delete:
            description: Delete Access Group by UID in the Security Cloud Control tenant.
            operationId: deleteAccessGroup
            parameters:
                - description: The unique identifier, represented as a UUID, of the Access Group in Security Cloud Control.
                  in: path
                  name: accessGroupUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Delete Access Group
            tags:
                - Access Groups
        get:
            description: Get a single ASA Access Group by UUID.
            operationId: fetchAccessGroup
            parameters:
                - description: The unique identifier, represented as a UUID, of the Access Group in Security Cloud Control.
                  in: path
                  name: accessGroupUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccessGroup'
                    description: Access Group object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Access Group
            tags:
                - Access Groups
        patch:
            description: Modify Security Cloud Control Access Group by UID.
            operationId: patchAccessGroup
            parameters:
                - description: The unique identifier, represented as a UUID, of the Security Cloud Control Access Group.
                  in: path
                  name: accessGroupUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AccessGroupUpdateInput'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccessGroup'
                    description: Security Cloud Control Access Group
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Modify ASA Access Group
            tags:
                - Access Groups
    /v1/policies/asa/accessrules:
        get:
            description: Get a list of ASA Access Rules.
            operationId: listAccessRules
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccessRulePage'
                    description: List of Access Rules.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Access Rules
            tags:
                - ASA Access Rules
        post:
            description: Create an Access Rule in the Security Cloud Control tenant.
            operationId: createAccessRule
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AccessRuleCreateInput'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccessRule'
                    description: Security Cloud Control Access Rule.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Create Access Rule
            tags:
                - ASA Access Rules
    /v1/policies/asa/accessrules/{accessRuleUid}:
        delete:
            description: Delete Access Rule by UID in the Security Cloud Control tenant.
            operationId: deleteAccessRule
            parameters:
                - description: The unique identifier, represented as a UUID, of the Access Rule in Security Cloud Control.
                  in: path
                  name: accessRuleUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Delete Access Rule
            tags:
                - ASA Access Rules
        get:
            description: Get a single ASA Access Rule by UUID.
            operationId: fetchAccessRule
            parameters:
                - description: The unique identifier, represented as a UUID, of the Access Rule in Security Cloud Control.
                  in: path
                  name: accessRuleUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccessRule'
                    description: Access Rule object.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Access Rule
            tags:
                - ASA Access Rules
        patch:
            description: Modify an Access Rule in the Security Cloud Control tenant by UID.
            operationId: modifyAccessRule
            parameters:
                - description: The unique identifier, represented as a UUID, of the Security Cloud Control Access Rule.
                  in: path
                  name: accessRuleUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AccessRuleUpdateInput'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccessRule'
                    description: Security Cloud Control Access Rule
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Modify ASA Access Rule
            tags:
                - ASA Access Rules
    /v1/regions:
        get:
            description: Get the list of regions that Security Cloud Control is deployed in.
            operationId: getRegions
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoRegionList'
                    description: List of Security Cloud Control regions
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            summary: Get Security Cloud Control Regions
            tags:
                - Meta
    /v1/search:
        get:
            description: Search for devices, services, managers, objects and policies across the Security Cloud Control tenant.
            operationId: search
            parameters:
                - description: This can be any non-empty string, and represents the search criteria. Spaces are allowed, but must be URL encoded.
                  in: query
                  name: q
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GlobalSearchResult'
                    description: Search Result
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Search
            tags:
                - Search
    /v1/search/index:
        post:
            description: Initiate Full Indexing on the CDO tenant, to improve accuracy of search results. This operation is performed automatically on a schedule by CDO, but can be triggered on demand too. This operation is asynchronous, but its progress cannot be tracked using Security Cloud Control's API.
            operationId: initiateFullIndexing
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the indexing operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Rebuild search index
            tags:
                - Search
    /v1/settings/tenant:
        get:
            description: Get the settings for the Security Cloud Control tenant.
            operationId: getTenantSettings
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TenantSettings'
                    description: Tenant Settings Object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Tenant Settings
            tags:
                - Tenant Management
        patch:
            description: Modify the settings for the Security Cloud Control tenant.
            operationId: modifyTenantSettings
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TenantSettings'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TenantSettings'
                    description: Tenant Settings Object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Modify Tenant Settings
            tags:
                - Tenant Management
    /v1/tenants:
        get:
            description: Get a list of tenants with which the Security Cloud Control user is associated.
            operationId: getTenants
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TenantPage'
                    description: List of Tenant Objects
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Tenants
            tags:
                - Tenant Management
    /v1/tenants/{tenantUid}:
        get:
            description: Fetch a tenant by UID in Security Cloud Control. This will return a 200 response only if the user is associated with the tenant.
            operationId: getTenant
            parameters:
                - description: The unique identifier, represented as a UUID, of the tenant in Security Cloud Control.
                  in: path
                  name: tenantUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Tenant'
                    description: Tenant Object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Tenant
            tags:
                - Tenant Management
    /v1/token:
        get:
            description: Fetch information on the current token. Each Security Cloud Control token is associated with a specific user and a specific tenant. A token can only be used to perform operations on the tenant it is associated with.
            operationId: getToken
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTokenInfo'
                    description: Token information
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Token Info
            tags:
                - Users
    /v1/token/revoke:
        post:
            description: Revoke the current token. All subsequent requests with a revoked token will fail with 401 Unauthorized errors.
            operationId: revokeToken
            responses:
                "200":
                    description: Revoke success
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Revoke Token
            tags:
                - Users
    /v1/transactions/{transactionUid}:
        get:
            description: Get information on an in-progress CDO transaction. An CDO transaction is an entity used to monitor progress of, and provide feedback on, long-running operations. All asynchronous operations in CDO's API create Security Cloud Control transactions.
            operationId: getTransaction
            parameters:
                - in: path
                  name: transactionUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: 'CDO Transaction that has completed, either successfully or unsuccessfully. Note: failed Security Cloud Control Transactions do not roll back.'
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction that is pending or in progress.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Transaction
            tags:
                - Transactions
    /v1/users:
        get:
            description: 'Get a list of (non-API-only) users associated with the Security Cloud Control tenant assigned to the SCC Firewall Manager. Note: This endpoint returns only human users, not API-only users.'
            operationId: getUsers
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserPage'
                    description: List of User objects
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Tenant Users
            tags:
                - Users
        post:
            description: Create a user in the Security Cloud Control enterprise and assigns the specified role for access to the Firewall Manager application.
            operationId: createUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserCreateOrUpdateInput'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: User object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Create User in Security Cloud Control Tenant
            tags:
                - Users
    /v1/users/{apiUserUid}/apiToken/generate:
        post:
            description: Generate API Token for API-only user. API-only users are used for building automations with Security Cloud Control. If the user ID provided is not that of an API-only user, this operation will fail.
            operationId: generateApiToken
            parameters:
                - description: The unique identifier, represented as a UUID, of the API-only user in Security Cloud Control
                  in: path
                  name: apiUserUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiTokenInfo'
                    description: API Token
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Generate Token for API-only user
            tags:
                - Users
    /v1/users/{apiUserUid}/apiToken/revoke:
        post:
            description: Revoke API Token of API-only user. If the user ID provided is not that of an API-only user, this operation will fail.
            operationId: revokeApiToken
            parameters:
                - description: The unique identifier, represented as a UUID, of the API user in Security Cloud Control.
                  in: path
                  name: apiUserUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StatusInfo'
                    description: Status
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Revoke API-only User's Token
            tags:
                - Users
    /v1/users/{userUid}:
        delete:
            description: Revokes a user's access to Firewall Manager within a specific Security Cloud Control enterprise. This action will not affect the user's access to other products in the enterprise or their access to Firewall Manager in other enterprises.
            operationId: deleteUser
            parameters:
                - description: The unique identifier of the user in Security Cloud Control.
                  in: path
                  name: userUid
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Delete User from Security Cloud Control Firewall Manager Tenant
            tags:
                - Users
        get:
            description: Fetch a user by UID in the CDO tenant. This will only return 200 responses for users associated with the Security Cloud Control tenant and assigned to the SCC Firewall Manager.
            operationId: getUser
            parameters:
                - description: The unique identifier of the user in Security Cloud Control.
                  in: path
                  name: userUid
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: User object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Tenant User
            tags:
                - Users
    /v1/users/api-only:
        get:
            description: Get a list of API-only users associated with the Security Cloud Control Firewall Manager tenant.
            operationId: getApiOnlyUsers
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserPage'
                    description: List of User objects
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Tenant API-only Users
            tags:
                - Users
    /v1/users/bulk:
        post:
            description: This is an asynchronous operation to create multiple users in the Security Cloud Control enterprise and assign the specified role to each user for access to the Firewall Manager application.
            operationId: createMultipleUsers
            parameters:
                - in: header
                  name: X-Calling-Service
                  required: false
                  schema:
                    type: string
                - description: Custom metadata to identify the request
                  in: header
                  name: X-Request-Metadata
                  required: false
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                $ref: '#/components/schemas/UserCreateOrUpdateInput'
                            type: array
                            uniqueItems: true
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the creation operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Create multiple users in Security Cloud Control Tenant
            tags:
                - Users
    /v1/users/delete:
        post:
            description: This is an asynchronous operation that revokes a user's access to Firewall Manager within a specific Security Cloud Control enterprise. This action will not affect the user's access to other products in the enterprise or their access to Firewall Manager in other enterprises.
            operationId: deleteMultipleUsers
            parameters:
                - in: header
                  name: X-Calling-Service
                  required: false
                  schema:
                    type: string
                - description: Custom metadata to identify the request
                  in: header
                  name: X-Request-Metadata
                  required: false
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            items:
                                type: string
                            type: array
                            uniqueItems: true
                required: true
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the deletion operation.
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Delete Multiple Users from Security Cloud Control Firewall Manager Tenant
            tags:
                - Users
    /v1/users/groups:
        get:
            description: Get a list of active directory groups associated with the Security Cloud Control tenant.
            operationId: getActiveDirectoryGroups
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActiveDirectoryGroupPage'
                    description: List of Active Directory Group objects
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Active Directory Groups
            tags:
                - Users
        post:
            description: Create an Active Directory Group in the Security Cloud Control tenant.
            operationId: createActiveDirectoryGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ActiveDirectoryGroupCreateOrUpdateInput'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActiveDirectoryGroup'
                    description: Active Directory Group object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Create Active Directory Group in Security Cloud Control Tenant
            tags:
                - Users
    /v1/users/groups/{groupUid}:
        delete:
            description: Delete a Active Directory Group by UID in the Security Cloud Control tenant.
            operationId: deleteActiveDirectoryGroup
            parameters:
                - description: The unique identifier, represented as a UUID, of the Active Directory Group in Security Cloud Control.
                  in: path
                  name: groupUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Delete Active Directory Group from Security Cloud Control Tenant
            tags:
                - Users
        get:
            description: Fetch a active directory group by UID in the Security Cloud Control tenant.
            operationId: getActiveDirectoryGroup
            parameters:
                - description: The unique identifier, represented as a UUID, of the active directory group in Security Cloud Control.
                  in: path
                  name: groupUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActiveDirectoryGroup'
                    description: Active Directory Group object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get Active Directory Group
            tags:
                - Users
        patch:
            description: Modify an Active Directory Group by UID.
            operationId: modifyActiveDirectoryGroup
            parameters:
                - description: The unique identifier, represented as a UUID, of the active directory group in Security Cloud Control.
                  in: path
                  name: groupUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ActiveDirectoryGroupCreateOrUpdateInput'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActiveDirectoryGroup'
                    description: Active Directory Group object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Modify Active Directory Group
            tags:
                - Users
    /v1/vpnsessions:
        get:
            description: Get a list of RA VPN sessions.
            operationId: getRaVpnSessions
            parameters:
                - description: The number of results to retrieve.
                  in: query
                  name: limit
                  required: false
                  schema:
                    maximum: 200
                    minimum: 0
                    type: string
                - description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                  in: query
                  name: offset
                  required: false
                  schema:
                    minimum: 0
                    type: string
                - description: The query to execute. Use the Lucene Query Syntax to construct your query.
                  example: fieldName:fieldValue
                  in: query
                  name: q
                  required: false
                  schema:
                    type: string
                - description: The fields to sort results by.
                  example: name:DESC
                  in: query
                  name: sort
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RaVpnSessionPage'
                    description: List of RA VPN Sessions
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get RA VPN Sessions
            tags:
                - Remote Access Monitoring
    /v1/vpnsessions/{deviceUid}/terminate:
        post:
            description: This is an asynchronous operation to terminate all RA VPN sessions on a device in the Security Cloud Control tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation.
            operationId: terminateRaVpnSessionsByDevice
            parameters:
                - in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the termination operation
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Terminate RA VPN Sessions
            tags:
                - Remote Access Monitoring
    /v1/vpnsessions/{deviceUid}/terminate/{userName}:
        post:
            description: This is an asynchronous operation to terminate all of a user's RA VPN sessions on a device in the Security Cloud Control tenant. This operation returns a link to a transaction object that can be used to monitor the progress of the operation.
            operationId: terminateRaVpnSessionsByDeviceAndUserName
            parameters:
                - in: path
                  name: deviceUid
                  required: true
                  schema:
                    format: uuid
                    type: string
                - in: path
                  name: userName
                  required: true
                  schema:
                    type: string
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the termination operation
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Terminate User's RA VPN Sessions
            tags:
                - Remote Access Monitoring
    /v1/vpnsessions/{raVpnSessionUid}:
        get:
            description: Get a RA VPN session by UID in the Security Cloud Control tenant.
            operationId: getRaVpnSession
            parameters:
                - description: The unique identifier, represented as a UUID, of the RA VPN session in Security Cloud Control.
                  in: path
                  name: raVpnSessionUid
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RaVpnSession'
                    description: RA VPN Session object
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "404":
                    $ref: '#/components/responses/http404NotFound'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Get RA VPN Session
            tags:
                - Remote Access Monitoring
    /v1/vpnsessions/refresh:
        post:
            description: This is an asynchronous operation to refresh RA VPN sessions for all devices in the Security Cloud Control tenant.
            operationId: refreshRaVpnSessionsByDevice
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RaVpnDeviceInput'
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CdoTransaction'
                    description: Security Cloud Control Transaction object that can be used to track the progress of the refresh operation
                "400":
                    $ref: '#/components/responses/http400BadRequest'
                "401":
                    $ref: '#/components/responses/http401Unauthorised'
                "403":
                    $ref: '#/components/responses/http403Forbidden'
                "405":
                    $ref: '#/components/responses/http405MethodNotAllowed'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonApiError'
                    description: Internal server error.
            security:
                - bearerAuth: []
            summary: Refresh RA VPN Sessions
            tags:
                - Remote Access Monitoring
servers:
    - url: https://api.us.security.cisco.com/firewall
      description: US
    - url: https://api.eu.security.cisco.com/firewall
      description: EU
    - url: https://api.apj.security.cisco.com/firewall
      description: APJ
    - url: https://api.au.security.cisco.com/firewall
      description: AUS
    - url: https://api.in.security.cisco.com/firewall
      description: IN
    - url: https://api.int.security.cisco.com/firewall
      description: Staging
    - url: https://scale.manage.security.cisco.com/api/rest
      description: Scale
    - url: https://ci.manage.security.cisco.com/api/rest
      description: CI
    - url: https://manage.stg.secure.cisco/api/rest
      description: Stgf9
components:
    schemas:
        AccessGroup:
            properties:
                appliedTo:
                    description: The set of device unique identifiers to which this Access Group was applied. Only valid for shared access group.
                    example: '[deviceUid1, deviceUid2, ..., deviceUidN]'
                    items:
                        format: uuid
                        type: string
                    type: array
                    uniqueItems: true
                createdDate:
                    description: The time (in UTC) at which Access Group was created, represented using the RFC-3339 standard.
                    example: 2023-12-13T05:15:44Z
                    format: date-time
                    type: string
                entityUid:
                    description: The unique identifier, represented as a UUID, of the device/manager associated with the Access Group.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                isShared:
                    description: The flag that identifies if access group is shared.
                    example: false
                    type: boolean
                name:
                    description: The name of Access Group. Access Group names are unique in Security Cloud Control.
                    example: my-example-access-group
                    type: string
                resources:
                    description: The set of of interface and direction pairs or global resource.
                    example: 'Interface resource: [{"interfaceName": "outside"},{"direction": "OUTBOUND"}] or Global resource: [{"global": true}]'
                    items:
                        additionalProperties: {}
                        type: object
                    type: array
                    uniqueItems: true
                sharedAccessGroupUid:
                    description: The unique identifier, represented as a UUID, of the shared access group manager associated with the Access Group.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of Access Group in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                updatedDate:
                    description: The time (in UTC) at which Access Group was updated, represented using the RFC-3339 standard.
                    example: 2023-12-13T05:15:44Z
                    format: date-time
                    type: string
            required:
                - entityUid
                - name
                - sharedAccessGroupUid
                - uid
            type: object
        AccessGroupCreateInput:
            properties:
                appliedTo:
                    description: The set of device unique identifiers to which this Access Group was applied. Only valid for shared access group.
                    example: '[deviceUid1, deviceUid2, ..., deviceUidN]'
                    items:
                        format: uuid
                        type: string
                    type: array
                    uniqueItems: true
                entityUid:
                    description: 'The unique identifier, represented as a UUID, of the device/manager associated with the Access Group. When creating shared Access Group, entityUid represents device that contains source Access Group '
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                isShared:
                    description: The flag that identifies if access group is shared.  If set to true, appliedTo field should be provided as well and entityUid should point to source device.
                    example: false
                    type: boolean
                name:
                    description: A human-readable name for the Access Group.
                    example: Access-Group1
                    type: string
                resources:
                    description: The set of of interface and direction pairs or global resource.  Resource is an attribute applicable only to devices and will not be propagated to appliedTo devices if Access Group is shared.
                    example: 'Interface resource: [{"interfaceName": "outside","direction": "OUTBOUND"] or Global resource: [{"global": true}]'
                    items:
                        additionalProperties: {}
                        type: object
                    type: array
                    uniqueItems: true
            required:
                - entityUid
            type: object
        AccessGroupPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/AccessGroup'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        AccessGroupUpdateInput:
            properties:
                appliedTo:
                    description: The set of device unique identifiers to which this Access Group was applied. Only valid for shared access group.
                    example: '[deviceUid1, deviceUid2, ..., deviceUidN]'
                    items:
                        format: uuid
                        type: string
                    type: array
                    uniqueItems: true
                isShared:
                    description: The flag that identifies if access group is shared.  If set to true, appliedTo field should be provided as well and entityUid should point to source device.
                    example: false
                    type: boolean
                name:
                    description: A human-readable name for the Access Group.
                    example: Access-Group1
                    type: string
                resources:
                    description: The set of of interface and direction pairs or global resource.  Resource is an attribute applicable only to devices and will not be propagated to appliedTo devices if Access Group is shared.
                    example: 'Interface resource: [{"interfaceName": "outside","direction": "OUTBOUND"] or Global resource: [{"global": true}]'
                    items:
                        additionalProperties: {}
                        type: object
                    type: array
                    uniqueItems: true
            type: object
        AccessRule:
            properties:
                accessGroupUid:
                    description: The unique identifier, represented as a UUID, of the Access Group associated with the Access Rule.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                createdDate:
                    description: The time (in UTC) at which Access Rule was created, represented using the RFC-3339 standard.
                    example: 2023-12-13T05:15:44Z
                    format: date-time
                    type: string
                destinationDynamicObject:
                    $ref: '#/components/schemas/AccessRuleDetailsContent'
                    description: The destination dynamic object.
                destinationNetwork:
                    $ref: '#/components/schemas/AccessRuleDetailsContent'
                    description: The destination network.
                destinationPort:
                    $ref: '#/components/schemas/AccessRuleDetailsContent'
                    description: The destination port.
                entityUid:
                    description: The unique identifier, represented as a UUID, of the device/manager associated with the Access Rule. Points to shared Access Group in case of shared Rule
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                index:
                    description: Access rule index position in Access Group ordered rule list.
                    example: 1
                    format: int32
                    type: integer
                isActiveRule:
                    description: Indicates whether this rule is active.
                    type: boolean
                issues:
                    description: Indicates if rule has SHADOWED, SHARED or DUPLICATE (remark) issue.
                    items:
                        $ref: '#/components/schemas/AccessRuleIssue'
                    type: array
                    uniqueItems: true
                logSettings:
                    $ref: '#/components/schemas/LogSettings'
                    description: The set of of interface and direction pairs or global resource.
                protocol:
                    $ref: '#/components/schemas/AccessRuleDetailsContent'
                    description: The protocol.
                remark:
                    description: A remark.
                    type: string
                ruleAction:
                    description: Representation of the rule action.
                    enum:
                        - PERMIT
                        - DENY
                    type: string
                ruleConfigurationLineNumber:
                    description: Representation of the rule's line number in configuration.
                    example: 1021
                    format: int64
                    type: integer
                ruleConfigurationText:
                    description: Representation of the rule in configuration.
                    example: access-list ExampleList extended permit ip any any
                    type: string
                ruleParsingError:
                    description: The error, if any, that was encountered when parsing the rule.
                    example: Could not parse [255.0.0.255]
                    type: string
                ruleTimeRange:
                    $ref: '#/components/schemas/AccessRuleDetailsContent'
                    description: The rule time range.
                ruleType:
                    description: The L3 level rule type. L3, L7 or CONTENT_FILTERING. Defaults to L3.
                    example: L3
                    type: string
                sharedAccessGroupUid:
                    description: Optional unique identifier for the shared Access Group associated with a shared Access Rule.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                sourceDynamicObject:
                    $ref: '#/components/schemas/AccessRuleDetailsContent'
                    description: The source dynamic object.
                sourceNetwork:
                    $ref: '#/components/schemas/AccessRuleDetailsContent'
                    description: The source network.
                sourcePort:
                    $ref: '#/components/schemas/AccessRuleDetailsContent'
                    description: The source port.
                uid:
                    description: The unique identifier, represented as a UUID, of Access Rule in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                updatedDate:
                    description: The time (in UTC) at which Access Rule was updated, represented using the RFC-3339 standard.
                    example: 2023-12-13T05:15:44Z
                    format: date-time
                    type: string
            required:
                - accessGroupUid
                - entityUid
                - index
                - uid
            type: object
        AccessRuleCreateInput:
            properties:
                accessGroupUid:
                    description: The unique identifier, represented as a UUID, of the Access Group associated with the Access Rule.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                activeRule:
                    type: boolean
                destinationDynamicObject:
                    $ref: '#/components/schemas/DestinationDynamicObjectContent'
                destinationNetwork:
                    $ref: '#/components/schemas/DestinationNetworkContent'
                destinationPort:
                    $ref: '#/components/schemas/DestinationPortContent'
                entityUid:
                    description: The unique identifier, represented as a UUID, of the device/manager associated with the Access Rule. Points to the shared Access Group in the case of a shared Access Rule being created.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                index:
                    description: The position of the Access Rule in the orded list of rules in an Access Group.
                    example: 1
                    format: int32
                    type: integer
                logSettings:
                    $ref: '#/components/schemas/LogSettings'
                    description: The level and interval of the log.
                protocol:
                    $ref: '#/components/schemas/ProtocolContent'
                remark:
                    description: A human-readable remark. This is typically used to describe the intentions of the access rule.
                    type: string
                ruleAction:
                    description: The rule's action.
                    enum:
                        - PERMIT
                        - DENY
                    example: PERMIT
                    type: string
                ruleTimeRange:
                    $ref: '#/components/schemas/RuleTimeRangeContent'
                sourceDynamicObject:
                    $ref: '#/components/schemas/SourceDynamicObjectContent'
                sourceNetwork:
                    $ref: '#/components/schemas/SourceNetworkContent'
                sourcePort:
                    $ref: '#/components/schemas/SourcePortContent'
            required:
                - accessGroupUid
                - entityUid
                - index
            type: object
        AccessRuleDetailsContent:
            properties:
                elements:
                    description: The list of elements.
                    items:
                        type: string
                    type: array
                name:
                    description: The name
                    example: any
                    type: string
                type:
                    description: The type of the policy object.
                    enum:
                        - NETWORK_OBJECT
                        - IPV4_ADDRESS_POOL
                        - IPV6_ADDRESS_POOL
                        - NETWORK_GROUP
                        - SERVICE_OBJECT
                        - SERVICE_TCP_OBJECT
                        - SERVICE_UDP_OBJECT
                        - SERVICE_ICMPV4_OBJECT
                        - SERVICE_ICMPV6_OBJECT
                        - SERVICE_PROTOCOL_OBJECT
                        - SERVICE_GROUP
                        - SERVICE_FTD_GROUP
                        - PROTOCOL_GROUP
                        - ICMP_GROUP
                        - URL_OBJECT
                        - URL_GROUP
                        - APPLICATION_FILTER_OBJECT
                        - TIME_RANGE
                    example: NETWORK_OBJECT
                    type: string
                uid:
                    description: The unique identifier.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        AccessRuleIssue:
            description: Represents an access rule issue, including issue type and causes.
            properties:
                causes:
                    description: A list of the causes for the rule being marked with an issue.
                    example:
                        - causeTypes:
                            - SHADOWED_BY_NETWORK_ADDRESS
                            - SHADOWED_BY_ICMP
                          causingRule: Rule_1
                          causingRuleIdx: 5
                    items:
                        $ref: '#/components/schemas/Cause'
                    type: array
                issueType:
                    description: Indicates if the rule has any known issue. For unknown issues, UNKNOWN value will be used.
                    enum:
                        - SHADOWED
                        - SHARED
                        - DUPLICATE
                        - UNKNOWN
                    type: string
            type: object
        AccessRulePage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/AccessRule'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        AccessRuleUpdateInput:
            properties:
                destinationDynamicObject:
                    $ref: '#/components/schemas/DestinationDynamicObjectContent'
                destinationNetwork:
                    $ref: '#/components/schemas/DestinationNetworkContent'
                destinationPort:
                    $ref: '#/components/schemas/DestinationPortContent'
                index:
                    description: Access rule index position in Access Group ordered rule list.
                    example: 1
                    format: int32
                    type: integer
                isActiveRule:
                    description: Is active. True by default
                    example: false
                    type: boolean
                logSettings:
                    $ref: '#/components/schemas/LogSettings'
                    description: The set of of interface and direction pairs or global resource.
                protocol:
                    $ref: '#/components/schemas/ProtocolContent'
                    example:
                        elements:
                            - ip
                        name: ip
                        type: SERVICE_PROTOCOL_OBJECT
                        uid: null
                remark:
                    description: A remark.
                    type: string
                ruleAction:
                    description: 'The rule''s action: PERMIT or DENY.'
                    enum:
                        - PERMIT
                        - DENY
                    example: PERMIT
                    type: string
                ruleTimeRange:
                    $ref: '#/components/schemas/AccessRuleDetailsContent'
                sourceDynamicObject:
                    $ref: '#/components/schemas/SourceDynamicObjectContent'
                sourceNetwork:
                    $ref: '#/components/schemas/SourceNetworkContent'
                sourcePort:
                    $ref: '#/components/schemas/SourcePortContent'
                uid:
                    description: The unique identifier, represented as a UUID, of the Access Rule.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - uid
            type: object
        ActiveDirectoryGroup:
            properties:
                groupIdentifier:
                    description: The unique identifier of the user group in your Identity Provider (IdP).
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    type: string
                issuerUrl:
                    description: The Identity Provider (IdP) URL, which Cisco Defense Orchestrator will use to validate SAML assertions during the sign-in process.
                    example: https://access.example.com/saml2/idp/metadata.php
                    type: string
                name:
                    description: The name of the user group. Security Cloud Control does not support special characters for this field.
                    example: myusername
                    type: string
                notes:
                    description: Any notes that are applicable to this user group.
                    example: This is an example note on the user group.
                    type: string
                role:
                    $ref: '#/components/schemas/UserRole'
                    description: This determines the role for all the users included in this Active Directory Group.
                    example: ROLE_ADMIN
                uid:
                    description: The unique identifier, represented as a UUID, of the Active Directory Group in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        ActiveDirectoryGroupCreateOrUpdateInput:
            properties:
                groupIdentifier:
                    description: The unique identifier, represented as a UUID, of the Active Directory Group in your Identity Provider (IdP).
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    minLength: 1
                    type: string
                issuerUrl:
                    description: The Identity Provider (IdP) URL, which Cisco Defense Orchestrator will use to validate SAML assertions during the sign-in process.
                    example: https://access.example.com/saml2/idp/metadata.php
                    minLength: 1
                    type: string
                name:
                    description: The name of the Active Directory Group. Security Cloud Control does not support special characters for this field.
                    example: myusername
                    minLength: 1
                    type: string
                notes:
                    description: Any notes that are applicable to this Active Directory Group.
                    example: This is an example note on the Active Directory Group.
                    type: string
                role:
                    description: This determines the role for all the users included in this Active Directory Group.
                    example: ROLE_ADMIN
                    type: string
            required:
                - groupIdentifier
                - issuerUrl
                - name
            type: object
        ActiveDirectoryGroupPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/ActiveDirectoryGroup'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        AiAssistantConversationPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/AiConversation'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        AiConversation:
            properties:
                createdDate:
                    description: The time (UTC; represented using the RFC-3339 standard) at which the conversation was created.
                    example: 2023-12-13T08:15:44Z
                    format: date-time
                    type: string
                lastAnswerDate:
                    description: The time (UTC; represented using the RFC-3339 standard) at which an answer was received.
                    example: 2023-12-13T08:15:44Z
                    format: date-time
                    type: string
                lastInteractionDate:
                    description: The time (UTC; represented using the RFC-3339 standard) at which the user interacted with this conversation.
                    example: 2023-12-13T08:15:44Z
                    format: date-time
                    type: string
                title:
                    description: The title of the conversation. This is set to the first question asked as part of the conversation.
                    example: Is example.com blocked on my FTD?
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the conversation.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - uid
            type: object
        AiMessage:
            properties:
                content:
                    description: The content of the message.
                    example: What's the difference between an Admin and a Super Admin?
                    type: string
                createdDate:
                    description: The time (UTC; represented using the RFC-3339 standard) at which the message was sent.
                    example: 2023-12-13T08:15:44Z
                    format: date-time
                    type: string
                inReplyTo:
                    description: The unique identifier, represented as a UUID, of the message to which this message is replying. This field is populated only for messages of type RESPONSE.
                    example: f127a6f6-ec56-400f-a23b-832b0100540b
                    format: uuid
                    type: string
                type:
                    description: The type of the message, indicating whether it is a request or a response.
                    enum:
                        - REQUEST
                        - RESPONSE
                    example: REQUEST
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the Message.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - uid
            type: object
        AiQuestion:
            properties:
                content:
                    description: The content of the message.
                    example: What's the difference between an Admin and a Super Admin?
                    type: string
            type: object
        ApiTokenInfo:
            properties:
                apiToken:
                    description: The API Access Token.
                    example: FaKE-toKeN
                    type: string
            type: object
        AsaCompatibleVersion:
            properties:
                asdmImageUrl:
                    type: string
                asdmVersion:
                    type: string
                softwareImageUrl:
                    type: string
                softwareVersion:
                    type: string
            type: object
        AsaCompatibleVersionsResponse:
            properties:
                count:
                    description: The item count.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/AsaCompatibleVersion'
                    type: array
            type: object
        AsaConfig:
            properties:
                configOnCloud:
                    description: The configuration of the ASA device in Security Cloud Control. This may include changes staged on Security Cloud Control that have not been deployed to the device.
                    type: string
                configOnDevice:
                    description: 'The running configuration on the ASA device. Note: this may not include changes made out-of-band directly on the device since the last Out-of-Band check ran on Security Cloud Control.'
                    type: string
            type: object
        AsaCreateOrUpdateInput:
            properties:
                connectorName:
                    description: The name of the Secure Device Connector (SDC) that will be used to communicate with the device. This value is not required if the connector type selected is Cloud Connector (CDG).
                    example: SDC-1
                    type: string
                connectorType:
                    $ref: '#/components/schemas/ConnectorType'
                    description: The type of the connector that will be used to communicate with the device. CDO can communicate with your device using either a Cloud Connector (CDG) or a Secure Device Connector (SDC); see the Security Cloud Control documentation to learn more.
                    example: SDC
                deviceAddress:
                    description: The address of the device to onboard, specified in the format `host:port`.
                    example: 10.2.2.5:443
                    type: string
                ignoreCertificate:
                    default: false
                    description: Set this attribute to true if you do not want Security Cloud Control to validate the certificate of this device before onboarding.
                    example: false
                    type: boolean
                labels:
                    $ref: '#/components/schemas/Labels'
                    description: Specify a set of labels to identify the device as part of a group. Refer to the CDO documentation for details on how labels are used in Security Cloud Control.
                    example: '{"ungroupedLabels", ["ra-vpn-headend"]}'
                name:
                    description: A human-readable name for the device.
                    example: My ASA
                    minLength: 1
                    type: string
                password:
                    description: The password used to authenticate with the device.
                    example: Cisco@23
                    minLength: 1
                    type: string
                username:
                    description: The username used to authenticate with the device.
                    example: admin
                    minLength: 1
                    type: string
            required:
                - connectorType
                - name
                - password
                - username
            type: object
        AsaFailoverMate:
            properties:
                chassisSerial:
                    description: (High Availability ASAs only) The serial number of the chassis.
                    example: FTX20131xxx
                    type: string
                failoverState:
                    description: (High Availability ASAs only) Failover state of this device.
                    example: Primary - Active
                    type: string
                serial:
                    description: (High Availability ASAs only) The serial number of the device. This is typically used for licensing, and is not the same as the chassis' serial number.
                    example: JAD24500xxx
                    type: string
                softwareVersion:
                    description: (High Availability ASAs only) The version of the software running on the device.
                    example: 9.18.8
                    type: string
            type: object
        AsaFailoverMode:
            enum:
                - "OFF"
                - ACTIVE_STANDBY
                - ACTIVE_ACTIVE
            type: string
        AuditLog:
            properties:
                eventDescription:
                    description: The description of the Audit Log event.
                    example: test@cisco.com logged in
                    type: string
                eventTime:
                    description: The time (UTC; represented using the RFC-3339 standard) at which the Audit Log event was created.
                    example: 2024-06-26T20:44:06Z
                    format: date-time
                    type: string
                eventType:
                    description: The type of the Audit Log event.
                    enum:
                        - USER_LOGGED_IN
                        - USER_ADDED_TO_TENANT
                        - USER_REMOVED_FROM_TENANT
                        - USER_ROLE_CHANGED
                        - AD_GROUP_ADDED
                        - AD_GROUP_DELETED
                        - AD_GROUP_ROLE_CHANGED
                        - USER_LOGIN_DATA
                    example: USER_LOGGED_IN
                    type: string
                roles:
                    description: The roles of the user who did the Audit log operation
                    example: '[ROLE_READ_ONLY, ROLE_DEPLOY_ONLY]'
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                uid:
                    description: The unique identifier, represented as a UUID, of the Audit Log.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                username:
                    description: The name/email of the of user the Audit Log refers to.
                    example: test@cisco.com
                    type: string
            required:
                - uid
            type: object
        AuditLogPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/AuditLog'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        AuthenticationError:
            properties:
                error:
                    description: A human-readable error description in English.
                    example: invalid_token
                    type: string
                errorDescription:
                    description: A human-readable error description in English.
                    example: Your token is invalid
                    type: string
        Browser:
            properties:
                name:
                    description: The name of the web browser running on the client device.
                    example: Chrome
                    type: string
                version:
                    description: The version of the web browser running on the client device.
                    example: 121.0.6167.160
                    type: string
            type: object
        BulkOperationAsaDeviceRequest:
            properties:
                deviceUids:
                    description: A collection of up to 50 unique identifiers (UUIDs) for the ASA devices in Security Cloud Control.
                    items:
                        format: uuid
                        type: string
                    maxItems: 50
                    minItems: 1
                    type: array
            type: object
        Cause:
            description: Represents a specific cause for an access rule issue.
            properties:
                causeTypes:
                    description: A set of cause types for the issue.
                    example:
                        - SHADOWED_BY_NETWORK_ADDRESS
                        - SHADOWED_BY_ICMP
                        - DUPLICATE_REMARK
                    items:
                        enum:
                            - SHADOWED_BY_NETWORK_ADDRESS
                            - SHADOWED_BY_PORT
                            - SHADOWED_BY_ICMP
                            - SHADOWED_BY_ACTION
                            - DUPLICATE_REMARK
                            - UNKNOWN
                        type: string
                    type: array
                    uniqueItems: true
                causingRule:
                    description: The rule that is causing the issue.
                    type: string
                causingRuleIdx:
                    description: The index of the causing rule.
                    format: int32
                    type: integer
            type: object
        CdFmcInfo:
            properties:
                cliKey:
                    description: The CLI key to paste into the FTD CLI to register the FTD with a cdFMC. You need to paste this value in only once, when the FTD is being onboarded. Refer to the [Security Cloud Control Documentation](https://www.cisco.com/c/en/us/td/docs/security/cdo/cloud-delivered-firewall-management-center-in-cdo/managing-firewall-threat-defense-services-with-cisco-defense-orchestrator/m-onboard-for-ftd-management.html) for details.
                    example: configure manager add acme.app.us.cdo.cisco.com E2jsyiZggyeCfFfCUaMK2kD1a1bxxx 5Do6FwUaXY4EFlyraC2yVnxodLxhuxxx acme.app.us.cdo.cisco.com
                    type: string
                link:
                    description: The endpoint to access this resource from.
                    example: https://us.manage.security.cisco.com/api/rest/v1/inventory/managers/7e9789b4-8389-4029-933f-ec7e385335ef
                    type: string
                natId:
                    description: The Registration Key of this FTD. Refer to the [Security Cloud Control Documentation](https://www.cisco.com/c/en/us/td/docs/security/cdo/cloud-delivered-firewall-management-center-in-cdo/managing-firewall-threat-defense-services-with-cisco-defense-orchestrator/m-onboard-for-ftd-management.html) for details.
                    example: 5Do6FwUaXY4EFlyraC2yVnxodLxhuxxx
                    type: string
                regKey:
                    description: The Network Address Translation (NAT) ID of this FTD. Refer to the [Security Cloud Control Documentation](https://www.cisco.com/c/en/us/td/docs/security/cdo/cloud-delivered-firewall-management-center-in-cdo/managing-firewall-threat-defense-services-with-cisco-defense-orchestrator/m-onboard-for-ftd-management.html) for details.
                    example: E2jsyiZggyeCfFfCUaMK2kD1a1bxxx
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the cdFMC that manages this device.
                    example: my-example-fmc
                    format: uuid
                    type: string
            type: object
        CdFmcObject:
            properties:
                link:
                    description: A URL to access the entity in Cloud-delivered FMC.
                    example: https://edge.us.cdo.cisco.com/api/platform/public-api/v1/cdfmc/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/devices/devicerecords/7131daad-e813-4b8f-8f42-be1e241e8cdb
                    type: string
                name:
                    description: The name of the entity in Cloud-delivered FMC.
                    example: my-example-entity
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the entity in Cloud-delivered FMC.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        CdFmcResult:
            properties:
                devices:
                    description: Devices that match the search term.
                    items:
                        $ref: '#/components/schemas/CdFmcObject'
                    type: array
                objects:
                    description: Objects that match the search term.
                    items:
                        $ref: '#/components/schemas/CdFmcObject'
                    type: array
                policies:
                    description: Policies that match the search term.
                    items:
                        $ref: '#/components/schemas/CdFmcObject'
                    type: array
            type: object
        CdoCliMacro:
            properties:
                deviceType:
                    $ref: '#/components/schemas/EntityType'
                    description: The type of the device.
                    example: ASA
                name:
                    description: The name of the CLI macro.
                    example: Disconnect VPN User
                    type: string
                parameters:
                    description: A set of parameters provided in the script
                    example:
                        - USER
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                script:
                    description: The script executed to generate the CLI result.
                    example: vpn-sessiondb logoff name {{USER}} noconfirm
                    type: string
                systemDefined:
                    description: Indicating whether this CLI macro is system-defined.
                    example: true
                    type: boolean
                uid:
                    description: The unique identifier, represented as a UUID, of the CLI macro.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - deviceType
                - uid
            type: object
        CdoCliMacroPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/CdoCliMacro'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        CdoCliResult:
            properties:
                deviceUid:
                    description: The unique identifier, represented as a UUID, of the device.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                errorMsg:
                    description: The error message, if any.
                    example: 'Error: Connection timed out'
                    type: string
                result:
                    description: The result of the CLI execution.
                    example: 5
                    type: string
                script:
                    description: The script executed to generate the CLI result.
                    example: show xlate detail
                    type: string
                startTime:
                    description: The time (in UTC) at which the user run the CLI execution, represented using the RFC-3339 standard.
                    example: 2023-12-13T05:15:44Z
                    format: date-time
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the CLI execution result.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - deviceUid
                - uid
            type: object
        CdoCliResultPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/CdoCliResult'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        CdoRegion:
            properties:
                apiDomain:
                    description: The domain for API services in the region.
                    type: string
                description:
                    description: Human readable description of the region.
                    type: string
                domain:
                    description: The domain for the region.
                    type: string
            type: object
        CdoRegionList:
            properties:
                items:
                    description: The list of items.
                    items:
                        $ref: '#/components/schemas/CdoRegion'
                    type: array
            type: object
        CdoTokenInfo:
            properties:
                enterpriseId:
                    description: The unique identifier, represented as a UUID, of the Security Cloud Control enterprise this token is associated with.
                    format: uuid
                    type: string
                expiresAt:
                    description: The time (UTC; represented using the RFC-3339 standard) the token expires. If this field is missing, the token will never expire.
                    format: date-time
                    type: string
                name:
                    description: The name of the user this token belongs to. The user can be API-only or a human.
                    example: my-example-device
                    type: string
                productInstanceId:
                    description: The unique identifier, represented as a UUID, of the firewall product instance this token is associated with. A Security Cloud Control enterprise has subscriptions to multiple products; this is the unique identifier of the firewall product instance.
                    format: uuid
                    type: string
                roles:
                    description: The role of the user this token belongs to. The user can be API-only or a human.
                    items:
                        $ref: '#/components/schemas/UserRole'
                    type: array
                    uniqueItems: true
                tenantUid:
                    description: The unique identifier, represented as a UUID, of the tenant this token is associated with. While a user can be associated with multiple tenants, a token is associated with a single tenant.
                    format: uuid
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the user this token belongs to. The user can be API-only or a human.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        CdoTransaction:
            properties:
                cdoTransactionStatus:
                    description: The status of the transaction
                    enum:
                        - PENDING
                        - IN_PROGRESS
                        - DONE
                        - ERROR
                    example: IN_PROGRESS
                    type: string
                entityUid:
                    description: The unique identifier of the entity that the transaction is triggered on. This can be empty, for a transaction that is not tied to an entity, such as transactions which refresh RA VPN sessions.
                    example: f5f660d4-4b81-4374-877d-fbc4bee894e2
                    format: uuid
                    type: string
                entityUrl:
                    description: A URL to access the entity that the transaction is triggered on. This can also be empty
                    example: https://edge.us.cdo.cisco.com/platform/public-api/v1/inventory/devices/f5f660d4-4b81-4374-877d-fbc4bee894e2
                    type: string
                errorDetails:
                    additionalProperties:
                        type: string
                    description: Transaction error details, if any
                    type: object
                errorMessage:
                    description: Transaction error message, if any
                    type: string
                lastUpdatedTime:
                    description: The time (UTC; represented using the RFC-3339 standard) at which the transaction status was last updated
                    example: 2023-12-13T08:15:44Z
                    format: date-time
                    type: string
                submissionTime:
                    description: The time (UTC; represented using the RFC-3339 standard) at which the transaction was triggered
                    example: 2023-12-13T05:15:44Z
                    format: date-time
                    type: string
                tenantUid:
                    description: The unique identifier of the tenant that the transaction triggered on.
                    example: 5131daad-e813-4b8f-8f42-be1e241e2cdb
                    format: uuid
                    type: string
                transactionDetails:
                    additionalProperties:
                        type: string
                    description: Transaction details, if any
                    type: object
                transactionPollingUrl:
                    description: The URL to poll to track the progress of the transaction.
                    example: https://edge.us.cdo.cisco.com/platform/v1/transactions/7131daad-e813-4b8f-8f42-be1e241e8cdb
                    type: string
                transactionType:
                    description: the type of the transaction
                    enum:
                        - ONBOARD_ASA
                        - ONBOARD_IOS
                        - ONBOARD_DUO_ADMIN_PANEL
                        - CREATE_FTD
                        - ONBOARD_FTD_ZTP
                        - REGISTER_FTD
                        - DELETE_CDFMC_MANAGED_FTD
                        - RECONNECT_ASA
                        - READ_ASA
                        - BULK_READ_ASA
                        - EXECUTE_CLI_COMMAND
                        - BULK_ACCEPT_ASA_CERTIFICATES
                        - DEPLOY_ASA_DEVICE_CHANGES
                        - DEPLOY_FTD_DEVICE_CHANGES
                        - INDEX_TENANT
                        - TERMINATE_DEVICE_RA_VPN_SESSIONS
                        - REFRESH_RA_VPN_SESSIONS
                        - TERMINATE_USER_RA_VPN_SESSIONS
                        - UPGRADE_ASA
                        - UPGRADE_FTD
                        - UPGRADE_FTD_CACHE
                        - MSP_UPGRADE_FTDS
                        - MSP_GET_COMPATIBLE_FTD_UPGRADE_PACKAGES
                        - CREATE_SDC
                        - SEND_AI_ASSISTANT_MESSAGE
                        - MSP_CREATE_TENANT
                        - MSP_ADD_USERS_TO_TENANT
                        - MSP_ADD_USER_GROUPS_TO_TENANT
                        - MSP_DELETE_USERS_FROM_TENANT
                        - MSP_DELETE_USER_GROUPS_FROM_TENANT
                        - MSP_ADD_EXISTING_TENANT
                        - MSP_ENABLE_MULTICLOUD_DEFENSE
                        - MSP_PROVISION_CDFMC
                        - CREATE_USERS
                        - DELETE_USERS
                        - EXECUTE_ASA_COMMAND
                        - ANALYZE_POLICIES
                        - TRIGGER_FMC_DATA_EXPORT
                        - EXPORT_DEVICES
                        - EXPORT_CLOUD_SERVICES
                        - EXPORT_MANAGERS
                        - EXPORT_TEMPLATES
                        - PROVISION_SDWAN_SAL_RESOURCES
                        - DEPROVISION_SDWAN_SAL_RESOURCES
                        - PROVISION_FIREWALL_SAL_RESOURCES
                        - DEPROVISION_FIREWALL_SAL_RESOURCES
                        - REMOVE_SSX_SAL_SUBSCRIPTION
                        - ASA_HEALTH_METRICS_TENANT_PROVISIONING
                        - UPDATE_DEVICE_BULK
                    example: ONBOARD_ASA
                    type: string
                transactionUid:
                    description: The unique identifier of the transaction triggered.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        ChangeRequest:
            properties:
                description:
                    description: The description of the Change Request.
                    example: my change request description
                    type: string
                name:
                    description: The name of the Change Request.
                    example: my change request
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the Change Request.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
                - uid
            type: object
        ChangeRequestCreateInput:
            properties:
                description:
                    description: The description of the change request in Security Cloud Control.
                    example: Changes related to securing the new branch.
                    type: string
                name:
                    description: The name of the change request in Security Cloud Control.
                    example: SecureNewBranchChange
                    minLength: 1
                    type: string
            required:
                - name
            type: object
        ChangeRequestPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/ChangeRequest'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        Changelog:
            properties:
                entityName:
                    description: The name of the device, manager or service to which the Change Log refers.
                    example: example-asa
                    type: string
                entityUid:
                    description: The unique identifier, represented as a UUID, of the device, manager or service to which the Change Log refers.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                events:
                    description: The events recorded in this Change Log.
                    items:
                        $ref: '#/components/schemas/Event'
                    type: array
                lastEventDate:
                    description: 'The time (UTC; represented using the RFC-3339 standard) at which the last event in the changelog occurred. You can perform range queries on this endpoint using the syntax `[lastEventDate:YYYY-MM-ddTHH:mm:ssZ TO lastEventDate:YYYY-MM-ddTHH:mm:ssZ]`: please note that this will need to be URL-encoded. Please note that the timeRange request parameter is mapped to the lastEventDate field. For further details on the timeRange parameter, refer to the Changelogs API documentation.'
                    format: date-time
                    type: string
                status:
                    description: The status of the Change Log.
                    enum:
                        - ACTIVE
                        - COMPLETED
                        - UNKNOWN
                    example: ACTIVE
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the Change Log.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - uid
            type: object
        ChangelogPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/Changelog'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        ChassisStatsHealthMetrics:
            properties:
                fan1RpmAvg:
                    description: The average speed of fan 1, if present, crucial for assessing the effectiveness of the system’s cooling mechanism under operational load.
                    type: number
                fan2RpmAvg:
                    description: The average speed of fan 2, if present, crucial for assessing the effectiveness of the system’s cooling mechanism under operational load.
                    type: number
                fan3RpmAvg:
                    description: The average speed of fan 3, if present, crucial for assessing the effectiveness of the system’s cooling mechanism under operational load.
                    type: number
                fan4RpmAvg:
                    description: The average speed of fan 4, if present, crucial for assessing the effectiveness of the system’s cooling mechanism under operational load.
                    type: number
                psu1FanStatus:
                    enum:
                        - UP
                        - DOWN
                    type: string
                psu1InputStatus:
                    enum:
                        - UP
                        - DOWN
                    type: string
                psu1OutputStatus:
                    enum:
                        - UP
                        - DOWN
                    type: string
                psu2FanStatus:
                    enum:
                        - UP
                        - DOWN
                    type: string
                psu2InputStatus:
                    enum:
                        - UP
                        - DOWN
                    type: string
                psu2OutputStatus:
                    enum:
                        - UP
                        - DOWN
                    type: string
            type: object
        CliCommandInput:
            properties:
                deviceUids:
                    description: List of UIDs of the devices to execute the CLI script for.
                    example:
                        - 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    items:
                        type: string
                    minItems: 1
                    type: array
                script:
                    description: The script executed to generate the CLI result.
                    example: show xlate detail
                    minLength: 1
                    type: string
            required:
                - deviceUids
                - script
            type: object
        CliMacroCreateInput:
            properties:
                description:
                    description: A detailed description of what the CLI Macro does.
                    example: This macro defines a network object in a firewall configuration.
                    type: string
                deviceType:
                    description: The type of device the CLI Macro is intended for.
                    enum:
                        - ASA
                        - IOS
                    example: IOS
                    type: string
                name:
                    description: A human-readable name for the CLI Macro.
                    example: My Network Object
                    type: string
                script:
                    description: The script content of the CLI Macro that will be executed on the device.
                    example: object network obj-192.168.1.0
                    type: string
            type: object
        CliMacroExecuteInput:
            properties:
                deviceUids:
                    description: List of UIDs of the devices to execute the CLI macro for.
                    example:
                        - 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    items:
                        type: string
                    minItems: 1
                    type: array
                macroUid:
                    description: The unique identifier, represented as a UUID, of the CLI macro.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                parameters:
                    additionalProperties:
                        type: string
                    description: Parameters provided for the CLI macro execution as key-value pairs.
                    example:
                        USER: admin
                    type: object
            required:
                - deviceUids
            type: object
        CliMacroPatchInput:
            properties:
                description:
                    description: A detailed description of what the CLI Macro does.
                    example: This macro defines a network object in a firewall configuration.
                    type: string
                name:
                    description: A human-readable name for the CLI Macro.
                    example: My Network Object
                    type: string
                script:
                    description: The script content of the CLI Macro that will be executed on the device.
                    example: object network obj-192.168.1.0
                    type: string
            type: object
        ClientDevice:
            properties:
                browser:
                    $ref: '#/components/schemas/Browser'
                    description: The web browser running on the client device.
                encrypted:
                    description: Indicates whether encryption is enabled on the client device.
                    example: true
                    type: boolean
                firewalled:
                    description: Indicates whether a firewall is enabled on the client device.
                    example: true
                    type: boolean
                ipAddress:
                    description: The IP address of the client device that has triggered this MFA event.
                    example: 106.51.163.157
                    type: string
                location:
                    $ref: '#/components/schemas/Location'
                    description: The location of the client device.
                os:
                    $ref: '#/components/schemas/OS'
                    description: The operating system of the client device.
                passwordSet:
                    description: Indicates whether a password is set on the client device.
                    example: false
                    type: boolean
                uid:
                    description: The unique identifier, represented as a UUID, of the device.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - uid
            type: object
        ClusterNode:
            properties:
                serial:
                    description: The serial number of the node on the device. This is typically used for licensing, and is not the same as the chassis' serial number.
                    example: JAD24500xxx
                    type: string
                softwareVersion:
                    description: The version of the software running on the device.
                    example: 7.4.1
                    type: string
                status:
                    description: The status of the cluster node.
                    enum:
                        - ADDED_OUT_OF_BOX
                        - DISABLED
                        - JOINING
                        - NORMAL
                        - NOT_AVAILABLE
                        - UNKNOWN
                    example: NORMAL
                    type: string
                uidOnFmc:
                    description: The unique identifier, represented as a UUID, of the device on the FMC.
                    example: 6131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        Command:
            properties:
                body:
                    description: The body of the command (optional).
                    example: {}
                    type: string
                link:
                    description: The FMC endpoint to invoke for this command.
                    example: /api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f
                    minLength: 1
                    type: string
                method:
                    description: The HTTP method for the command.
                    example: GET
                    minLength: 1
                    type: string
            required:
                - link
                - method
            type: object
        CommandResponse:
            properties:
                data:
                    description: The data associated with the command response.
                    example:
                        inResponseTo:
                            command: executeFmcRequests
                            deviceType: fmc
                            deviceUid: fb8e46fc-30b0-437f-921d-606c53d4b94c
                            larUid: b5a71c7b-f309-4102-8fa2-9eec2260a1b7
                        responseBody: '[{"id":"0050568A-5AB4-0ed3-0000-021474986635","name":"Marketing","agentId":"agent_007","topicName":"aws365","description":"IPs of marketing department","type":"DynamicObject","objectType":"IP"}]'
                        responseStatus: SUCCESS
                        tenantUid: 936fca6c-000b-4375-b903-46e6a95c7153
                message:
                    description: The response message, if applicable.
                    example: The request timed out due to a hard limit of 70 seconds. You may poll for a belated response using the url provided in the 'data' field
                    type: string
                requestId:
                    description: The unique identifier of the request, represented as a UUID.
                    example: 6e3492c6-083a-4ead-9da9-cd2db32a965d
                    type: string
                responseOrigin:
                    description: The origin system of the response.
                    enum:
                        - device-gateway-api
                        - secure-connector
                        - secure-connector-sse
                    example: secure-connector
                    type: string
                status:
                    description: The status of the command.
                    enum:
                        - failed
                        - pending
                        - responded
                        - timeout
                    example: responded
                    type: string
            type: object
        CommonApiError:
            properties:
                details:
                    additionalProperties:
                        description: Additional details, if any, on the error
                        example: {}
                        type: object
                    description: Additional details, if any, on the error
                    example: {}
                    type: object
                errorCode:
                    description: A unique code that describes the error.
                    enum:
                        - INVALID_INPUT
                        - UNAUTHORIZED
                        - FORBIDDEN
                        - NOT_FOUND
                        - METHOD_NOT_ALLOWED
                        - CONFLICT
                        - TOO_MANY_REQUESTS
                        - SERVER_ERROR
                        - PROXY_ERROR
                        - BAD_REQUEST
                        - UNPROCESSABLE_ENTITY
                    example: INVALID_INPUT
                    type: string
                errorMsg:
                    description: A human-readable error description in English.
                    example: sample error
                    type: string
        ConfigState:
            enum:
                - NO_CONFIG
                - SYNCED
                - NOT_SYNCED
                - UNKNOWN
            type: string
        ConflictDetectionInterval:
            enum:
                - EVERY_10_MINUTES
                - EVERY_HOUR
                - EVERY_6_HOURS
                - EVERY_24_HOURS
            type: string
        ConflictDetectionState:
            enum:
                - CONFLICT_DETECTED
                - NO_CONFLICTS
            type: string
        ConnectivityState:
            enum:
                - ONLINE
                - UNREACHABLE
                - BAD_CREDENTIALS
                - UNKNOWN
                - PENDING_SETUP
                - PENDING
                - NEW_CERT_DETECTED
            type: string
        ConnectorType:
            enum:
                - SDC
                - CDG
            type: string
        CpuHealthMetrics:
            properties:
                linaUsageAvg:
                    description: Measures the average CPU utilisation by the LINA (Cisco's ASA software running natively). Expressed as a percentage value between 0 and 100.
                    type: number
                snortUsageAvg:
                    description: Indicates the average CPU usage by the Snort process, responsible for threat detection, including intrusion prevention and advanced malware protection. Expressed as a percentage value between 0 and 100.
                    type: number
                systemUsageAvg:
                    description: Represents the total average CPU load utilised by the FTD system, including both firewall and threat defense mechanisms. Expressed as a percentage value between 0 and 100.
                    type: number
            type: object
        CreateRequest:
            properties:
                description:
                    description: The human-readable description of the object
                    example: My object description
                    type: string
                labels:
                    description: The labels for the object
                    example:
                        - migration
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                name:
                    description: The name of the object
                    example: my-object
                    minLength: 1
                    type: string
                tags:
                    additionalProperties:
                        items:
                            type: string
                        type: array
                        uniqueItems: true
                    description: The tags for the object
                    example:
                        location:
                            - London
                            - Head-office
                    type: object
                targetIds:
                    description: Set of IDs for targets that contain the object. A target can be, for example, a device, service, or a shared policy (Ruleset).
                    example:
                        - 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                value:
                    $ref: '#/components/schemas/SharedObjectValue'
                    description: The value of the object
            required:
                - name
                - value
            type: object
        Deployed:
            properties:
                autoDeployEnabled:
                    description: 'Specifies whether changes to ZTNA settings are automatically deployed to the device. Note: This applies only to ZTNA-specific changes and does not affect the deployment of other pending changes.'
                    example: false
                    type: boolean
                domainSettings:
                    description: Configuration that defines how Secure Client communicates with the device.
                    items:
                        $ref: '#/components/schemas/DomainSettings'
                    type: array
            type: object
        DestinationDynamicObjectContent:
            description: The destination dynamic object.
            properties:
                elements:
                    description: The list of elements.
                    items:
                        type: string
                    type: array
                name:
                    description: The name
                    example: any
                    type: string
                type:
                    description: The type of the policy object.
                    enum:
                        - NETWORK_OBJECT
                        - IPV4_ADDRESS_POOL
                        - IPV6_ADDRESS_POOL
                        - NETWORK_GROUP
                        - SERVICE_OBJECT
                        - SERVICE_TCP_OBJECT
                        - SERVICE_UDP_OBJECT
                        - SERVICE_ICMPV4_OBJECT
                        - SERVICE_ICMPV6_OBJECT
                        - SERVICE_PROTOCOL_OBJECT
                        - SERVICE_GROUP
                        - SERVICE_FTD_GROUP
                        - PROTOCOL_GROUP
                        - ICMP_GROUP
                        - URL_OBJECT
                        - URL_GROUP
                        - APPLICATION_FILTER_OBJECT
                        - TIME_RANGE
                    example: NETWORK_OBJECT
                    type: string
                uid:
                    description: The unique identifier.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        DestinationNetworkContent:
            description: The destination network.
            properties:
                elements:
                    description: The list of elements.
                    items:
                        type: string
                    type: array
                name:
                    description: The name
                    example: any
                    type: string
                type:
                    description: The type of the policy object.
                    enum:
                        - NETWORK_OBJECT
                        - IPV4_ADDRESS_POOL
                        - IPV6_ADDRESS_POOL
                        - NETWORK_GROUP
                        - SERVICE_OBJECT
                        - SERVICE_TCP_OBJECT
                        - SERVICE_UDP_OBJECT
                        - SERVICE_ICMPV4_OBJECT
                        - SERVICE_ICMPV6_OBJECT
                        - SERVICE_PROTOCOL_OBJECT
                        - SERVICE_GROUP
                        - SERVICE_FTD_GROUP
                        - PROTOCOL_GROUP
                        - ICMP_GROUP
                        - URL_OBJECT
                        - URL_GROUP
                        - APPLICATION_FILTER_OBJECT
                        - TIME_RANGE
                    example: NETWORK_OBJECT
                    type: string
                uid:
                    description: The unique identifier.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        DestinationPortContent:
            description: The destination port.
            properties:
                elements:
                    description: The list of elements.
                    items:
                        type: string
                    type: array
                name:
                    description: The name
                    example: any
                    type: string
                type:
                    description: The type of the policy object.
                    enum:
                        - NETWORK_OBJECT
                        - IPV4_ADDRESS_POOL
                        - IPV6_ADDRESS_POOL
                        - NETWORK_GROUP
                        - SERVICE_OBJECT
                        - SERVICE_TCP_OBJECT
                        - SERVICE_UDP_OBJECT
                        - SERVICE_ICMPV4_OBJECT
                        - SERVICE_ICMPV6_OBJECT
                        - SERVICE_PROTOCOL_OBJECT
                        - SERVICE_GROUP
                        - SERVICE_FTD_GROUP
                        - PROTOCOL_GROUP
                        - ICMP_GROUP
                        - URL_OBJECT
                        - URL_GROUP
                        - APPLICATION_FILTER_OBJECT
                        - TIME_RANGE
                    example: NETWORK_OBJECT
                    type: string
                uid:
                    description: The unique identifier.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        Device:
            properties:
                address:
                    description: The address of the device, in `host:port` format. Security Cloud Control connects to the device at this address.
                    example: my-example-device.example.com:443
                    type: string
                asaFailoverMate:
                    $ref: '#/components/schemas/AsaFailoverMate'
                    description: (High Availability ASAs only) Information on the failover mate of this device.
                asaFailoverMode:
                    $ref: '#/components/schemas/AsaFailoverMode'
                    description: (ASAs only) Failover mode of the device.
                    example: ACTIVE_STANDBY
                asaFailoverState:
                    description: (High Availability ASAs only) Failover state of this device.
                    example: Primary - Active
                    type: string
                asaLicenseEntitlements:
                    additionalProperties:
                        type: string
                    description: (ASAs only) Map of ASA License entitlements.
                    type: object
                asdmVersion:
                    description: (ASAs only) Version of the ASDM device manager running on the device.
                    example: 7.6(2)
                    type: string
                cdFmcInfo:
                    $ref: '#/components/schemas/CdFmcInfo'
                    description: (FTDs managed by cdFMC only) Information on the cloud-delivered FMC managing this FTD. This information is not available for FTDs managed using FDM or on-prem FMCs.
                chassisSerial:
                    description: The serial number on the chassis of the device (ASA-only). This is typically used to type up to Cisco SmartNet, and is not the same as the serial number.
                    example: JMX2450Xxxx
                    type: string
                configState:
                    $ref: '#/components/schemas/ConfigState'
                    description: The state of the device configuration in CDO. CDO stages configuration changes which have to be manually applied to the device; this field indicates whether the configuration on CDO does not match the configuration on the device, which indicates whether there are changes to be deployed from Security Cloud Control to the device.
                    example: SYNCED
                conflictDetectionState:
                    $ref: '#/components/schemas/ConflictDetectionState'
                    description: Indicates whether there have been changes made to the device's configuration outside of Security Cloud Control.
                    example: NO_CONFLICTS
                connectivityState:
                    $ref: '#/components/schemas/ConnectivityState'
                    description: The connectivity state of the device to CDO. A connectivity state that is not ONLINE can indicate either a problem with the device, or the communication pathways between the device and Security Cloud Control.
                    example: ONLINE
                connectorType:
                    $ref: '#/components/schemas/ConnectorType'
                    description: The type of the connector that will be used to communicate with the device. Security Cloud Control can communicate with your device using either a Cloud Connector (CDG) or a Secure Device Connector (SDC).
                    example: CDG
                connectorUid:
                    description: The unique identifier, represented as a UUID, of the Secure Device Connector (SDC) that will be used to communicate with the device. This value is not required if the connector type selected is Cloud Connector (CDG)The name of the Secure Device Connector (SDC) that will be used to communicate with the device. This value is not required if the connector type selected is Cloud Connector (CDG).
                    example: 3af473a8-d70f-4090-bcdb-853981696478
                    format: uuid
                    type: string
                deviceMetadata:
                    $ref: '#/components/schemas/DeviceMetadata'
                    description: Metadata for the device. This field contains a combination of structured service-specific metadata persisted by other Cisco services and arbitrary metadata.
                deviceRecordOnFmc:
                    $ref: '#/components/schemas/FmcDeviceRecord'
                    description: (FMC-managed FTDs only) The device record in FMC. A FMC-managed device on SCC can also be accessed directly using the FMC APIs; this field provides details.
                deviceRole:
                    $ref: '#/components/schemas/DeviceRole'
                    deprecated: true
                    description: The role this device performs on the network.
                    example: ASA_RA_VPN_HEADEND
                deviceRoles:
                    description: The roles that this device performs on the network.
                    example: ASA_RA_VPN_HEADEND
                    items:
                        $ref: '#/components/schemas/DeviceRole'
                    type: array
                deviceType:
                    $ref: '#/components/schemas/EntityType'
                    description: The type of the device.
                    example: CDFMC_MANAGED_FTD
                fmcAccessPolicy:
                    $ref: '#/components/schemas/FmcAccessPolicyReference'
                    description: (FMC-managed FTDs only) The FMC Access Policy applied to the device.
                    example: 6131daad-e813-4b8f-8f42-be1e241e8cdb
                fmcDomainUid:
                    description: (FMC device managers only) The unique identifier, represented as a UUID, of the [FMC domain](https://www.cisco.com/c/en/us/td/docs/security/secure-firewall/management-center/admin/740/management-center-admin-74/system-domains.html).
                    format: uuid
                    type: string
                ftdClusterInfo:
                    $ref: '#/components/schemas/FtdClusterInfo'
                    description: '(Device Clusters managed by FMC only) Clustering information. Note: Security Cloud Control represents all of the nodes on an FTD cluster in a single device record with the UID of the cluster control node.'
                ftdHaInfo:
                    $ref: '#/components/schemas/FtdHaInfo'
                    description: '(High Availability Devices managed by FMC only) High-Available information information. Note: Security Cloud Control represents all of the nodes on an FTD cluster in a single device record with the UID of the cluster control node.'
                ftdLicenses:
                    description: (FTDs only) List of FTD License entitlements.
                    items:
                        type: string
                    type: array
                ftdPerformanceTier:
                    description: (FTDvs only) The FTDv supports performance-tiered licensing that provides different throughput levels and VPN connection limits based on deployment requirements. This field specifies the performance tier of the FTD.
                    type: string
                hardwareModel:
                    description: (ASAs, FDM-managed FTDs, and FMC-managed FTDs only) The hardware model of the device
                    type: string
                labels:
                    $ref: '#/components/schemas/Labels'
                    description: The labels associated with the device.
                merakiDeploymentMode:
                    $ref: '#/components/schemas/MerakiDeploymentMode'
                    description: (Meraki devices only) The deployment mode of the Meraki device.
                    example: ROUTED
                merakiNetwork:
                    $ref: '#/components/schemas/Network'
                    description: (Meraki devices only) The [Dashboard Network](https://documentation.meraki.com/General_Administration/Organizations_and_Networks/Creating_and_Deleting_Dashboard_Networks) the device is deployed in.
                modelNumber:
                    description: The hardware, or virtualized hardware platform, that the device is running on (ASA-only). This field can be missing in the case of a partially onboarded device.
                    type: string
                name:
                    description: The name of the device. Device names are unique in Security Cloud Control.
                    example: my-example-device
                    type: string
                notes:
                    description: Free-form notes on the device.
                    example: This is an example note on the device.
                    type: string
                onPremFmcInfo:
                    $ref: '#/components/schemas/OnPremFmcInfo'
                    description: (Devices managed by on-prem FMC only) Information on the on-prem FMC managing this device.
                optedInToAsaHealthMetrics:
                    description: Indicates whether the device has been opted in to collect ASA health metrics (SDC-managed ASAs only).
                    example: true
                    type: boolean
                redundancyMode:
                    description: 'The redundancy mode this firewall is running in. Note: for High Availability pairs and clusters, Security Cloud Control represents all of the devices as part of one record.'
                    enum:
                        - HA
                        - CLUSTER
                        - STANDALONE
                    type: string
                serial:
                    description: The serial number of the device. This is typically used for licensing, and is not the same as the chassis' serial number.
                    example: JAD24500xxx
                    type: string
                snortVersion:
                    description: (FTDs only) List of FTD License entitlements.
                    type: string
                softwareVersion:
                    description: The version of the software running on the device.
                    example: 7.4.1
                    type: string
                sseDeviceData:
                    $ref: '#/components/schemas/SseDeviceData'
                    description: SSX related info for the registered device
                state:
                    description: The device state.
                    type: string
                stateMachineDetails:
                    $ref: '#/components/schemas/StateMachineDetails'
                    deprecated: true
                    description: The device state machine details.
                uid:
                    description: The unique identifier, represented as a UUID, of the device in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                uidOnFmc:
                    deprecated: true
                    description: (FMC-managed FTDs only) The unique identifier, represented as a UUID, of the device on a cdFMC. This field is deprecated. Please see `deviceRecordOnFmc`.
                    example: 6131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                universalZtnaSettings:
                    $ref: '#/components/schemas/UniversalZtnaSettings'
                    description: (FMC-managed FTDs only) Universal Zero-Trust Network Access (ZTNA) configuration.
                ztpOnboardingJobId:
                    description: The unique identifier, represented as a UUID, for an internal job that orchestrates the onboarding of devices through Zero-Touch Provisioning. This applies to devices managed by both on-premises and Cloud-delivered FMC.
                    example: 7e9789b4-8389-4029-933f-ec7e385335ef
                    format: uuid
                    type: string
            required:
                - deviceType
                - name
            type: object
        DeviceGatewayApiRequest:
            properties:
                deviceUid:
                    description: The unique identifier, represented as a UUID, of the target device for the command. Currently, only FMC devices are supported.
                    example: 6e3492c6-083a-4ead-9da9-cd2db32a965d
                    minLength: 1
                    type: string
                request:
                    $ref: '#/components/schemas/FmcRequest'
                    description: The request that the user wants to execute on the device.
            required:
                - deviceUid
                - request
            type: object
        DeviceManagerPatchInput:
            properties:
                deviceMetadata:
                    $ref: '#/components/schemas/DeviceMetadata'
                    description: Specify metadata for the device manager. This field contains a combination of structured service-specific metadata persisted by other Cisco services and arbitrary metadata.
                labels:
                    $ref: '#/components/schemas/Labels'
                    description: Specify a set of labels to identify the device manager as part of a group. Refer to the CDO documentation for details on how labels are used in Security Cloud Control.
                name:
                    description: A human-readable name for the device manager.
                    example: My CDFMC
                    type: string
            type: object
        DeviceMetadata:
            properties:
                additional:
                    additionalProperties:
                        type: string
                    description: Additional metadata as a map of key-value pairs.
                    type: object
                secureAccess:
                    $ref: '#/components/schemas/SecureAccessMetadata'
                    description: Structured [Cisco Secure Access](https://www.cisco.com/site/uk/en/products/security/secure-access/index.html) metadata (applicable to UZTNA-enabled FTDs only).
            type: object
        DevicePage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/Device'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        DevicePatchInput:
            properties:
                deviceMetadata:
                    $ref: '#/components/schemas/DeviceMetadata'
                    description: Specify metadata for the device. This field contains a combination of structured service-specific metadata persisted by other Cisco services and arbitrary metadata.
                labels:
                    $ref: '#/components/schemas/Labels'
                    description: Specify a set of labels to identify the device as part of a group. Refer to the CDO documentation for details on how labels are used in Security Cloud Control.
                name:
                    description: A human-readable name for the device.
                    example: My ASA
                    type: string
            type: object
        DeviceRole:
            enum:
                - FTD_RA_VPN_HEADEND
                - ASA_RA_VPN_HEADEND
                - MFA_PROVIDER
                - ZTNA_PROVIDER
                - ANYCONNECT_VPN_HEAD_END
                - UNIVERSAL_ZTNA_HEADEND
            type: string
        DevicesPatchInput:
            properties:
                deviceUids:
                    description: A set of device UIDs to bulk update.
                    example:
                        - 14308469-6a19-49b6-98da-7acf35503861
                        - 24308469-6a19-49b6-98da-7acf35503862
                    items:
                        format: uuid
                        type: string
                    maxItems: 500
                    minItems: 1
                    type: array
                    uniqueItems: true
                optedInToAsaHealthMetrics:
                    description: Specify whether to enable or disable health metrics collection (SDC-managed ASA devices only).
                    example: true
                    type: boolean
            type: object
        DiskHealthMetrics:
            properties:
                totalDiskUsageAvg:
                    description: The average utilisation of disk space, important for monitoring log storage, reporting, and archiving activities which are critical for audit and diagnostics. Expressed as a percentage value between 0 and 100.
                    type: number
            type: object
        DomainSettings:
            properties:
                certificate:
                    $ref: '#/components/schemas/FmcObjectReference'
                    description: Reference to the Public Key Infrastructure (PKI) certificate object on the FMC. This certificate is used to authenticate communication between the Secure Client and the device.
                fqdn:
                    description: The fully qualified domain name (FQDN) of the device. Secure Client uses this to communicate with the device.
                    example: myftd.cisco.com
                    type: string
                interfaces:
                    description: List of references to interface objects on the FMC, which defines the interfaces on the device that are used for ZTNA.
                    items:
                        $ref: '#/components/schemas/FmcObjectReference'
                    type: array
            type: object
        DuoAdminPanelCreateOrUpdateInput:
            properties:
                host:
                    description: The address of the Duo Admin Panel to onboard.
                    example: api-1aa2bbb3.duosecurity.com
                    type: string
                integrationKey:
                    description: The integration key of the Admin API application used to authenticate with Duo Admin Panel.
                    example: EIVJAJFK1Y25B1BWVSO
                    minLength: 1
                    type: string
                labels:
                    $ref: '#/components/schemas/Labels'
                    description: Specify a set of labels to identify the device as part of a group. Refer to the CDO documentation for details on how labels are used in Security Cloud Control.
                    example: '{"ungroupedLabels", ["ra-vpn-headend"]}'
                name:
                    description: A human-readable name for the device.
                    example: My Duo Admin Panel
                    minLength: 1
                    type: string
                secretKey:
                    description: The secret key of the Admin API application used to authenticate with Duo Admin Panel.
                    example: b2Ln2DrBioS2sTI7dqRYh7DPoLsvYDm0wn5UbIKi
                    minLength: 1
                    type: string
            required:
                - integrationKey
                - name
                - secretKey
            type: object
        DuplicateGroupDto:
            properties:
                targetUid:
                    description: The unique identifier of the target to search in.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                unifiedObjectUids:
                    description: The set of unique identifiers of the duplicate objects.
                    items:
                        format: uuid
                        type: string
                    type: array
                    uniqueItems: true
            type: object
        Entity:
            properties:
                address:
                    description: The address of the entity.
                    example: my-example-device.example.com:443
                    type: string
                matchingConfigurations:
                    description: (ASAs only) Parts of the ASA device configuration that match the search term.
                    items:
                        type: string
                    type: array
                name:
                    description: The name of the entity. Device names are unique in Security Cloud Control.
                    example: my-example-entity
                    type: string
                type:
                    $ref: '#/components/schemas/EntityType'
                    description: The type of the entity.
                    example: ASA
                uid:
                    description: The unique identifier, represented as a UUID, of the entity in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        EntityType:
            enum:
                - ASA
                - CDFMC_MANAGED_FTD
                - ONPREM_FMC_MANAGED_FTD
                - ONPREM_FMC_MANAGED_FIREPOWER
                - ONPREM_FMC_NGIPS
                - FDM_MANAGED_FTD
                - IOS
                - ISR
                - SSH_DEVICE
                - GENERIC_DEVICE
                - MERAKI_MX
                - CLOUD_DNG
                - SFCN
                - SFCN_DNG
                - SFCN_STS
                - ONPREM_FMC
                - CDFMC
                - AWS_VPC
                - AZURE_VNET
                - DUO_ADMIN_PANEL
                - UMBRELLA_ORGANIZATION
            type: string
        Event:
            properties:
                action:
                    description: The action performed.
                    enum:
                        - CREATE
                        - UPDATE
                        - DELETE
                        - ERROR
                        - UNKNOWN
                    type: string
                changeRequestName:
                    description: The name of the Change Request associated with the Change Log event.
                    example: LH-12345
                    type: string
                changeRequestUid:
                    description: The unique identifier, represented as a UUID, of the Change Request associated with the Change Log event.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                commands:
                    description: The commands executed, if any, by the Change Log event.
                    type: string
                date:
                    description: The time (UTC; represented using the RFC-3339 standard) at which the Change Log Event occurred.
                    format: date-time
                    type: string
                description:
                    description: A human-readable description of the Change Log event.
                    type: string
                diff:
                    description: A textual Diff representation of the changes made to the configuration.
                    type: string
                username:
                    description: The username of the user that triggered the Change Log event.
                    example: myuser@cisco.com
                    type: string
            type: object
        FmcAccessPolicyReference:
            properties:
                link:
                    description: The endpoint to access this resource from.
                    example: https://us.manage.security.cisco.com/api/rest/v1/cdfmc/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/policy/accesspolicies/0276f012-3875-0ed3-0000-004294981364
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the FMC Access Policy in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        FmcDeviceRecord:
            properties:
                link:
                    description: The endpoint to access this resource from on the FMC.
                    example: https://fmc.example.com/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/devices/devicerecords/6131daad-e813-4b8f-8f42-be1e241e8cdb
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the device on the FMC.
                    example: 6131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        FmcHealthMetrics:
            properties:
                chassisStatsHealthMetrics:
                    $ref: '#/components/schemas/ChassisStatsHealthMetrics'
                    description: The chassis health metrics for the device.
                cpuHealthMetrics:
                    $ref: '#/components/schemas/CpuHealthMetrics'
                    description: The CPU health metrics for the device. This value will be available only if the health policy on the device has CPU monitoring enabled.
                deviceName:
                    description: The name of the device in Security Cloud Control.
                    example: Burak's FTD device
                    type: string
                deviceUid:
                    description: The unique identifier, represented as a UUID, of the device in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                diskHealthMetrics:
                    $ref: '#/components/schemas/DiskHealthMetrics'
                    description: The disk health metrics for the device.
                endTime:
                    description: The end of the time period (inclusive) for which the health metrics were retrieved for this device.
                    format: date-time
                    type: string
                haHealthMetrics:
                    $ref: '#/components/schemas/HaHealthMetrics'
                    description: The HA health metrics for the device. This value will be available only if the device is part of an HA pair.
                interfaceHealthMetrics:
                    description: The interface health metrics for the device.
                    items:
                        $ref: '#/components/schemas/InterfaceHealthMetrics'
                    type: array
                memoryHealthMetrics:
                    $ref: '#/components/schemas/MemoryHealthMetrics'
                    description: The memory health metrics for the device.
                raVpnSessionHealthMetrics:
                    $ref: '#/components/schemas/RaVpnSessionHealthMetrics'
                    description: The RA VPN session health metrics for the device.
                s2sVpnTunnelHealthMetrics:
                    description: The S2S VPN tunnel health metrics for the device. The maximum number of tunnels retrieved is 1000.
                    items:
                        $ref: '#/components/schemas/S2sVpnTunnelHealthMetrics'
                    type: array
                startTime:
                    description: The start of the time period (inclusive) for which the health metrics were retrieved for this device.
                    format: date-time
                    type: string
            type: object
        FmcObjectOverride:
            properties:
                name:
                    description: Specify the name of the object to override.
                    minLength: 1
                    type: string
                type:
                    description: Specify the type of the object to override. The type should match the type of the object used in the template.
                    enum:
                        - Network
                        - Host
                        - FQDN
                        - Range
                    example: Network
                    type: string
                uid:
                    description: Specify the unique identifier, represented as a UUID, of the object to override.
                    example: 0d0cc559-43a0-449a-84a9-28310ede72ec
                    format: uuid
                    type: string
                value:
                    description: Specify the value to override the object with.
                    minLength: 1
                    type: string
            required:
                - name
                - type
                - uid
                - value
            type: object
        FmcObjectReference:
            properties:
                link:
                    description: The endpoint to access this resource from.
                    example: https://us.manage.security.cisco.com/api/rest/v1/cdfmc/api/fmc_config/v1/domain/e276abec-e0f2-11e3-8169-6d9ed49b625f/object/networks/0276f012-3875-0ed3-0000-004294981364
                    type: string
                name:
                    description: The name of the FMC Object.
                    type: string
                type:
                    description: The type of the FMC Object.
                    example: PhysicalInterface
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the FMC Object.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        FmcRequest:
            properties:
                commands:
                    description: A list of commands to be executed on the device.
                    items:
                        $ref: '#/components/schemas/Command'
                    minItems: 1
                    type: array
            required:
                - commands
            type: object
        FmcTemplateVariable:
            properties:
                name:
                    description: Specify the name of the object to override.
                    minLength: 1
                    type: string
                value:
                    description: Specify the value of the template variable. The value specified should be valid for the template variable, as defined in the template configuration.
                    minLength: 1
                    type: string
            required:
                - name
                - value
            type: object
        FtdClusterInfo:
            properties:
                clusterName:
                    description: The name of the cluster on the FMC.
                    type: string
                clusterNodeStatus:
                    description: '(on-prem FMC-managed FTDs only) Information on the type of this node in the FTD cluster. Note: Each node in an on-prem-FMC-managed FTD cluster is represented as a separate device entry in the API.'
                    enum:
                        - ADDED_OUT_OF_BOX
                        - DISABLED
                        - JOINING
                        - NORMAL
                        - NOT_AVAILABLE
                        - UNKNOWN
                    type: string
                clusterNodeType:
                    description: '(on-prem FMC-managed FTDs only) Information on the type of this node in the FTD cluster. Note: Each node in an on-prem-FMC-managed FTD cluster is represented as a separate device entry in the API.'
                    enum:
                        - CONTROL
                        - DATA
                    type: string
                clusterUid:
                    description: The unique identifier, represented as a UUID, of the cluster, on the FMC
                    format: uuid
                    type: string
                controlNode:
                    $ref: '#/components/schemas/ClusterNode'
                    description: (cdFMC-managed FTDs only) Information on the control node, which is responsible for managing, coordinating, and synchronizing the operations of multiple firewall units within the cluster.
                dataNodes:
                    description: (cdFMC-managed FTDs only) Information on the data nodes, which are individual units within a cluster that process and forward network traffic based on policies and configurations managed by the control node.
                    items:
                        $ref: '#/components/schemas/ClusterNode'
                    type: array
            type: object
        FtdCompatibilityVersion:
            properties:
                compatibleFtdVersions:
                    items:
                        $ref: '#/components/schemas/FtdVersion'
                    type: array
                deviceUids:
                    items:
                        format: uuid
                        type: string
                    type: array
                hardwareModel:
                    type: string
            type: object
        FtdCreateOrUpdateInput:
            properties:
                deviceType:
                    description: Specify the type of the FTD. The only supported type of FTD is CDFMC_MANAGED_FTD
                    enum:
                        - CDFMC_MANAGED_FTD
                    type: string
                fmcAccessPolicyUid:
                    description: Specify the unique identifier, represented as a UUID, of the FMC access policy to apply to this device.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                labels:
                    $ref: '#/components/schemas/Labels'
                    description: Specify a set of labels to identify the device as part of a group. Refer to the CDO documentation for details on how labels are used in Security Cloud Control.
                    example: '{"ungroupedLabels", ["ra-vpn-headend"]}'
                licenses:
                    description: Specify a set of licenses to apply to the device.
                    example:
                        - BASE
                        - CARRIER
                    items:
                        enum:
                            - BASE
                            - CARRIER
                            - THREAT
                            - MALWARE
                            - URLFilter
                        type: string
                    type: array
                    uniqueItems: true
                name:
                    description: Specify a human-readable name for the device.
                    example: My FTD
                    minLength: 1
                    type: string
                performanceTier:
                    description: Specify the performance tier of the FTDv (required only if isVirtual is set to true)
                    enum:
                        - FTDv5
                        - FTDv10
                        - FTDv20
                        - FTDv30
                        - FTDv50
                        - FTDv100
                        - FTDv
                    type: string
                virtual:
                    description: Indicate whether the FTD is a virtual or a physical device.
                    example: true
                    type: boolean
            required:
                - deviceType
                - fmcAccessPolicyUid
                - licenses
                - name
            type: object
        FtdDeploymentInput:
            properties:
                deploymentNotes:
                    description: Specify notes, if any, for the deployment.
                    example: 'This deployment addresses ticket #12345.'
                    type: string
                description:
                    description: Specify a human-readable description for the deployment.
                    example: This deployment is for the branch office in San Francisco.
                    type: string
                ignoreWarnings:
                    default: false
                    description: 'Specify whether to ignore warnings generated during the pre-validation of the deployment job and proceed with the deployment regardless. **Warning**: Do not set this to `true` unless you know what you are doing.'
                    type: boolean
            type: object
        FtdHaInfo:
            properties:
                currentRole:
                    description: '(on-prem FMC-managed FTDs only) Information on the current role of the node in the HA Pair. Note: Each node in an on-prem-FMC-managed FTD HA Pair is represented as a separate device entry in the API response.'
                    enum:
                        - ACTIVE
                        - STANDBY
                    type: string
                haNodeType:
                    description: '(on-prem FMC-managed FTDs only) Information on the type of this node in the HA Pair. Note: Each node in an on-prem-FMC-managed FTD HA Pair is represented as a separate device entry in the API response.'
                    enum:
                        - PRIMARY
                        - SECONDARY
                    type: string
                haPairName:
                    description: The name of the HA Pair on the FMC.
                    type: string
                haPairUid:
                    description: The unique identifier, represented as a UUID, of the HA Pair, on the FMC
                    format: uuid
                    type: string
                primaryNode:
                    $ref: '#/components/schemas/HaNode'
                    description: 'Information on the primary unit in the FTD HA Pair. Note: for an on-prem FMC managed FTD, this information is available only if the `cdfmc_and_onprem_fmc_enhanced_flow` feature flag is enabled on your tenant.'
                secondaryNode:
                    $ref: '#/components/schemas/HaNode'
                    description: 'Information on the secondary unit in the FTD HA Pair. Note: for an on-prem FMC managed FTD, this information is available only if the `cdfmc_and_onprem_fmc_enhanced_flow` feature flag is enabled on your tenant.'
            type: object
        FtdMultiDeviceDeploymentInput:
            properties:
                deploymentNotes:
                    description: Specify notes, if any, for the deployment.
                    example: 'This deployment addresses ticket #12345.'
                    type: string
                description:
                    description: Specify a human-readable description for the deployment.
                    example: This deployment is for the branch office in San Francisco.
                    type: string
                deviceUids:
                    description: The set of unique identifiers, represented as UUIDs, of the devices to upgrade in Security Cloud Control. All of the devices in the list have to be compatible with the upgrade package.
                    example:
                        - 256461f6-bd60-11ef-8beb-6cf1610cf55d
                    items:
                        format: uuid
                        type: string
                    maxItems: 50
                    minItems: 1
                    type: array
                    uniqueItems: true
                ignoreWarnings:
                    default: false
                    description: 'Specify whether to ignore warnings generated during the pre-validation of the deployment job and proceed with the deployment regardless. **Warning**: Do not set this to `true` unless you know what you are doing.'
                    type: boolean
            required:
                - deviceUids
            type: object
        FtdRegistrationInput:
            properties:
                ftdUid:
                    description: The unique identifier, represented as a UUID, of the FTD device in Security Cloud Control for which registration should be triggered.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                skipInitialDeployment:
                    default: false
                    description: Boolean flag to specify initial deployment should be triggered or not after device onboarding is completed. Defaults to false if not provided.
                    type: boolean
            required:
                - ftdUid
            type: object
        FtdVersion:
            properties:
                filename:
                    description: The name of the file
                    example: Cisco_FTD_SSP_FP2K_Upgrade-7.4.2-172.sh.REL.tar
                    type: string
                isSuggestedVersion:
                    description: A boolean value, indicating whether this version is a suggested version to upgrade to.
                    type: boolean
                softwareVersion:
                    description: The version to which this package will upgrade the FTD.
                    example: 7.4.2-172 IMS 172
                    type: string
                upgradePackageUid:
                    description: The unique identifier, represented as a UUID, of the version in Security Cloud Control
                    example: 25608540-bd60-11ef-8beb-6cf1610cf55d
                    format: uuid
                    type: string
                upgradeType:
                    description: The type of the upgrade
                    enum:
                        - UPGRADE
                        - PATCH
                        - HOTFIX
                    example: UPGRADE
                    type: string
            type: object
        FtdVersionsResponse:
            properties:
                count:
                    description: The item count.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/FtdVersion'
                    type: array
            type: object
        GlobalSearchResult:
            properties:
                cdFmcResult:
                    $ref: '#/components/schemas/CdFmcResult'
                    description: Results from the Cloud-delivered FMC devices, objects or policies that match the search term.
                inventory:
                    $ref: '#/components/schemas/Inventory'
                    description: Results from the Security Cloud Control inventory that match the search term.
                objects:
                    description: Results from the Security Cloud Control objects that match the search term.
                    items: {}
                    type: array
                policies:
                    description: Results from the Security Cloud Control policies that match the search term.
                    items:
                        $ref: '#/components/schemas/Policy'
                    type: array
            type: object
        GroupContent:
            description: The contents of an object group
            properties:
                literals:
                    description: List of content literals
                    items:
                        $ref: '#/components/schemas/SingleContent'
                    type: array
                referencedObjectUids:
                    description: Set of UIDs of the group's referenced objects
                    example:
                        - 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    items:
                        format: uuid
                        type: string
                    type: array
                    uniqueItems: true
            type: object
        HaHealthMetrics:
            properties:
                nodeStatus:
                    description: The status of the HA node.
                    enum:
                        - NORMAL
                        - ERROR
                        - WARNING
                        - DISABLED
                        - UNKNOWN
                    example: NORMAL
                    type: string
                nodeType:
                    description: Indicates whether the device is a primary or secondary node in an HA pair.
                    enum:
                        - PRIMARY
                        - SECONDARY
                    example: PRIMARY
                    type: string
            type: object
        HaNode:
            properties:
                chassisSerial:
                    description: The serial number of the chassis on the device.
                    example: FTX20131xxx
                    type: string
                serial:
                    description: The serial number of the node on the device. This is typically used for licensing, and is not the same as the chassis' serial number.
                    example: JAD24500xxx
                    type: string
                softwareVersion:
                    description: The version of the software running on the device.
                    example: 7.4.1
                    type: string
                status:
                    description: The status of the HA node.
                    enum:
                        - NORMAL
                        - ERROR
                        - WARNING
                        - DISABLED
                        - UNKNOWN
                    example: NORMAL
                    type: string
                uidOnFmc:
                    description: The unique identifier, represented as a UUID, of the device on the FMC.
                    example: 6131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        Icmp4Value:
            properties:
                icmp4Code:
                    enum:
                        - NET_UNREACHABLE
                        - HOST_UNREACHABLE
                        - PROTOCOL_UNREACHABLE
                        - PORT_UNREACHABLE
                        - FRAGMENTATION_NEEDED
                        - SOURCE_ROUTE_FAILED
                        - DEST_NETWORK_UNKNOWN
                        - DEST_HOST_UNKNOWN
                        - SRC_HOST_ISOLATED
                        - COMMUNICATION_DEST_NET_PROHIBITED
                        - COMMUNICATION_DEST_HOST_PROHIBITED
                        - DEST_NET_UNREACHABLE_FOR_TOS
                        - DEST_HOST_UNREACHABLE_FOR_TOS
                        - COMM_ADMINISTRATIVELY_PROHIBITED
                        - HOST_PRECEDENCE_VIOLATION
                        - PRECEDENCE_CUTOFF
                        - REDIRECT_DATAGRAM_NETWORK
                        - REDIRECT_DATAGRAM_HOST
                        - REDIRECT_DATAGRAM_SERVICE_NETWORK
                        - REDIRECT_DATAGRAM_SERVICE_HOST
                        - ALTERNATE_HOST_ADDR
                        - DO_NOT_ROUTE_COMMON_TRAFFIC
                        - NORMAL_ROUTER_ADV
                        - TTL_EXPIRED_TRANSIT
                        - FRAG_ASSEMBLY
                        - PTR_ERROR
                        - MISSING_REQD_OPTION
                        - BAD_LENGTH
                        - BAD_SPI
                        - AUTH_FAILED
                        - DECOMPRESSION_FAILED
                        - DECRYPTION_FAILED
                        - NEED_AUTHENTICATION
                        - NEED_AUTHORIZATION
                    example: NET_UNREACHABLE
                    type: string
                icmp4Type:
                    enum:
                        - ANY
                        - ECHO_REPLY
                        - DESTINATION_UNREACHABLE
                        - SOURCE_QUENCH
                        - REDIRECT_MESSAGE
                        - ALTERNATE_HOST_ADDRESS
                        - ECHO_REQUEST
                        - ROUTER_ADVERTISEMENT
                        - ROUTER_SOLICITATION
                        - TIME_EXCEEDED
                        - PARAMETER_PROBLEM
                        - TIMESTAMP
                        - TIMESTAMP_REPLY
                        - INFO_REQUEST
                        - INFO_REPLY
                        - ADDR_MASK_REQUEST
                        - ADDR_MASK_REPLY
                        - TRACEROUTE
                        - DATAGRAM_CONVERSION_ERROR
                        - MOBILE_HOST_REDIRECT
                        - WHERE_ARE_YOU
                        - HERE_I_AM
                        - MOBILE_REG_REQUEST
                        - MOBILE_REG_REPLY
                        - DOMAIN_NAME_REQUEST
                        - DOMAIN_NAME_REPLY
                        - SKIP_ALGORITHM_DISCOVERY_PROTOCOL
                        - PHOTURIS
                        - EXPERIMENTAL_MOB_PROTOCOLS
                    example: DESTINATION_UNREACHABLE
                    type: string
            type: object
        Icmp6Value:
            properties:
                icmp6Code:
                    enum:
                        - NO_ROUTE_DEST
                        - COMMUNICATION_PROHIBITED
                        - BEYOND_SCOPE_SRC_ADDR
                        - ADDRESS_UNREACHABLE
                        - PORT_UNREACHABLE
                        - SOURCE_ADDRESS_FAILED
                        - REJECT_ROUTE
                        - ERROR_SRC_ROUTING_HEADER
                        - HOP_LIMIT_EXCEEDED
                        - FRAGMENT_REASSEMBLY_TIME_EXCEEDED
                        - ERRONEOUS_HEADER_ENCOUNTERED
                        - UNRECOGNIZED_NEXT_HEADER_TYPE_ENCOUNTERED
                        - UNRECOGNIZED_IPV6_OPTION_ENCOUNTERED
                        - IPV6_FIRST_FRAG_HAS_INCOMPLETE_HEADER_CHAIN
                        - SR_UPPER_LAYER_HEADER_ERROR
                        - ROUTER_RENUMBERING_COMMAND
                        - ROUTER_RENUMBERING_RESULT
                        - DATA_CONTAINS_IPV6
                        - DATA_CONTAINS_NAME
                        - DATA_CONTAINS_IPV4
                        - SUCCESSFUL_REPLY
                        - RESPONDER_REFUSES_ANSWER
                        - QTYPE_UNKNOWN
                    example: ADDRESS_UNREACHABLE
                    type: string
                icmp6Type:
                    enum:
                        - ANY
                        - DESTINATION_UNREACHABLE
                        - PACKET_TOO_BIG
                        - TIME_EXCEEDED
                        - PARAMETER_PROBLEM
                        - ECHO_REQUEST
                        - ECHO_REPLY
                        - MULTICAST_LISTENER_QUERY
                        - MULTICAST_LISTENER_REPORT
                        - MULTICAST_LISTENER_DONE
                        - ROUTER_SOLICITATION
                        - ROUTER_ADVERTISEMENT
                        - NEIGHBOUR_SOLICITATION
                        - NEIGHBOUR_ADVERTISEMENT
                        - REDIRECT_MESSAGE
                        - ROUTER_RENUMBERING
                        - ICMP_NODE_INFO_QUERY
                        - ICMP_NODE_INFO_RESPONSE
                        - INVERSE_NEIGHBOR_DISCOVERY_SOLICITATION
                        - INVERSE_NEIGHBOR_DISCOVERY_ADVERTISEMENT
                        - VER2_MULTICAST_LISTENER_REPORT
                        - HOME_AGENT_ADDR_DISCOVERY_REQUEST
                        - HOME_AGENT_ADDR_DISCOVERY_REPLY
                        - MOBILE_PREFIX_SOLICITATION
                        - MOBILE_PREFIX_ADVERTISEMENT
                        - CERT_PATH_SOLICITATION
                        - CERT_PATH_ADVERTISEMENT
                        - ICMP_EXP_MOBILITY_PROTOCOLS
                        - MULTICAST_ROUTER_ADVERTISEMENT
                        - MULTICAST_ROUTER_SOLICITATION
                        - MULTICAST_ROUTER_TERMINATION
                        - FMIPV6_MESSAGE
                        - RPL_CONTROL_MESSAGE
                        - PRIVATE_EXPERIMENTATION
                        - PRIVATE_EXPERIMENTATION_EXTENDED
                    example: DESTINATION_UNREACHABLE
                    type: string
            type: object
        InterfaceHealthMetrics:
            properties:
                bufferOverrunsAvg:
                    description: Monitors the average number of times where incoming data exceeded buffer capacity, potentially leading to data loss.
                    type: number
                bufferUnderrunsAvg:
                    description: Tracks the average number of times the data buffer was insufficient to handle outgoing traffic, possibly causing transmission delays.
                    type: number
                dropPacketsAvg:
                    description: Average number of packets dropped by the interface due to network congestion, buffer overflow, or errors.
                    type: number
                duplexMode:
                    description: Configuration of the interface regarding data transmission, indicating whether it is set to full, half, or auto-duplex.
                    type: string
                inputBytesAvg:
                    description: Total amount of data received through the interface, providing insights into the volume of inbound traffic.
                    type: number
                inputErrorsAvg:
                    description: The average rate of erroneous packets received, indicative of issues like corruption or transmission errors.
                    type: number
                inputPacketSizeAvg:
                    description: Average size of packets received, useful for analysing the nature of inbound traffic.
                    type: number
                interface:
                    description: Identifier for a specific network interface on the FTD device, used for network traffic management and monitoring.
                    type: string
                interfaceName:
                    description: The name assigned to the interface, facilitating easier identification and configuration.
                    type: string
                interfaceType:
                    description: The physical or logical type of the interface (e.g., Ethernet, virtual, management).
                    type: string
                l2DecodeDropsAvg:
                    description: The average number of packets that could not be processed due to issues at the Data Link layer, including protocol mismatches or corruption.
                    type: number
                linkStatus:
                    description: Indicates whether the physical link of the network interface is active (UP) or inactive (DOWN). The interface will be marked as DOWN if there is no traffic through the interface.
                    type: string
                operationalStatus:
                    description: Current state of the interface from a functional standpoint, influenced by both administrative settings and physical connectivity.
                    type: string
                outputBytesAvg:
                    description: Total data sent out through the interface, useful for tracking outbound traffic levels.
                    type: number
                outputErrorsAvg:
                    description: Average count of error-ridden packets sent from the device, pointing to problems in packet formation or hardware issues.
                    type: number
                outputPacketSizeAvg:
                    description: Average size of packets sent. Helps in understanding the traffic distribution and network load.
                    type: number
            type: object
        Inventory:
            properties:
                devices:
                    description: Devices that match the search term.
                    items:
                        $ref: '#/components/schemas/Entity'
                    type: array
                managers:
                    description: Device Managers that match the search term.
                    items:
                        $ref: '#/components/schemas/Entity'
                    type: array
                services:
                    description: Cloud Services that match the search term.
                    items:
                        $ref: '#/components/schemas/Entity'
                    type: array
            type: object
        IosCreateOrUpdateInput:
            properties:
                connectorName:
                    description: The name of the Secure Device Connector (SDC) that will be used to communicate with the device.
                    example: SDC-1
                    minLength: 1
                    type: string
                deviceAddress:
                    description: The address of the device to onboard, specified in the format `host:port`.
                    example: 10.2.2.5:443
                    type: string
                ignoreCertificate:
                    default: false
                    description: Set this attribute to true if you do not want Security Cloud Control to validate the certificate of this device before onboarding.
                    example: false
                    type: boolean
                labels:
                    $ref: '#/components/schemas/Labels'
                    description: Specify a set of labels to identify the device as part of a group. Refer to the CDO documentation for details on how labels are used in Security Cloud Control.
                    example: '{"ungroupedLabels", ["ra-vpn-headend"]}'
                name:
                    description: A human-readable name for the device.
                    example: My IOS
                    minLength: 1
                    type: string
                password:
                    description: The password used to authenticate with the device.
                    example: Cisco@23
                    minLength: 1
                    type: string
                username:
                    description: The username used to authenticate with the device.
                    example: admin
                    minLength: 1
                    type: string
            required:
                - connectorName
                - name
                - password
                - username
            type: object
        IssuesCount:
            properties:
                duplicates:
                    description: Number of duplicate Objects
                    example: 2
                    format: int64
                    type: integer
                totalObjects:
                    description: Total number of objects for the tenant
                    example: 4
                    format: int64
                    type: integer
                unAssociated:
                    description: Number of UnAssociated Objects
                    example: 1
                    format: int64
                    type: integer
                unUseds:
                    description: Number of unAssigned Objects
                    example: 1
                    format: int64
                    type: integer
            type: object
        IssuesDto:
            properties:
                duplicateTargetIds:
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                unusedTargetIds:
                    items:
                        type: string
                    type: array
                    uniqueItems: true
            type: object
        JsonWebKey:
            properties:
                alg:
                    description: The specific cryptographic algorithm used with the key.
                    type: string
                e:
                    description: The exponent for the RSA public key.
                    type: string
                kid:
                    description: The unique identifier for the key.
                    type: string
                kty:
                    description: The family of cryptographic algorithms used with the key.
                    type: string
                "n":
                    description: The modulus for the RSA public key.
                    type: string
                use:
                    description: How the key was meant to be used.
                    type: string
            type: object
        JwkSet:
            properties:
                keys:
                    description: The JSON Web Key Set.
                    items:
                        $ref: '#/components/schemas/JsonWebKey'
                    type: array
            type: object
        Labels:
            description: Labels used to identify/tag Security Cloud Control entities.
            properties:
                groupedLabels:
                    additionalProperties:
                        items:
                            type: string
                        type: array
                        uniqueItems: true
                    description: Groups of labels used to identify/tag Security Cloud Control entities.
                    example:
                        group1:
                            - label-1
                            - label-2
                        group2:
                            - label-1
                            - label-2
                    type: object
                ungroupedLabels:
                    description: Set of free-labels used to identify/tag Security Cloud Control entities.
                    example:
                        - label-a
                        - label-b
                        - label-c
                    items:
                        type: string
                    type: array
                    uniqueItems: true
            type: object
        ListObjectResponse:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int64
                    type: integer
                items:
                    description: The list of objects retrieved.
                    items:
                        $ref: '#/components/schemas/UnifiedObjectListView'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int64
                    maximum: 200
                    type: integer
                offset:
                    description: The offset of the results retrieved. The CDO API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int64
                    type: integer
            type: object
        Location:
            properties:
                city:
                    description: The city where the client device is located.
                    example: San Jose
                    type: string
                country:
                    description: The country where the client device is located.
                    example: United States
                    type: string
                subdivision:
                    description: The subdivision (e.g., state or province) where the client device is located.
                    example: California
                    type: string
            type: object
        LogSettings:
            properties:
                interval:
                    description: The interval
                    example: 1
                    format: int32
                    type: integer
                level:
                    description: The level
                    example: 3
                    type: string
            required:
                - level
            type: object
        MemoryHealthMetrics:
            properties:
                linaUsageAvg:
                    description: Average memory utilisation by the LINA process. Expressed as a percentage value between 0 and 100.
                    type: number
                snortUsageAvg:
                    description: Average memory usage by the Snort engine. Expressed as a percentage value between 0 and 100.
                    type: number
                systemUsageAvg:
                    description: Provides an overview of the overall memory usage by the FTD system, useful for monitoring system health and detecting potential resource bottlenecks. Expressed as a percentage value between 0 and 100.
                    type: number
            type: object
        MerakiDeploymentMode:
            enum:
                - ROUTED
                - PASSTHROUGH
            type: string
        Meta:
            properties:
                cloudConnectorIps:
                    description: The IP addresses from which to allow inbound access to your network if you wish to connect to your devices through Security Cloud Control's Cloud Connector.
                    example: 35.157.12.126
                    items:
                        type: string
                    type: array
            type: object
        Metric:
            properties:
                series:
                    items:
                        $ref: '#/components/schemas/Series'
                    type: array
                summary:
                    $ref: '#/components/schemas/Summary'
            type: object
        MetricsItem:
            properties:
                description:
                    type: string
                metrics:
                    additionalProperties:
                        $ref: '#/components/schemas/Metric'
                    type: object
                name:
                    type: string
                uid:
                    format: uuid
                    type: string
            type: object
        MetricsResponse:
            properties:
                items:
                    items:
                        $ref: '#/components/schemas/MetricsItem'
                    type: array
                limit:
                    format: int32
                    type: integer
                offset:
                    format: int32
                    type: integer
                total:
                    format: int32
                    type: integer
            type: object
        MfaEvent:
            properties:
                application:
                    description: The name of the application associated with the MFA event.
                    example: Security Cloud Sign On Preview
                    type: string
                clientDevice:
                    $ref: '#/components/schemas/ClientDevice'
                    description: The client device that triggered this MFA event.
                reason:
                    description: The reason for the result of the MFA event. When the `result` is `DENIED`, this field contains information on why the MFA event failed.
                    example: valid_passcode
                    type: string
                result:
                    description: The result of the MFA event.
                    enum:
                        - DENIED
                        - GRANTED
                    example: GRANTED
                    type: string
                secondFactor:
                    description: The second factor used for the MFA event.
                    example: sms_passcode
                    type: string
                timestamp:
                    description: The time (in UTC) at which the user logged in to the MFA event, represented using the RFC-3339 standard.
                    example: 2023-12-13T05:15:44Z
                    format: date-time
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the MFA event.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                username:
                    description: The name of the user associated with the MFA event.
                    example: user@example.com
                    type: string
            required:
                - uid
                - username
            type: object
        MfaEventPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/MfaEvent'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        MspAddTenantInput:
            properties:
                apiToken:
                    description: The Tenant API Access Token.
                    example: FaKE-toKeN
                    minLength: 1
                    type: string
            required:
                - apiToken
            type: object
        MspAddUsersToTenantInput:
            properties:
                users:
                    description: The list of users to be added to the tenant. You can add a maximum of 50 users at a time.
                    example: '[username: burak@cisco.com, role: ROLE_ADMIN]'
                    items:
                        $ref: '#/components/schemas/UserInput'
                    maxItems: 50
                    minItems: 0
                    type: array
            required:
                - users
            type: object
        MspCreateTenantInput:
            properties:
                displayName:
                    description: A human-readable display name of the tenant to create. Use this field only if you want the display name to be different from the name of the tenant.
                    example: Acme Inc., United States offices
                    type: string
                salesOrderNumber:
                    description: The sales order number. If this value is not provided, the tenant will be created as a trial tenant.
                    example: 98241346
                    type: string
                tenantName:
                    description: The name of the tenant to create. The tenant name can only contain alphabets, numbers, -, and _, and is limited to 50 characters.
                    example: acme-inc-usa
                    minLength: 1
                    pattern: '[a-zA-Z0-9-_]{1,50}'
                    type: string
            required:
                - tenantName
            type: object
        MspDeleteUsersFromTenantInput:
            properties:
                usernames:
                    description: The list of usernames to be removed from the MSP-managed tenant. You can remove a maximum of 50 users at a time.
                    example:
                        - username@example.com
                        - username2@example.com
                    items:
                        type: string
                    maxItems: 50
                    minItems: 0
                    type: array
            required:
                - usernames
            type: object
        MspExportInput:
            properties:
                query:
                    description: The query to execute in order to generate the export. Use the Lucene Query Syntax to construct your query. You can use this to filter the entities included in your export.
                    example: deviceType:CDFMC_MANAGED_FTD AND connectivityState:ONLINE
                    type: string
            type: object
        MspManagedCloudService:
            properties:
                address:
                    description: The address of the cloud service (if applicable), in <code>host:port</code> format. Security Cloud Control connects to the cloud service at this address.
                    example: my-example-duo.example.com:443
                    type: string
                cloudServiceType:
                    $ref: '#/components/schemas/EntityType'
                    description: The type of the cloud service.
                    example: UMBRELLA
                configState:
                    $ref: '#/components/schemas/ConfigState'
                    description: The state of the cloud service configuration in CDO. CDO stages configuration changes which have to be manually applied to the cloud service; this field indicates whether the configuration on CDO does not match the configuration on the cloud service, which indicates whether there are changes to be deployed from Security Cloud Control to the cloud service.
                    example: SYNCED
                conflictDetectionState:
                    $ref: '#/components/schemas/ConflictDetectionState'
                    description: Indicates whether there have been changes made to the cloud service's configuration outside of Security Cloud Control.
                    example: NO_CONFLICTS
                connectivityState:
                    $ref: '#/components/schemas/ConnectivityState'
                    description: The connectivity state of the cloud service to CDO. A connectivity state that is not ONLINE can indicate either a problem with the cloud service, or the communication pathways between the cloud service and Security Cloud Control.
                    example: ONLINE
                managedTenantDisplayName:
                    description: The display name of the managed tenant in CDO.
                    example: my-example-tenant
                    type: string
                managedTenantName:
                    description: The name of the managed tenant in CDO.
                    example: my-example-tenant
                    type: string
                managedTenantRegion:
                    description: The region of the managed tenant in CDO. This is the region where the cloud service is located.
                    example: us1
                    type: string
                managedTenantUid:
                    description: The unique identifier, represented as a UUID, of the managed tenant in Security Cloud Control that this cloud service belongs to.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                name:
                    description: The name of the cloud service in CDO. Cloud service names are unique in Security Cloud Control.
                    example: my-example-duo-admin-panel
                    type: string
                tenantUid:
                    format: uuid
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the cloud service in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        MspManagedCloudServiceDistinctAttributeValues:
            properties:
                cloudServiceTypes:
                    description: The distinct device types for the cloud services managed by the MSP Portal.
                    items:
                        $ref: '#/components/schemas/EntityType'
                    type: array
                    uniqueItems: true
                configStates:
                    description: The distinct config states for the cloud services managed by the MSP Portal.
                    items:
                        $ref: '#/components/schemas/ConfigState'
                    type: array
                    uniqueItems: true
                conflictDetectionStates:
                    description: The distinct conflict detection states for the cloud services managed by the MSP Portal.
                    items:
                        $ref: '#/components/schemas/ConflictDetectionState'
                    type: array
                    uniqueItems: true
                connectivityStates:
                    description: The distinct connectivity states for the cloud services managed by the MSP Portal.
                    items:
                        $ref: '#/components/schemas/ConnectivityState'
                    type: array
                    uniqueItems: true
                managedTenantDisplayNames:
                    description: The display names of the tenants that have cloud services onboarded and are managed by the MSP Portal.
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                managedTenantNames:
                    description: The names of the tenants that have cloud services onboarded and are managed by the MSP Portal.
                    items:
                        type: string
                    type: array
                    uniqueItems: true
            type: object
        MspManagedCloudServicePage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/MspManagedCloudService'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        MspManagedDevice:
            properties:
                address:
                    description: The address of the device, in <code>host:port</code> format. Security Cloud Control connects to the device at this address.
                    example: my-example-device.example.com:443
                    type: string
                chassisSerial:
                    description: The serial number on the chassis of the device (ASA-only). This is typically used to type up to Cisco SmartNet, and is not the same as the serial number.
                    example: JMX2450Xxxx
                    type: string
                configState:
                    $ref: '#/components/schemas/ConfigState'
                    description: The state of the device configuration in CDO. CDO stages configuration changes which have to be manually applied to the device; this field indicates whether the configuration on CDO does not match the configuration on the device, which indicates whether there are changes to be deployed from Security Cloud Control to the device.
                    example: SYNCED
                conflictDetectionState:
                    $ref: '#/components/schemas/ConflictDetectionState'
                    description: Indicates whether there have been changes made to the device's configuration outside of Security Cloud Control.
                    example: NO_CONFLICTS
                connectivityState:
                    $ref: '#/components/schemas/ConnectivityState'
                    description: The connectivity state of the device to CDO. A connectivity state that is not ONLINE can indicate either a problem with the device, or the communication pathways between the device and Security Cloud Control.
                    example: ONLINE
                deviceType:
                    $ref: '#/components/schemas/EntityType'
                    description: The type of the device.
                    example: CDFMC_MANAGED_FTD
                hardwareModel:
                    description: (ASAs, FDM-managed FTDs, and FMC-managed FTDs only) The hardware model of the device
                    type: string
                labels:
                    $ref: '#/components/schemas/Labels'
                    description: The labels associated with the device.
                managedTenantDisplayName:
                    description: The display name of the managed tenant in CDO.
                    example: my-example-tenant
                    type: string
                managedTenantName:
                    description: The name of the managed tenant in CDO.
                    example: my-example-tenant
                    type: string
                managedTenantRegion:
                    description: The region of the managed tenant in CDO. This is the region where the device is located.
                    example: us1
                    type: string
                managedTenantUid:
                    description: The unique identifier, represented as a UUID, of the managed tenant in Security Cloud Control that this device belongs to.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                modelNumber:
                    description: The hardware, or virtualized hardware platform, that the device is running on (ASA-only). This field can be missing in the case of a partially onboarded device.
                    type: string
                name:
                    description: The name of the device in CDO. Device names are unique in Security Cloud Control.
                    example: my-example-device
                    type: string
                redundancyMode:
                    description: 'The redundancy mode this firewall is running in. Note: for High Availability pairs and clusters, Security Cloud Control represents all of the devices as part of one record.'
                    enum:
                        - HA
                        - CLUSTER
                        - STANDALONE
                    type: string
                serial:
                    description: The serial number of the device. This is typically used for licensing, and is not the same as the chassis' serial number.
                    example: JAD24500xxx
                    type: string
                softwareVersion:
                    description: The version of the software running on the device.
                    example: 7.4.1
                    type: string
                tenantUid:
                    format: uuid
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the device in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        MspManagedDeviceDistinctAttributeValues:
            properties:
                configStates:
                    description: The distinct config states for the devices managed by the MSP Portal.
                    items:
                        $ref: '#/components/schemas/ConfigState'
                    type: array
                    uniqueItems: true
                conflictDetectionStates:
                    description: The distinct conflict detection states for the devices managed by the MSP Portal.
                    items:
                        $ref: '#/components/schemas/ConflictDetectionState'
                    type: array
                    uniqueItems: true
                connectivityStates:
                    description: The distinct connectivity states for the devices managed by the MSP Portal.
                    items:
                        $ref: '#/components/schemas/ConnectivityState'
                    type: array
                    uniqueItems: true
                deviceTypes:
                    description: The distinct device types for the devices managed by the MSP Portal.
                    items:
                        $ref: '#/components/schemas/EntityType'
                    type: array
                    uniqueItems: true
                managedTenantDisplayNames:
                    description: The display names of the tenants that have devices onboarded and are managed by the MSP Portal.
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                managedTenantNames:
                    description: The names of the tenants that have devices onboarded and are managed by the MSP Portal.
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                softwareVersions:
                    additionalProperties:
                        items:
                            type: string
                        type: array
                        uniqueItems: true
                    description: The software versions of the devices managed by the MSP Portal.
                    type: object
            type: object
        MspManagedDeviceManager:
            properties:
                address:
                    description: The address of the device, in <code>host:port</code> format. Security Cloud Control connects to the device at this address.
                    example: my-example-device.example.com:443
                    type: string
                connectivityState:
                    $ref: '#/components/schemas/ConnectivityState'
                    description: The connectivity state of the device to CDO. A connectivity state that is not ONLINE can indicate either a problem with the device, or the communication pathways between the device and Security Cloud Control.
                    example: ONLINE
                deviceManagerType:
                    $ref: '#/components/schemas/EntityType'
                    description: The type of the device manager.
                    example: CDFMC
                fmcDomainUid:
                    description: (FMC-only) The Domain UID of the FMC.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                managedTenantDisplayName:
                    description: The display name of the managed tenant in CDO.
                    example: my-example-tenant
                    type: string
                managedTenantName:
                    description: The name of the managed tenant in CDO.
                    example: my-example-tenant
                    type: string
                managedTenantRegion:
                    description: The region of the managed tenant in CDO. This is the region where the device manager is located.
                    example: us1
                    type: string
                managedTenantUid:
                    description: The unique identifier, represented as a UUID, of the managed tenant in Security Cloud Control that this device manager belongs to.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                name:
                    description: The name of the device manager in CDO. Device manager names are unique in Security Cloud Control.
                    example: my-example-device
                    type: string
                softwareVersion:
                    description: The version of the software running on the device.
                    example: 7.4.1
                    type: string
                tenantUid:
                    format: uuid
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the device manager in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        MspManagedDeviceManagerDistinctAttributeValues:
            properties:
                connectivityStates:
                    description: The distinct connectivity states for the device managers managed by the MSP Portal.
                    items:
                        $ref: '#/components/schemas/ConnectivityState'
                    type: array
                    uniqueItems: true
                deviceManagerTypes:
                    description: The distinct device manager types for the device managers managed by the MSP Portal.
                    items:
                        $ref: '#/components/schemas/EntityType'
                    type: array
                    uniqueItems: true
                managedTenantDisplayNames:
                    description: The display names of the tenants that have device managers onboarded and are managed by the MSP Portal.
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                managedTenantNames:
                    description: The names of the tenants that have device managers onboarded and are managed by the MSP Portal.
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                softwareVersions:
                    additionalProperties:
                        items:
                            type: string
                        type: array
                        uniqueItems: true
                    description: The software versions of the device managers managed by the MSP Portal.
                    type: object
            type: object
        MspManagedDeviceManagersPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/MspManagedDeviceManager'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        MspManagedDevicePage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/MspManagedDevice'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        MspManagedTemplate:
            properties:
                configState:
                    $ref: '#/components/schemas/ConfigState'
                    description: The connectivity state of the template to CDO. A connectivity state that is not ONLINE can indicate either a problem with the template, or the communication pathways between the template and Security Cloud Control.
                    example: ONLINE
                managedTenantDisplayName:
                    description: The display name of the managed tenant in CDO.
                    example: my-example-tenant
                    type: string
                managedTenantName:
                    description: The name of the managed tenant in CDO.
                    example: my-example-tenant
                    type: string
                managedTenantRegion:
                    description: The region of the managed tenant in CDO. This is the region where the template is located.
                    example: us1
                    type: string
                managedTenantUid:
                    description: The unique identifier, represented as a UUID, of the managed tenant in Security Cloud Control that this template belongs to.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                name:
                    description: The name of the template in CDO. Template names are unique in Security Cloud Control.
                    example: my-example-device
                    type: string
                softwareVersion:
                    description: The software version that the template is applicable to.
                    example: 7.4.1
                    type: string
                templateType:
                    $ref: '#/components/schemas/EntityType'
                    description: The type of the template.
                    example: CDFMC
                tenantUid:
                    format: uuid
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the template in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        MspManagedTemplateDistinctAttributeValues:
            properties:
                configStates:
                    description: The distinct config states for the templates managed by the MSP Portal.
                    items:
                        $ref: '#/components/schemas/ConfigState'
                    type: array
                    uniqueItems: true
                managedTenantDisplayNames:
                    description: The display names of the tenants that have templates managed by the MSP Portal.
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                managedTenantNames:
                    description: The names of the tenants that have templates managed by the MSP Portal.
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                softwareVersions:
                    additionalProperties:
                        items:
                            type: string
                        type: array
                        uniqueItems: true
                    description: The software versions of the templates managed by the MSP Portal.
                    type: object
                templateTypes:
                    description: The distinct templates types for the templates managed by the MSP Portal.
                    items:
                        $ref: '#/components/schemas/EntityType'
                    type: array
                    uniqueItems: true
            type: object
        MspManagedTemplatesPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/MspManagedTemplate'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        MspManagedTenant:
            properties:
                displayName:
                    description: A human-readable display name for the tenant. This is the tenant name displayed in the Security Cloud Control Web UI.
                    example: mytenantname
                    type: string
                name:
                    description: The name of the device in CDO. Device names are unique in Security Cloud Control.
                    example: my-example-device
                    type: string
                region:
                    description: The Security Cloud Control region the tenant exists in.
                    enum:
                        - US
                        - EU
                        - APJ
                        - AUS
                        - IN
                        - CI
                        - SCALE
                        - STAGING
                        - UNKNOWN
                    example: US
                    type: string
                uid:
                    description: The unique identifier of the tenant in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        MspManagedTenantPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/MspManagedTenant'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        Network:
            properties:
                id:
                    description: The unique identifier, represented as a UUID, of the Meraki Dashboard Network.
                    example: L_583779101697901532
                    type: string
                name:
                    description: The name of the Meraki Dashboard Network.
                    example: meraki-network
                    type: string
                timezone:
                    description: The timezone of the Meraki Dashboard Network.
                    example: UTC +0
                    type: string
            type: object
        NetworkObjectContent:
            description: The content of a network object
            properties:
                literal:
                    description: The literal content of the network object
                    example: a:b:c::1
                    minLength: 1
                    type: string
            required:
                - literal
            type: object
        OS:
            properties:
                type:
                    description: The type of operating system running on the client device.
                    example: mac-intel
                    type: string
                version:
                    description: The version of the operating system running on the client device.
                    example: 14.2.1
                    type: string
            type: object
        ObjectContent:
            example:
                literal: a:b:c::1
            oneOf:
                - $ref: '#/components/schemas/ServiceObjectContent'
                - $ref: '#/components/schemas/UrlObjectContent'
                - $ref: '#/components/schemas/GroupContent'
                - $ref: '#/components/schemas/NetworkObjectContent'
        ObjectResponse:
            properties:
                description:
                    description: The human-readable description of the object
                    example: My object description
                    type: string
                elements:
                    description: A flattened list of the content value of the object
                    example: '[a:b:c::1]'
                    items:
                        type: string
                    type: array
                issues:
                    $ref: '#/components/schemas/IssuesDto'
                    description: The issues for the object
                    example:
                        unusedTargetIds:
                            - 7131daad-e813-4b8f-8f42-be1e241e8cdb
                labels:
                    description: The labels for the object
                    example:
                        - migration
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                name:
                    description: The name of the object
                    example: my-object
                    type: string
                referencesInfoFromDefaultAndOverrides:
                    description: List of objects referenced in the default content or in any of the overrides.
                    items:
                        $ref: '#/components/schemas/ReferenceInfo'
                    type: array
                tags:
                    additionalProperties:
                        items:
                            type: string
                        type: array
                        uniqueItems: true
                    description: The tags for the object
                    example:
                        location:
                            - London
                            - Head-office
                    type: object
                targets:
                    description: Set of targets that contain the object. A target can be, for example, a device, service, or a shared policy (Ruleset).
                    items:
                        $ref: '#/components/schemas/Target'
                    type: array
                uid:
                    description: The unique identifier of the object
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                value:
                    $ref: '#/components/schemas/SharedObjectValue'
                    description: The value of the object
            type: object
        OnPremFmcInfo:
            properties:
                link:
                    description: The endpoint to access this resource from.
                    example: https://us.manage.security.cisco.com/api/rest/v1/inventory/managers/7e9789b4-8389-4029-933f-ec7e385335ef
                    type: string
                location:
                    description: The fully-qualified domain name or IP address of the on-prem FMC managing this device.
                    example: my-example-fmc.example.com
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the on-prem FMC that manages this device.
                    example: 7e9789b4-8389-4029-933f-ec7e385335ef
                    format: uuid
                    type: string
            type: object
        Override:
            example:
                content: a:b:c::2
                targetId: 7131daad-e813-4b8f-8f42-be1e241e8cdb
            properties:
                content:
                    $ref: '#/components/schemas/ObjectContent'
                    description: The content value of the override. This overrides the object's default content.
                targetId:
                    description: The ID of the target. A target can be, for example, a device, service, or a shared policy (Ruleset).
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    type: string
            required:
                - content
            type: object
        Policy:
            properties:
                name:
                    description: The name of the policy in Security Cloud Control.
                    example: my-example-policy
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the policy in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        PortsValue:
            properties:
                literal:
                    description: The literal port or range of port values
                    example: 8000-8080
                    type: string
            type: object
        ProtocolContent:
            description: The protocol. Defaults to IP.
            properties:
                elements:
                    description: The list of elements.
                    items:
                        type: string
                    type: array
                name:
                    description: The name
                    example: any
                    type: string
                type:
                    description: The type of the policy object.
                    enum:
                        - NETWORK_OBJECT
                        - IPV4_ADDRESS_POOL
                        - IPV6_ADDRESS_POOL
                        - NETWORK_GROUP
                        - SERVICE_OBJECT
                        - SERVICE_TCP_OBJECT
                        - SERVICE_UDP_OBJECT
                        - SERVICE_ICMPV4_OBJECT
                        - SERVICE_ICMPV6_OBJECT
                        - SERVICE_PROTOCOL_OBJECT
                        - SERVICE_GROUP
                        - SERVICE_FTD_GROUP
                        - PROTOCOL_GROUP
                        - ICMP_GROUP
                        - URL_OBJECT
                        - URL_GROUP
                        - APPLICATION_FILTER_OBJECT
                        - TIME_RANGE
                    example: NETWORK_OBJECT
                    type: string
                uid:
                    description: The unique identifier.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        ProtocolValueContent:
            properties:
                protocolValue:
                    description: The literal for a custom protocol value
                    example: www
                    type: string
            type: object
        PublicKey:
            properties:
                base64EncodedKey:
                    description: Base64 RSA public key to use to encrypt device credentials sent to the SDC.
                    example: c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCZ1FEZGpxeDNNMjh3ZHE2Rk11R2NFZHJqaGl3SFp5NDE0WXZFUmRDcVdnRXgrSXloNjVteHlkaVh1OVpoMXUyVTRtNDlnL0VUL2JxTklFNGgraUViQURjcjlScVFGRGZ4RC9pK1ZPSkhiQzQ0UERhZHFJd21vUGNoazYvQ0RoZVlJSmZTM0xTNmlkaC9SRGVFVHpnZ3lTaUI2Mm5yMnRmTkJ3V0ZScjV1Sko5dkNvdUxKRVBZbDBVMkpZNnBjd0paNk1lRDg5dU4rTjlHWFN2Vlh4bEZKNXg0VThReGFCMzJuNHZoekNiUzlYSVg1bGJJQnVIUEZ1bmMrNThPaUFzS0dwTTZ1NzhVR2V2TndOVzU0eVZmU2c4Q01XQ09vM1hiNTIrMnU2VHZlcE1BT2ZFU290YUd5NHV1RTBnUHYwSnowano3ZnFGTCt4d1AzNnNVY2pPRlIzQ1VhbEVpUDEyT2tTeEhreVNMUXJ3a2lFTVUvQ3VPUjdOWkdjUFd0dkVBaUZOTEN0VHhzY25Ma0xNNENkUEt3WnZQV3l3cHAyVGdValU4MEFaWkJZaGZBWTd3SFFQdDhrTkROMURhMWpWaHlwMWlycE5VbTEvaDNrS2srOFdFOVV2RjNDeVgyL1NqWUpPR2lMUWdVaXFUL3E5UkNMZUdVWStzaUFwS3ZyNS91UkU9IHNpd2FycmllQFNJV0FSUklFLU0tS1JBRgo=
                    type: string
                keyId:
                    description: The identifier of the RSA public key. This identifier is used by the SDC to know which private key to use to decrypt a string.
                    example: example-key-id
                    type: string
            type: object
        RaVpnDeviceInput:
            properties:
                deviceUids:
                    description: List of UIDs of the devices to refresh RA VPN sessions for. Each of these devices has to be an RA VPN headend (this is indicated by the `deviceRole` field in the device object being set to `RA_VPN_HEADEND`).
                    items:
                        type: string
                    minItems: 1
                    type: array
            required:
                - deviceUids
            type: object
        RaVpnSession:
            properties:
                assignedIpV4:
                    description: The IPv4 address assigned to the RA VPN session.
                    example: 172.16.0.2
                    type: string
                assignedIpV6:
                    description: The IPv6 address assigned to the RA VPN session.
                    example: 172.16.0.2
                    type: string
                auditSessionId:
                    description: The audit session ID associated with this RA VPN session.
                    example: 0a6405150000900065c0c86d
                    type: string
                bytesRx:
                    description: The number of bytes received during the RA VPN session.
                    example: 6102087
                    format: int64
                    type: integer
                bytesTx:
                    description: The number of bytes transmitted during the RA VPN session.
                    example: 9157513
                    format: int64
                    type: integer
                deviceUid:
                    description: The unique identifier, represented as a UUID, of the device associated with the RA VPN session.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                lastActiveTime:
                    description: The time (in UTC) at which the user was last active in the RA VPN session, represented using the RFC-3339 standard.
                    example: 2023-12-13T05:15:44Z
                    format: date-time
                    type: string
                location:
                    $ref: '#/components/schemas/Location'
                    description: The location of the client device.
                loginTime:
                    description: The time (in UTC) at which the user logged in to the RA VPN session, represented using the RFC-3339 standard.
                    example: 2023-12-13T05:15:44Z
                    format: date-time
                    type: string
                os:
                    $ref: '#/components/schemas/OS'
                    description: The operating system of the client device.
                publicIp:
                    description: The public IP address of the client that has established this RA VPN session.
                    example: 106.51.163.157
                    type: string
                status:
                    description: The status of the RA VPN session.
                    enum:
                        - ACTIVE
                        - TERMINATED
                    example: ACTIVE
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the VPN session.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                username:
                    description: The name of the user associated with the RA VPN session.
                    example: user@example.com
                    type: string
            required:
                - deviceUid
                - uid
                - username
            type: object
        RaVpnSessionHealthMetrics:
            properties:
                activeRavpnSessionsAvg:
                    description: The average number of active RA VPN sessions.
                    type: number
                inactiveRavpnSessionsAvg:
                    description: The average number of inactive or down RA VPN sessions.
                    type: number
                peakConcurRavpnSessions:
                    description: The peak concurrent RA VPN sessions active since the last reset.
                    type: number
            type: object
        RaVpnSessionPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/RaVpnSession'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        ReferenceInfo:
            properties:
                name:
                    description: The name of the referenced object
                    example: another-object
                    type: string
                objectType:
                    description: The object type
                    enum:
                        - NETWORK_OBJECT
                        - URL_OBJECT
                        - SERVICE_OBJECT
                        - NETWORK_GROUP
                        - URL_GROUP
                        - SERVICE_GROUP
                    example: NETWORK_OBJECT
                    type: string
                uid:
                    description: The unique identifier of the referenced object
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        RuleTimeRangeContent:
            description: The optional time range for which the access rule is active.
            properties:
                elements:
                    description: The list of elements.
                    items:
                        type: string
                    type: array
                name:
                    description: The name
                    example: any
                    type: string
                type:
                    description: The type of the policy object.
                    enum:
                        - NETWORK_OBJECT
                        - IPV4_ADDRESS_POOL
                        - IPV6_ADDRESS_POOL
                        - NETWORK_GROUP
                        - SERVICE_OBJECT
                        - SERVICE_TCP_OBJECT
                        - SERVICE_UDP_OBJECT
                        - SERVICE_ICMPV4_OBJECT
                        - SERVICE_ICMPV6_OBJECT
                        - SERVICE_PROTOCOL_OBJECT
                        - SERVICE_GROUP
                        - SERVICE_FTD_GROUP
                        - PROTOCOL_GROUP
                        - ICMP_GROUP
                        - URL_OBJECT
                        - URL_GROUP
                        - APPLICATION_FILTER_OBJECT
                        - TIME_RANGE
                    example: NETWORK_OBJECT
                    type: string
                uid:
                    description: The unique identifier.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        S2sVpnTunnelHealthMetrics:
            properties:
                tunnelId:
                    description: The unique identifier of the S2S VPN tunnel.
                    type: string
                tunnelName:
                    description: The name assigned to the S2S VPN tunnel.
                    type: string
                tunnelState:
                    description: The state of the S2S VPN tunnel. The possible values are TUNNEL_UP, TUNNEL_DOWN, and UNKNOWN.
                    enum:
                        - TUNNEL_UP
                        - TUNNEL_DOWN
                        - UNKNOWN
                    type: string
            type: object
        Sdc:
            properties:
                bootstrapData:
                    description: The bootstrap data is information used to automatically configure the SDC during its initial setup. This data is base64 encoded and includes essential details like the unique registration token and customer-specific settings that enable the SDC to communicate with and send data to Security Cloud Control. This field is populated only if the SDC is not onboarded.
                    example: Q0RPX1RPS0VOPSJleGFtcGxlLWNkby1hcGktdG9rZW4iCkNET19ET01BSU49ImNkby5jaXNjby5jb20iCkNET19URU5BTlQ9IkNET190ZXN0LXRlbmFudCIKQ0RPX0JPT1RTVFJBUF9VUkw9Imh0dHBzOi8vY2RvLmNpc2NvLmNvbS9zZGMvYm9vdHN0cmFwL0NET190ZXN0LXRlbmFudC9teS1zaGlueS1uZXctc2RjIgo=
                    type: string
                ipAddress:
                    description: The IP address of the SDC.
                    example: 202311071057
                    type: string
                lastHeartbeat:
                    description: The time (UTC; represented using the RFC-3339 standard) that a heartbeat was last received from the SDC. This serves as an indicator of the health of the SDC.
                    example: 2023-12-13T05:15:44Z
                    format: date-time
                    type: string
                name:
                    description: The name of the SDC. SDC names are unique in Security Cloud Control.
                    example: my-example-sdc
                    type: string
                publicKey:
                    $ref: '#/components/schemas/PublicKey'
                    description: Information on the public key used to encrypt credentials sent to the SDC.
                softwareVersion:
                    description: The software version running on the SDC.
                    example: 202311071057
                    type: string
                status:
                    $ref: '#/components/schemas/Status'
                    description: The status of the SDC.
                    example: ACTIVE
                uid:
                    description: The unique identifier, represented as a UUID, of the SDC in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        SdcCreateInput:
            properties:
                name:
                    type: string
            type: object
        SdcPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/Sdc'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        SdcPatchInput:
            properties:
                name:
                    type: string
            type: object
        SecureAccessMetadata:
            properties:
                commitStatus:
                    description: The deployment status of the Secure Access configuration associated with the device.
                    enum:
                        - CREATED
                        - VALIDATION_FAILED
                        - QUEUED
                        - IN_PROGRESS
                        - SKIPPED
                        - PARTIALLY_SUCCESSFUL
                        - SUCCESSFULLY_COMPLETED
                        - FAILED
                        - UNKNOWN
                    type: string
                numResources:
                    description: The number of private Cisco Secure Access resources associated with the device.
                    format: int32
                    type: integer
                numRules:
                    description: The number of Cisco Secure Access rules associated with the device.
                    format: int32
                    type: integer
            type: object
        Series:
            properties:
                timestamp:
                    format: date-time
                    type: string
                value:
                    format: double
                    type: number
            type: object
        ServiceObjectContent:
            properties:
                protocol:
                    description: The service object protocol
                    enum:
                        - TCP
                        - UDP
                        - ICMP
                        - ICMP4
                        - ICMP6
                        - TCP_UDP
                        - IGMP
                        - GGP
                        - ST2
                        - CBT
                        - EGP
                        - IGP
                        - BBNRCCMON
                        - NVP2
                        - PUP
                        - ARGUS
                        - EMCON
                        - XNET
                        - CHAOS
                        - MUX
                        - DCNMEAS
                        - HMP
                        - PRM
                        - XNSIDP
                        - TRUNK1
                        - TRUNK2
                        - LEAF1
                        - LEAF2
                        - RDP
                        - IRTP
                        - ISOTP4
                        - NETBLT
                        - MFENSP
                        - MERITINP
                        - SEP
                        - THREEPC
                        - IDPR
                        - XTP
                        - DDP
                        - IDPRCMTP
                        - TPPLUSPLUS
                        - IL
                        - SDRP
                        - IDRP
                        - RSVP
                        - GRE
                        - MHRP
                        - BNA
                        - ESP
                        - AH
                        - INLSP
                        - SWIPE
                        - NARP
                        - MOBILE
                        - TLSP
                        - SKIP
                        - IPv6NONXT
                        - CFTP
                        - SATEXPAK
                        - KRYPTOLAN
                        - RVD
                        - IPPC
                        - SATMON
                        - VISA
                        - IPCV
                        - CPNX
                        - CPHB
                        - WSN
                        - PVP
                        - BRSATMON
                        - SUNND
                        - WBMON
                        - WBEXPAK
                        - ISOIP
                        - VMTP
                        - SECUREVMTP
                        - VINES
                        - TTP
                        - NSFNETIGP
                        - DGP
                        - TCF
                        - EIGRP
                        - OSPFIGP
                        - SPRITERPC
                        - LARP
                        - MTP
                        - AX25
                        - IPIP
                        - MICP
                        - SCCSP
                        - ETHERIP
                        - ENCAP
                        - GMTP
                        - IFMP
                        - PNNI
                        - PIM
                        - ARIS
                        - SCPS
                        - QNX
                        - AN
                        - IPCOMP
                        - SNP
                        - COMPAQPEER
                        - IPXINIP
                        - VRRP
                        - PGM
                        - L2TP
                        - DDX
                        - IATP
                        - ST
                        - SRP
                        - UTI
                        - SMP
                        - SM
                        - PTP
                        - ISIS
                        - FIRE
                        - CRTP
                        - CRUDP
                        - SSCOPMCE
                        - IPLT
                        - SPS
                        - PIPE
                        - SCTP
                        - FC
                        - DIVERT
                        - CUSTOM
                    example: TCP
                    type: string
                serviceValue:
                    $ref: '#/components/schemas/ServiceObjectValueContent'
                    description: The value of the service object
                    example:
                        - "80"
                        - "81"
            type: object
        ServiceObjectValueContent:
            example: '{ "8000-9000"] }'
            oneOf:
                - $ref: '#/components/schemas/Icmp4Value'
                - $ref: '#/components/schemas/Icmp6Value'
                - $ref: '#/components/schemas/SourceDestinationPortsValue'
                - $ref: '#/components/schemas/PortsValue'
                - $ref: '#/components/schemas/ProtocolValueContent'
            properties:
                type:
                    enum:
                        - NETWORK_OBJECT
                        - URL_OBJECT
                        - SERVICE_OBJECT
                        - ICMP_4
                        - ICMP_6
                        - SOURCE_DESTINATION_PORT
                        - PORT
                        - PROTOCOL_VALUE
                    type: string
            type: object
        SharedObjectValue:
            properties:
                defaultContent:
                    $ref: '#/components/schemas/ObjectContent'
                    description: The default value of the object
                objectType:
                    description: The type of object
                    enum:
                        - NETWORK_OBJECT
                        - URL_OBJECT
                        - SERVICE_OBJECT
                        - NETWORK_GROUP
                        - URL_GROUP
                        - SERVICE_GROUP
                    example: NETWORK_OBJECT
                    type: string
                overrides:
                    description: The list of target overrides for the object. Each override the default content for its target.
                    items:
                        $ref: '#/components/schemas/Override'
                    type: array
            required:
                - defaultContent
                - objectType
            type: object
        SingleContent:
            oneOf:
                - $ref: '#/components/schemas/ServiceObjectContent'
                - $ref: '#/components/schemas/UrlObjectContent'
                - $ref: '#/components/schemas/NetworkObjectContent'
            properties:
                type:
                    enum:
                        - NETWORK_OBJECT
                        - URL_OBJECT
                        - SERVICE_OBJECT
                        - ICMP_4
                        - ICMP_6
                        - SOURCE_DESTINATION_PORT
                        - PORT
                        - PROTOCOL_VALUE
                    type: string
            type: object
        SourceDestinationPortsValue:
            properties:
                destination:
                    $ref: '#/components/schemas/PortsValue'
                source:
                    $ref: '#/components/schemas/PortsValue'
            type: object
        SourceDynamicObjectContent:
            description: The source dynamic object.
            properties:
                elements:
                    description: The list of elements.
                    items:
                        type: string
                    type: array
                name:
                    description: The name
                    example: any
                    type: string
                type:
                    description: The type of the policy object.
                    enum:
                        - NETWORK_OBJECT
                        - IPV4_ADDRESS_POOL
                        - IPV6_ADDRESS_POOL
                        - NETWORK_GROUP
                        - SERVICE_OBJECT
                        - SERVICE_TCP_OBJECT
                        - SERVICE_UDP_OBJECT
                        - SERVICE_ICMPV4_OBJECT
                        - SERVICE_ICMPV6_OBJECT
                        - SERVICE_PROTOCOL_OBJECT
                        - SERVICE_GROUP
                        - SERVICE_FTD_GROUP
                        - PROTOCOL_GROUP
                        - ICMP_GROUP
                        - URL_OBJECT
                        - URL_GROUP
                        - APPLICATION_FILTER_OBJECT
                        - TIME_RANGE
                    example: NETWORK_OBJECT
                    type: string
                uid:
                    description: The unique identifier.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        SourceNetworkContent:
            description: The source network.
            properties:
                elements:
                    description: The list of elements.
                    items:
                        type: string
                    type: array
                name:
                    description: The name
                    example: any
                    type: string
                type:
                    description: The type of the policy object.
                    enum:
                        - NETWORK_OBJECT
                        - IPV4_ADDRESS_POOL
                        - IPV6_ADDRESS_POOL
                        - NETWORK_GROUP
                        - SERVICE_OBJECT
                        - SERVICE_TCP_OBJECT
                        - SERVICE_UDP_OBJECT
                        - SERVICE_ICMPV4_OBJECT
                        - SERVICE_ICMPV6_OBJECT
                        - SERVICE_PROTOCOL_OBJECT
                        - SERVICE_GROUP
                        - SERVICE_FTD_GROUP
                        - PROTOCOL_GROUP
                        - ICMP_GROUP
                        - URL_OBJECT
                        - URL_GROUP
                        - APPLICATION_FILTER_OBJECT
                        - TIME_RANGE
                    example: NETWORK_OBJECT
                    type: string
                uid:
                    description: The unique identifier.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        SourcePortContent:
            description: The source port.
            properties:
                elements:
                    description: The list of elements.
                    items:
                        type: string
                    type: array
                name:
                    description: The name
                    example: any
                    type: string
                type:
                    description: The type of the policy object.
                    enum:
                        - NETWORK_OBJECT
                        - IPV4_ADDRESS_POOL
                        - IPV6_ADDRESS_POOL
                        - NETWORK_GROUP
                        - SERVICE_OBJECT
                        - SERVICE_TCP_OBJECT
                        - SERVICE_UDP_OBJECT
                        - SERVICE_ICMPV4_OBJECT
                        - SERVICE_ICMPV6_OBJECT
                        - SERVICE_PROTOCOL_OBJECT
                        - SERVICE_GROUP
                        - SERVICE_FTD_GROUP
                        - PROTOCOL_GROUP
                        - ICMP_GROUP
                        - URL_OBJECT
                        - URL_GROUP
                        - APPLICATION_FILTER_OBJECT
                        - TIME_RANGE
                    example: NETWORK_OBJECT
                    type: string
                uid:
                    description: The unique identifier.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            required:
                - name
            type: object
        SseDeviceData:
            properties:
                sseDeviceId:
                    type: string
                sseProtocolVersion:
                    enum:
                        - ONE
                        - TWO
                    type: string
            type: object
        Staged:
            properties:
                autoDeployEnabled:
                    description: 'Specifies whether changes to ZTNA settings are automatically deployed to the device. Note: This applies only to ZTNA-specific changes and does not affect the deployment of other pending changes.'
                    example: false
                    type: boolean
                domainSettings:
                    description: Configuration that defines how Secure Client communicates with the device.
                    items:
                        $ref: '#/components/schemas/DomainSettings'
                    type: array
            type: object
        StateMachineDetails:
            properties:
                identifier:
                    type: string
                lastError:
                    $ref: '#/components/schemas/StateMachineError'
            type: object
        StateMachineError:
            properties:
                actionIdentifier:
                    type: string
                errorCode:
                    type: string
                errorMessage:
                    type: string
            type: object
        Status:
            enum:
                - NEW
                - ONBOARDING
                - ACTIVE
                - INACTIVE
                - DISABLED
                - UNKNOWN
            type: string
        StatusInfo:
            properties:
                status:
                    description: The Status of the request.
                    example: OK
                    type: string
            type: object
        Summary:
            properties:
                average:
                    format: double
                    type: number
                latest:
                    format: double
                    type: number
                max:
                    format: double
                    type: number
            type: object
        Target:
            properties:
                displayName:
                    description: The display name of the target
                    example: My ASA
                    type: string
                id:
                    description: The ID of the target with which the object is associated. A target can be, for example, a device, service, or a shared policy (Ruleset).
                    example: '[7131daad-e813-4b8f-8f42-be1e241e8cdb]'
                    type: string
                type:
                    description: The target type
                    enum:
                        - ASA
                        - FDM_MANAGED_FTD
                        - CDFMC
                        - CDFMC_MANAGED_FTD
                        - SFCN
                        - AWS_VPC
                        - ONPREM_FMC
                        - MERAKI_MX
                        - FDM_RULESET
                        - ONPREM_FMC_MANAGED_FTD
                        - MCD
                        - SDWAN
                        - SECURE_ACCESS
                    example: ASA
                    type: string
            type: object
        TargetsRequest:
            properties:
                targetsUuids:
                    description: The list of UIDs of the targets to be deleted.
                    example:
                        - 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    items:
                        type: string
                    type: array
            type: object
        Tenant:
            properties:
                displayName:
                    deprecated: true
                    description: A human-readable display name for the enterprise (tenant). This is the tenant name displayed in the Security Cloud Control Web UI.
                    example: mytenantname
                    type: string
                name:
                    description: The name of the enterprise (tenant) in Security Cloud Control.
                    example: mytenantname@cisco.com
                    type: string
                payType:
                    deprecated: true
                    description: An enum that describes the payment type of the tenant in Security Cloud Control.
                    enum:
                        - PAYING
                        - NOT_PAYING
                        - TRIAL
                        - INTERNAL
                        - PARTNER
                        - DEMO
                    example: TRIAL
                    type: string
                securityCloudControlEnterpriseId:
                    description: The unique identifier, represented as a UUID, of the Security Cloud Control Enterprise this tenant is associated with.
                    example: dda3ce52-312c-477a-aa86-1fd1866ddab7
                    format: uuid
                    type: string
                uid:
                    description: The unique identifier, represented as a UUID, of the enterprise (tenant) in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
            type: object
        TenantPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/Tenant'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        TenantSettings:
            properties:
                aiAssistant:
                    description: Indicates if the tenant has the AI assistant enabled.
                    example: true
                    type: boolean
                asaHealthMetrics:
                    description: Indicates if the tenant collects ASA health metrics.
                    example: false
                    type: boolean
                autoAcceptDeviceChanges:
                    description: Indicates if changes made out-of-band on devices on the tenant are automatically accepted without manual approval.
                    example: true
                    type: boolean
                autoDiscoverOnPremFmcs:
                    description: Indicates if the system automatically discovers on-premise FMCs.
                    example: true
                    type: boolean
                changeRequestSupport:
                    description: Indicates if the tenant supports change requests.
                    example: true
                    type: boolean
                conflictDetectionInterval:
                    $ref: '#/components/schemas/ConflictDetectionInterval'
                    description: Specifies the default interval at which Security Cloud Control checks for changes made out-of-band on the devices on the tenant.
                    example: EVERY_6_HOURS
                denyCiscoSupportAccessToTenant:
                    description: Indicates if Cisco support is denied access to the tenant.
                    example: true
                    type: boolean
                mspPortalUid:
                    description: The unique identifier, represented as a UUID, of the MSP portal associated with the tenant.
                    example: dda3ce11-111c-477a-aa86-1fd1866ddab6
                    format: uuid
                    type: string
                multicloudDefense:
                    description: Indicates if the tenant has the multicloud defense enabled.
                    example: false
                    type: boolean
                policyAnalyzer:
                    description: Indicates if the tenant has the policy analyzer enabled.
                    example: true
                    type: boolean
                scheduledDeployments:
                    description: Indicates if the tenant has scheduled deployments enabled.
                    example: false
                    type: boolean
                uid:
                    description: The unique identifier, represented as a UUID, of the tenant in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    format: uuid
                    type: string
                webAnalytics:
                    description: Indicates if web analytics are enabled for the tenant.
                    example: true
                    type: boolean
            type: object
        UnifiedObjectListView:
            properties:
                description:
                    type: string
                issues:
                    $ref: '#/components/schemas/IssuesDto'
                labels:
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                name:
                    type: string
                overrideIds:
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                tags:
                    additionalProperties:
                        items:
                            type: string
                        type: array
                        uniqueItems: true
                    type: object
                targetIds:
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                uid:
                    format: uuid
                    type: string
                value:
                    $ref: '#/components/schemas/SharedObjectValue'
            type: object
        UniversalZtnaSettings:
            properties:
                deployed:
                    $ref: '#/components/schemas/Deployed'
                    description: Indicates that the settings have been successfully configured and deployed.
                staged:
                    $ref: '#/components/schemas/Staged'
                    description: Indicates that the settings have been configured but are not yet deployed.
                universalZtnaConfigured:
                    description: Indicates whether a device is configured for Zero Trust Network Access (ZTNA).
                    example: true
                    type: boolean
                universalZtnaEnabled:
                    description: Indicates whether a device is enabled for Zero Trust Network Access (ZTNA).
                    example: true
                    type: boolean
                universalZtnaSupported:
                    description: Indicates whether a device supports Zero Trust Network Access (ZTNA).
                    example: true
                    type: boolean
            type: object
        UpdateRequest:
            properties:
                description:
                    description: The description of the object
                    example: My object description
                    type: string
                labels:
                    description: The labels for the object
                    example:
                        - migration
                    items:
                        type: string
                    type: array
                    uniqueItems: true
                name:
                    description: The name of the object to update
                    example: my-object
                    type: string
                tags:
                    additionalProperties:
                        items:
                            type: string
                        type: array
                        uniqueItems: true
                    description: The tags for the object
                    example:
                        location:
                            - London
                            - Head-office
                    type: object
                value:
                    $ref: '#/components/schemas/SharedObjectValue'
                    description: The value of the object
            type: object
        UpgradeAsaDeviceInput:
            properties:
                asdmVersion:
                    description: The target ASDM software version to upgrade the device to.
                    example: '''7.6(2)'' or ''7.6(2).openjre'''
                    type: string
                softwareVersion:
                    description: The target ASA firmware version to upgrade the device to.
                    example: 9.4(1)
                    type: string
            type: object
        UpgradeFtdDeviceInput:
            properties:
                stageUpgrade:
                    default: false
                    description: A boolean value, indicating whether the upgrade should be staged. If this is set to true, the image will be downloaded on to the device and readiness checks will be performed. However, the upgrade will not be applied to the device.
                    example: false
                    type: boolean
                upgradePackageUid:
                    description: The unique identifier, represented as a UUID, of the upgrade package to be applied to the device.
                    example: 256461f6-bd60-11ef-8beb-6cf1610cf55d
                    format: uuid
                    type: string
            required:
                - upgradePackageUid
            type: object
        UpgradeFtdDevicesInput:
            properties:
                deviceUids:
                    description: The set of unique identifiers, represented as UUIDs, of the devices to upgrade in Security Cloud Control. All of the devices in the list have to be compatible with the upgrade package.
                    example:
                        - 256461f6-bd60-11ef-8beb-6cf1610cf55d
                    items:
                        format: uuid
                        type: string
                    maxItems: 50
                    minItems: 1
                    type: array
                    uniqueItems: true
                stageUpgrade:
                    default: false
                    description: A boolean value, indicating whether the upgrade should be staged. If this is set to true, the image will be downloaded on to the device and readiness checks will be performed. However, the upgrade will not be applied to the device.
                    example: false
                    type: boolean
                upgradePackageUid:
                    description: The unique identifier, represented as a UUID, of the upgrade package to be applied to the device.
                    example: 256461f6-bd60-11ef-8beb-6cf1610cf55d
                    format: uuid
                    type: string
            required:
                - deviceUids
                - upgradePackageUid
            type: object
        UrlObjectContent:
            properties:
                url:
                    description: The URL literal
                    example: https://www.cisco.com/
                    minLength: 1
                    type: string
            required:
                - url
            type: object
        User:
            properties:
                apiOnlyUser:
                    description: Whether the user is API-only, an API-only user cannot access Security Cloud Control in the UI.
                    example: false
                    type: boolean
                emailAddress:
                    description: The e-mail address in Security Cloud Control.
                    example: ram.singh@cisco.com
                    type: string
                firstName:
                    description: The first name of the user in Security Cloud Control.
                    example: Ram
                    type: string
                lastName:
                    description: The last name of the user in Security Cloud Control.
                    example: Singh
                    type: string
                lastSuccessfulLogin:
                    description: The time (UTC; represented using the RFC-3339 standard) that indicate the last time the user successfully logged in to Security Cloud Control.
                    example: 2023-12-13T05:15:44Z
                    format: date-time
                    type: string
                name:
                    deprecated: true
                    description: The username (e-mail address) in Security Cloud Control.
                    example: ram.singh@cisco.com
                    type: string
                roles:
                    description: Roles associated with this user in Security Cloud Control.
                    example: '[ROLE_ADMIN]'
                    items:
                        $ref: '#/components/schemas/UserRole'
                    type: array
                uid:
                    description: The unique identifier of the user in Security Cloud Control.
                    example: 7131daad-e813-4b8f-8f42-be1e241e8cdb
                    type: string
            type: object
        UserCreateOrUpdateInput:
            properties:
                apiOnlyUser:
                    default: false
                    description: Whether the user is API-only, an API-only user cannot access Security Cloud Control in the UI.
                    example: false
                    type: boolean
                firstName:
                    description: 'The first name of the user in Security Cloud Control. Note: This field must not be specified for API-only users.'
                    example: Ram
                    type: string
                lastName:
                    description: 'The last name of the user in Security Cloud Control. Note: This field must not be specified for API-only users.'
                    example: Singh
                    type: string
                name:
                    description: The name of the user in Security Cloud Control. This has to be a valid email if creating a human user, and must not be an email if creating an API-only user.
                    example: myusername@cisco.com
                    minLength: 1
                    type: string
                role:
                    description: The user role in Security Cloud Control.
                    example: ROLE_ADMIN
                    type: string
            required:
                - name
            type: object
        UserInput:
            properties:
                apiOnlyUser:
                    description: Whether the user is an API-only user
                    example: false
                    type: boolean
                firstName:
                    description: 'The first name of the user in Security Cloud Control. If this is not set, the first name is set to the username. Note: This field must not be specified for API-only users.'
                    example: Ram
                    type: string
                lastName:
                    description: 'The last name of the user in Security Cloud Control. If this is not set, the last name is set to the username. Note: This field must not be specified for API-only users.'
                    example: Singh
                    type: string
                role:
                    $ref: '#/components/schemas/UserRole'
                    description: The role to assign to the user in the Security Cloud Control tenant.
                    example: ROLE_ADMIN
                username:
                    description: The name of the user in Security Cloud Control. This must be a valid e-mail address if the user is not an API-only user.
                    example: smith@jones.com
                    minLength: 1
                    type: string
            required:
                - role
                - username
            type: object
        UserPage:
            properties:
                count:
                    description: The total number of results available.
                    example: 100
                    format: int32
                    type: integer
                items:
                    description: The list of items retrieved.
                    items:
                        $ref: '#/components/schemas/User'
                    type: array
                limit:
                    description: The number of results retrieved.
                    example: 50
                    format: int32
                    type: integer
                offset:
                    description: The offset of the results retrieved. The Security Cloud Control API uses the offset field to determine the index of the first result retrieved, and will retrieve `limit` results from the offset specified.
                    example: 0
                    format: int32
                    type: integer
            type: object
        UserRole:
            enum:
                - ROLE_ADMIN
                - ROLE_SUPER_ADMIN
                - ROLE_READ_ONLY
                - ROLE_DEPLOY_ONLY
                - ROLE_EDIT_ONLY
                - ROLE_VPN_SESSIONS_MANAGER
                - ROLE_FWAAS
                - ROLE_PASSIVE_IDENTITY_AGENT
            type: string
        ZtpOnboardingInput:
            properties:
                adminPassword:
                    description: Specify the initial provisioning password. This is required for setting up the FTD, and can be ignored if password is already set on the device.
                    type: string
                deviceGroupUid:
                    description: Specify the unique identifier, represented as a UUID, of the device group which the device will be a part of after it finishes registering with Security Cloud Control.
                    format: uuid
                    type: string
                fmcAccessPolicyUid:
                    description: 'Specify the unique identifier, represented as a UUID, of the FMC access policy to apply to this device. If this field is specified, the ''templates'' field must remain unspecified. Note: If both ''fmcAccessPolicyUid'' and ''template'' fields are unspecified, the operation will fail.'
                    format: uuid
                    type: string
                licenses:
                    description: Specify a set of licenses to apply to the device.
                    example:
                        - BASE
                        - CARRIER
                    items:
                        enum:
                            - BASE
                            - CARRIER
                            - THREAT
                            - MALWARE
                            - URLFilter
                        type: string
                    minItems: 1
                    type: array
                    uniqueItems: true
                name:
                    description: Specify a human-readable name for the device.
                    example: My Zero-touch FTD
                    minLength: 1
                    type: string
                serialNumber:
                    description: Specify the serial number of the FTD device to be onboarded. When a device with this serial number is plugged in and connected to the Internet, it will automatically be registered to this Security Cloud Control tenant.
                    minLength: 1
                    type: string
                template:
                    $ref: '#/components/schemas/ZtpOnboardingTemplateConfiguration'
                    description: 'Specify the template to apply to this device. If this field is specified, the ''fmcAccessPolicyUid'' field must remain unspecified. Note: If both ''fmcAccessPolicyUid'' and ''template'' fields are unspecified, the operation will fail.'
            required:
                - licenses
                - name
                - serialNumber
            type: object
        ZtpOnboardingTemplateConfiguration:
            properties:
                objectOverrides:
                    description: 'Specify a list of objects to override. All objects that have been marked as overridable in the template must be defined here. Note: Any overrides defined here that are not present in the template configuration will be ignored.'
                    items:
                        $ref: '#/components/schemas/FmcObjectOverride'
                    type: array
                templateVariables:
                    description: 'Specify the list of template variables configured on the template. All required template variables must be defined here, and should have values valid for the type of the variable. Any invalid input will result in the template not being applied to the device upon onboarding. Note: Any variables defined here that are not present in the template will be ignored.'
                    items:
                        $ref: '#/components/schemas/FmcTemplateVariable'
                    type: array
                uid:
                    description: Specify the unique identifier, represented as a UUID, of the template to apply to the onboarded device.
                    example: 2cadad15-dc8b-4bc4-899f-b9badcfc56a3
                    format: uuid
                    type: string
            required:
                - uid
            type: object
    responses:
        http400BadRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CommonApiError'
            description: Invalid input provided. Check the response for details.
        http401Unauthorised:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthenticationError'
            description: Request not authorized.
        http403Forbidden:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CommonApiError'
            description: User does not have sufficient privileges to perform this operation.
        http404NotFound:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CommonApiError'
            description: Entity not found.
        http405MethodNotAllowed:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CommonApiError'
            description: Method not allowed.
        http409Conflict:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CommonApiError'
            description: Conflict.
        http422UnprocessableEntity:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CommonApiError'
            description: Unprocessable entity.
    securitySchemes:
        bearerAuth:
            bearerFormat: JWT
            scheme: bearer
            type: http
